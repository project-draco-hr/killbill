{
  final UUID accountId=UUID.randomUUID();
  final UUID bundleId=UUID.randomUUID();
  final DateTime targetDate=new DateTime(2011,5,23,0,0,0,0);
  final DefaultInvoice invoice=new DefaultInvoice(accountId,clock.getUTCNow(),targetDate,Currency.USD);
  invoiceDao.create(invoice,context);
  final UUID invoiceId=invoice.getId();
  final DateTime startDate=new DateTime(2011,3,1,0,0,0,0);
  final BigDecimal rate=new BigDecimal("20.00");
  final UUID subscriptionId=UUID.randomUUID();
  final RecurringInvoiceItem item=new RecurringInvoiceItem(invoiceId,accountId,bundleId,subscriptionId,"test plan","test phase",startDate,startDate.plusMonths(1),rate,rate,Currency.USD);
  invoiceItemSqlDao.create(item,context);
  final List<InvoiceItem> items=invoiceItemSqlDao.getInvoiceItemsByAccount(accountId.toString());
  assertEquals(items.size(),1);
}
