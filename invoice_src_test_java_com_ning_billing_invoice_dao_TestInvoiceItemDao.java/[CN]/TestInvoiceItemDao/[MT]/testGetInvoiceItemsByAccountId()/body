{
  final UUID accountId=account.getId();
  final UUID bundleId=UUID.randomUUID();
  final LocalDate targetDate=new LocalDate(2011,5,23);
  final DefaultInvoice invoice=new DefaultInvoice(accountId,clock.getUTCToday(),targetDate,Currency.USD);
  invoiceUtil.createInvoice(invoice,true,context);
  final UUID invoiceId=invoice.getId();
  final LocalDate startDate=new LocalDate(2011,3,1);
  final BigDecimal rate=new BigDecimal("20.00");
  final UUID subscriptionId=UUID.randomUUID();
  final RecurringInvoiceItem item=new RecurringInvoiceItem(invoiceId,accountId,bundleId,subscriptionId,"test plan","test phase",startDate,startDate.plusMonths(1),rate,rate,Currency.USD);
  invoiceUtil.createInvoiceItem(item,context);
  final List<InvoiceItemModelDao> items=invoiceUtil.getInvoiceItemByAccountId(context);
  assertEquals(items.size(),1);
}
