{
  final UUID accountId=UUID.randomUUID();
  final UUID invoiceId=UUID.randomUUID();
  final UUID bundleId=UUID.randomUUID();
  final LocalDate startDate=new LocalDate(2011,3,1);
  final BigDecimal rate=new BigDecimal("20.00");
  for (int i=0; i < 5; i++) {
    final UUID subscriptionId=UUID.randomUUID();
    final BigDecimal amount=rate.multiply(new BigDecimal(i + 1));
    final RecurringInvoiceItem item=new RecurringInvoiceItem(invoiceId,accountId,bundleId,subscriptionId,"test plan","test phase",startDate,startDate.plusMonths(1),amount,amount,Currency.USD);
    createInvoiceItem(item,internalCallContext);
  }
  final List<InvoiceItemModelDao> items=invoiceItemSqlDao.getInvoiceItemsByInvoice(invoiceId.toString(),internalCallContext);
  assertEquals(items.size(),5);
}
