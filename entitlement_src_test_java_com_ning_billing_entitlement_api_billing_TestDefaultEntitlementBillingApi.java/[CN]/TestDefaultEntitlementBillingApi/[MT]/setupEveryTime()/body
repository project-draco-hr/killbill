{
  bundles=new ArrayList<SubscriptionBundle>();
  final SubscriptionBundle bundle=new SubscriptionBundleData(zeroId,"TestKey",oneId,clock.getUTCNow().minusDays(4),null);
  bundles.add(bundle);
  subscriptionTransitions=new LinkedList<SubscriptionEventTransition>();
  subscriptions=new LinkedList<Subscription>();
  SubscriptionBuilder builder=new SubscriptionBuilder();
  subscriptionStartDate=clock.getUTCNow().minusDays(3);
  builder.setStartDate(subscriptionStartDate).setId(oneId);
  subscription=new SubscriptionData(builder){
    @Override public List<SubscriptionEventTransition> getBillingTransitions(){
      return subscriptionTransitions;
    }
  }
;
  subscriptions.add(subscription);
  dao=BrainDeadProxyFactory.createBrainDeadProxyFor(EntitlementDao.class);
  ((ZombieControl)dao).addResult("getSubscriptionBundleForAccount",bundles);
  ((ZombieControl)dao).addResult("getSubscriptions",subscriptions);
  ((ZombieControl)dao).addResult("getSubscriptionFromId",subscription);
  ((ZombieControl)dao).addResult("getSubscriptionBundleFromId",bundle);
  assertTrue(true);
}
