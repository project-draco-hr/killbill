{
  Currency currency=null;
  String externalKey=null;
  String accountKey=null;
  final SubscriptionBundle bundle=entitlementApi.getBundleFromId(transition.getBundleId());
  if (bundle != null) {
    externalKey=bundle.getKey();
    final Account account=accountApi.getAccountById(bundle.getAccountId());
    if (account != null) {
      accountKey=account.getExternalKey();
      currency=account.getCurrency();
    }
  }
  DateTime previousEffectiveTransitionTime=null;
  if (!BusinessSubscriptionEvent.EventType.ADD.equals(event.getEventType()) && !BusinessSubscriptionEvent.EventType.RE_ADD.equals(event.getEventType())) {
    final List<BusinessSubscriptionTransition> transitions=sqlDao.getTransitions(externalKey);
    if (transitions != null && transitions.size() > 0) {
      for (      final BusinessSubscriptionTransition candidate : transitions) {
        if (candidate != null && candidate.getNextSubscription() != null && candidate.getNextSubscription().getStartDate().isBefore(transition.getEffectiveTransitionTime())) {
          previousEffectiveTransitionTime=candidate.getNextSubscription().getStartDate();
        }
      }
    }
  }
  final BusinessSubscription prevSubscription;
  if (previousEffectiveTransitionTime == null) {
    prevSubscription=null;
  }
 else {
    prevSubscription=new BusinessSubscription(transition.getPreviousPriceList(),transition.getPreviousPlan(),transition.getPreviousPhase(),currency,previousEffectiveTransitionTime,transition.getPreviousState(),transition.getSubscriptionId(),transition.getBundleId(),catalogService.getFullCatalog());
  }
  final BusinessSubscription nextSubscription;
  if (transition.getNextPlan() == null) {
    nextSubscription=null;
  }
 else {
    nextSubscription=new BusinessSubscription(transition.getNextPriceList(),transition.getNextPlan(),transition.getNextPhase(),currency,transition.getEffectiveTransitionTime(),transition.getNextState(),transition.getSubscriptionId(),transition.getBundleId(),catalogService.getFullCatalog());
  }
  record(transition.getTotalOrdering(),externalKey,accountKey,transition.getRequestedTransitionTime(),event,prevSubscription,nextSubscription);
}
