{
  final Collection<InvoiceItem> otherInvoiceItems=Collections2.filter(otherInvoiceItemsOnAllInvoices,new Predicate<InvoiceItem>(){
    @Override public boolean apply(    final InvoiceItem input){
      return input.getInvoiceId().equals(invoiceItem.getInvoiceId());
    }
  }
);
  return !(InvoiceItemType.CBA_ADJ.equals(invoiceItem.getInvoiceItemType()) && (otherInvoiceItems.size() == 1 && InvoiceItemType.CREDIT_ADJ.equals(otherInvoiceItems.iterator().next().getInvoiceItemType()) && otherInvoiceItems.iterator().next().getInvoiceId().equals(invoiceItem.getInvoiceId()) && otherInvoiceItems.iterator().next().getAmount().compareTo(invoiceItem.getAmount().negate()) == 0));
}
