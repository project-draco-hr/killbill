{
  clock.setTime(new DateTime(2012,4,25,0,3,42,0));
  final Account accountJson=createAccountWithPMBundleAndSubscriptionAndWaitForFirstInvoice();
  final List<Invoice> invoices=killBillClient.getInvoicesForAccount(accountJson.getAccountId());
  assertEquals(invoices.size(),2);
  final Invoice invoiceWithPositiveAmount=Iterables.tryFind(invoices,new Predicate<Invoice>(){
    @Override public boolean apply(    final Invoice input){
      return input.getAmount().compareTo(BigDecimal.ZERO) > 0;
    }
  }
).orNull();
  Assert.assertNotNull(invoiceWithPositiveAmount);
  final InvoicePayments objFromJson=killBillClient.getInvoicePayment(invoiceWithPositiveAmount.getInvoiceId());
  assertEquals(objFromJson.size(),1);
  assertEquals(invoiceWithPositiveAmount.getAmount().compareTo(objFromJson.get(0).getPurchasedAmount()),0);
}
