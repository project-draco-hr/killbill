{
  final Account accountJson=createAccountNoPMBundleAndSubscriptionAndWaitForFirstInvoice();
  assertEquals(killBillClient.getInvoicesForAccount(accountJson.getAccountId()).size(),2);
  final BigDecimal chargeAmount=BigDecimal.TEN;
  final List<InvoiceItem> externalCharges=new ArrayList<InvoiceItem>();
  final InvoiceItem externalCharge1=new InvoiceItem();
  externalCharge1.setAccountId(accountJson.getAccountId());
  externalCharge1.setAmount(chargeAmount);
  externalCharge1.setDescription(UUID.randomUUID().toString());
  externalCharges.add(externalCharge1);
  final InvoiceItem externalCharge2=new InvoiceItem();
  externalCharge2.setAccountId(accountJson.getAccountId());
  externalCharge2.setAmount(chargeAmount);
  externalCharge2.setCurrency(Currency.valueOf(accountJson.getCurrency()));
  externalCharge2.setDescription(UUID.randomUUID().toString());
  externalCharges.add(externalCharge2);
  final List<InvoiceItem> createdExternalCharges=killBillClient.createExternalCharges(externalCharges,clock.getUTCNow(),false,createdBy,reason,comment);
  assertEquals(createdExternalCharges.size(),2);
  assertEquals(createdExternalCharges.get(0).getCurrency().toString(),accountJson.getCurrency());
  assertEquals(createdExternalCharges.get(1).getCurrency().toString(),accountJson.getCurrency());
  assertEquals(killBillClient.getInvoicesForAccount(accountJson.getAccountId()).size(),3);
}
