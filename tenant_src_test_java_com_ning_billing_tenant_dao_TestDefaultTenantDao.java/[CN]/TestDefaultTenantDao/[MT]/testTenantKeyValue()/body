{
  final DefaultTenantDao tenantDao=new DefaultTenantDao(getDBI(),clock,controllerDispatcher,new DefaultNonEntityDao(getDBI()));
  final DefaultTenant tenant=new DefaultTenant(UUID.randomUUID(),null,null,UUID.randomUUID().toString(),UUID.randomUUID().toString(),UUID.randomUUID().toString());
  tenantDao.create(new TenantModelDao(tenant),internalCallContext);
  tenantDao.addTenantKeyValue("TheKey","TheValue",internalCallContext);
  List<String> value=tenantDao.getTenantValueForKey("TheKey",internalCallContext);
  Assert.assertEquals(value.size(),1);
  Assert.assertEquals(value.get(0),"TheValue");
  tenantDao.addTenantKeyValue("TheKey","TheSecondValue",internalCallContext);
  value=tenantDao.getTenantValueForKey("TheKey",internalCallContext);
  Assert.assertEquals(value.size(),2);
  tenantDao.deleteTenantKey("TheKey",internalCallContext);
  value=tenantDao.getTenantValueForKey("TheKey",internalCallContext);
  Assert.assertEquals(value.size(),0);
}
