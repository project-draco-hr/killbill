{
  final Audited auditedAnnotation=method.getAnnotation(Audited.class);
  final Cachable cachableAnnotation=method.getAnnotation(Cachable.class);
  if (auditedAnnotation != null) {
    return invokeWithAuditAndHistory(auditedAnnotation,method,args);
  }
 else   if (cachableAnnotation != null) {
    return invokeWithCaching(cachableAnnotation,method,args);
  }
 else {
    return prof.executeWithProfiling(ProfilingFeatureType.DAO_DETAILS,sqlDaoClass.getSimpleName() + " (raw):" + method.getName(),new WithProfilingCallback(){
      @Override public Object execute() throws Throwable {
        return method.invoke(sqlDao,args);
      }
    }
);
  }
}
