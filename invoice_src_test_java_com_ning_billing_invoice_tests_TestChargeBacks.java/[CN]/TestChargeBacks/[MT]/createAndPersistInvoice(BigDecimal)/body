{
  final Invoice invoice=Mockito.mock(Invoice.class);
  final UUID invoiceId=UUID.randomUUID();
  final UUID accountId=UUID.randomUUID();
  Mockito.when(invoice.getId()).thenReturn(invoiceId);
  Mockito.when(invoice.getAccountId()).thenReturn(accountId);
  Mockito.when(invoice.getInvoiceDate()).thenReturn(clock.getUTCNow());
  Mockito.when(invoice.getTargetDate()).thenReturn(clock.getUTCNow());
  Mockito.when(invoice.getCurrency()).thenReturn(CURRENCY);
  Mockito.when(invoice.isMigrationInvoice()).thenReturn(false);
  final List<InvoiceItem> items=new ArrayList<InvoiceItem>();
  items.add(createInvoiceItem(invoiceId,accountId,amount));
  Mockito.when(invoice.getInvoiceItems()).thenReturn(items);
  invoiceSqlDao.create(invoice,context);
  return invoice;
}
