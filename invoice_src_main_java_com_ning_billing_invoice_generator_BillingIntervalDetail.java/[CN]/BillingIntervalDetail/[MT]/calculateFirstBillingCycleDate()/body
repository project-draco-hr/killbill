{
  final int lastDayOfMonth=startDate.dayOfMonth().getMaximumValue();
  final LocalDate billingCycleDate;
  if (billingCycleDay > lastDayOfMonth) {
    billingCycleDate=new LocalDate(startDate.getYear(),startDate.getMonthOfYear(),lastDayOfMonth,startDate.getChronology());
  }
 else {
    billingCycleDate=new LocalDate(startDate.getYear(),startDate.getMonthOfYear(),billingCycleDay,startDate.getChronology());
  }
  int numberOfPeriods=0;
  final int numberOfMonthsInPeriod=billingPeriod.getNumberOfMonths();
  LocalDate proposedDate=billingCycleDate;
  while (proposedDate.isBefore(startDate)) {
    proposedDate=proposedDate.plusMonths(numberOfPeriods * numberOfMonthsInPeriod);
    numberOfPeriods+=1;
  }
  firstBillingCycleDate=alignProposedBillCycleDate(proposedDate);
}
