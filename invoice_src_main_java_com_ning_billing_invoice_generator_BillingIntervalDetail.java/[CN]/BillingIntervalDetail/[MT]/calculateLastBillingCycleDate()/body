{
  LocalDate proposedDate=firstBillingCycleDate;
  int numberOfPeriods=0;
  while (!proposedDate.isAfter(effectiveEndDate)) {
    proposedDate=firstBillingCycleDate.plusMonths(numberOfPeriods * billingPeriod.getNumberOfMonths());
    numberOfPeriods+=1;
  }
  proposedDate=proposedDate.plusMonths(-billingPeriod.getNumberOfMonths());
  if (proposedDate.dayOfMonth().get() < billingCycleDay) {
    final int lastDayOfTheMonth=proposedDate.dayOfMonth().getMaximumValue();
    if (lastDayOfTheMonth < billingCycleDay) {
      proposedDate=new LocalDate(proposedDate.getYear(),proposedDate.getMonthOfYear(),lastDayOfTheMonth);
    }
 else {
      proposedDate=new LocalDate(proposedDate.getYear(),proposedDate.getMonthOfYear(),billingCycleDay);
    }
  }
  if (proposedDate.isBefore(firstBillingCycleDate)) {
    lastBillingCycleDate=firstBillingCycleDate;
  }
 else {
    lastBillingCycleDate=proposedDate;
  }
}
