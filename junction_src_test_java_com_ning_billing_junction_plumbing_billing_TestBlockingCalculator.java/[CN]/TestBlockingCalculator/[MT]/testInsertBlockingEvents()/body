{
  final DateTime now=clock.getUTCNow();
  final List<DisabledDuration> disabledDuration=new ArrayList<BlockingCalculator.DisabledDuration>();
  final SortedSet<BillingEvent> billingEvents=new TreeSet<BillingEvent>();
  disabledDuration.add(new DisabledDuration(now,null));
  final BillingEvent A=createRealEvent(now.minusDays(1).minusHours(1),subscription1);
  final BillingEvent B=createRealEvent(now.minusDays(1),subscription2);
  final BillingEvent C=createRealEvent(now.plusDays(1),subscription2);
  final BillingEvent D=createRealEvent(now.plusDays(3),subscription3);
  billingEvents.add(A);
  billingEvents.add(B);
  billingEvents.add(C);
  billingEvents.add(D);
  final List<BlockingState> blockingStates=new ArrayList<BlockingState>();
  blockingStates.add(new DefaultBlockingState(bundleId1,DISABLED_BUNDLE,Blockable.Type.SUBSCRIPTION_BUNDLE,"test",true,true,true,now));
  blockingStates.add(new DefaultBlockingState(bundleId1,CLEAR_BUNDLE,Blockable.Type.SUBSCRIPTION_BUNDLE,"test",false,false,false,now.plusDays(2)));
  Mockito.when(blockingApi.getBlockingHistory(Mockito.<Blockable>anyObject())).thenReturn(blockingStates);
  odc.insertBlockingEvents(billingEvents);
  assertEquals(billingEvents.size(),7);
  final SortedSet<BillingEvent> s1Events=odc.filter(billingEvents,subscription1);
  final Iterator<BillingEvent> it1=s1Events.iterator();
  assertEquals(it1.next(),A);
  assertEquals(it1.next().getTransitionType(),SubscriptionTransitionType.CANCEL);
  assertEquals(it1.next().getTransitionType(),SubscriptionTransitionType.RE_CREATE);
  final SortedSet<BillingEvent> s2Events=odc.filter(billingEvents,subscription2);
  final Iterator<BillingEvent> it2=s2Events.iterator();
  assertEquals(it2.next(),B);
  assertEquals(it2.next().getTransitionType(),SubscriptionTransitionType.CANCEL);
  assertEquals(it2.next().getTransitionType(),SubscriptionTransitionType.RE_CREATE);
  final SortedSet<BillingEvent> s3Events=odc.filter(billingEvents,subscription3);
  final Iterator<BillingEvent> it3=s3Events.iterator();
  assertEquals(it3.next(),D);
}
