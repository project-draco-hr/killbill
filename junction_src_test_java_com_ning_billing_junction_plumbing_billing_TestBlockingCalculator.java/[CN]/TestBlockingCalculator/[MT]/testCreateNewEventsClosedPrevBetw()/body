{
  final DateTime now=clock.getUTCNow();
  final List<DisabledDuration> disabledDuration=new ArrayList<BlockingCalculator.DisabledDuration>();
  final SortedSet<BillingEvent> billingEvents=new TreeSet<BillingEvent>();
  disabledDuration.add(new DisabledDuration(now,now.plusDays(2)));
  billingEvents.add(createRealEvent(now.minusDays(1),subscription1));
  billingEvents.add(createRealEvent(now.plusDays(1),subscription1));
  final SortedSet<BillingEvent> results=odc.createNewEvents(disabledDuration,billingEvents,account,subscription1);
  assertEquals(results.size(),2);
  assertEquals(results.first().getEffectiveDate(),now);
  assertEquals(results.first().getRecurringPrice(),BigDecimal.ZERO);
  assertEquals(results.first().getTransitionType(),SubscriptionTransitionType.START_BILLING_DISABLED);
  assertEquals(results.last().getEffectiveDate(),now.plusDays(2));
  assertEquals(results.last().getRecurringPrice(),billingEvents.first().getRecurringPrice());
  assertEquals(results.last().getTransitionType(),SubscriptionTransitionType.END_BILLING_DISABLED);
}
