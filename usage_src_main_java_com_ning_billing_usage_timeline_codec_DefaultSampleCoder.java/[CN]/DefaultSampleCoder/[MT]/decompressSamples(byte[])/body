{
  final List<ScalarSample> returnedSamples=new ArrayList<ScalarSample>();
  final ByteArrayInputStream byteStream=new ByteArrayInputStream(sampleBytes);
  final DataInputStream inputStream=new DataInputStream(byteStream);
  while (true) {
    final int opcodeByte;
    opcodeByte=inputStream.read();
    if (opcodeByte == -1) {
      break;
    }
    final SampleOpcode opcode=SampleOpcode.getOpcodeFromIndex(opcodeByte);
switch (opcode) {
case REPEAT_BYTE:
case REPEAT_SHORT:
      final int repeatCount=opcode == SampleOpcode.REPEAT_BYTE ? inputStream.readUnsignedByte() : inputStream.readUnsignedShort();
    final SampleOpcode repeatedOpcode=SampleOpcode.getOpcodeFromIndex(inputStream.read());
  final Object value=decodeScalarValue(inputStream,repeatedOpcode);
for (int i=0; i < repeatCount; i++) {
  returnedSamples.add(new ScalarSample(repeatedOpcode,value));
}
break;
default :
returnedSamples.add(new ScalarSample(opcode,decodeScalarValue(inputStream,opcode)));
break;
}
}
return returnedSamples;
}
