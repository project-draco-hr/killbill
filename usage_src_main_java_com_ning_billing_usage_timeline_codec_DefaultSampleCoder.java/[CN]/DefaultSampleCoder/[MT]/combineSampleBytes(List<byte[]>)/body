{
  final ByteArrayOutputStream outputStream=new ByteArrayOutputStream();
  final DataOutputStream dataStream=new DataOutputStream(outputStream);
  try {
    SampleBase lastSample=null;
    for (    final byte[] samples : sampleBytesList) {
      final ByteArrayInputStream byteStream=new ByteArrayInputStream(samples);
      final DataInputStream byteDataStream=new DataInputStream(byteStream);
      while (true) {
        final int opcodeByte=byteDataStream.read();
        if (opcodeByte == -1) {
          break;
        }
        final SampleOpcode opcode=SampleOpcode.getOpcodeFromIndex(opcodeByte);
switch (opcode) {
case REPEAT_BYTE:
case REPEAT_SHORT:
          final int newRepeatCount=opcode == SampleOpcode.REPEAT_BYTE ? byteDataStream.read() : byteDataStream.readUnsignedShort();
        final SampleOpcode newRepeatedOpcode=SampleOpcode.getOpcodeFromIndex(byteDataStream.read());
      final Object newValue=decodeOpcodeArg(byteDataStream,newRepeatedOpcode);
    final ScalarSample newRepeatedSample=new ScalarSample(newRepeatedOpcode,newValue);
  if (lastSample == null) {
    lastSample=new RepeatSample(newRepeatCount,new ScalarSample(newRepeatedOpcode,newValue));
  }
 else   if (lastSample instanceof RepeatSample) {
    final RepeatSample repeatSample=(RepeatSample)lastSample;
    final ScalarSample repeatedScalarSample=repeatSample.getSampleRepeated();
    if (repeatedScalarSample.getOpcode() == newRepeatedOpcode && (newRepeatedOpcode.getNoArgs() || (ScalarSample.sameSampleValues(repeatedScalarSample.getSampleValue(),newValue) && repeatSample.getRepeatCount() + newRepeatCount < RepeatSample.MAX_SHORT_REPEAT_COUNT))) {
      repeatSample.incrementRepeatCount(newRepeatCount);
    }
 else {
      encodeSample(dataStream,lastSample);
      lastSample=new RepeatSample(newRepeatCount,newRepeatedSample);
    }
  }
 else   if (lastSample.equals(newRepeatedSample)) {
    lastSample=new RepeatSample(newRepeatCount + 1,newRepeatedSample);
  }
 else {
    encodeSample(dataStream,lastSample);
    lastSample=new RepeatSample(newRepeatCount,newRepeatedSample);
  }
break;
default :
final ScalarSample newSample=new ScalarSample(opcode,decodeOpcodeArg(byteDataStream,opcode));
if (lastSample == null) {
lastSample=newSample;
}
 else if (lastSample instanceof RepeatSample) {
final RepeatSample repeatSample=(RepeatSample)lastSample;
final ScalarSample repeatedScalarSample=repeatSample.getSampleRepeated();
if (newSample.equals(repeatedScalarSample)) {
repeatSample.incrementRepeatCount();
}
 else {
encodeSample(dataStream,lastSample);
lastSample=newSample;
}
}
 else if (lastSample.equals(newSample)) {
lastSample=new RepeatSample(2,newSample);
}
 else {
encodeSample(dataStream,lastSample);
lastSample=newSample;
}
}
}
}
if (lastSample != null) {
encodeSample(dataStream,lastSample);
}
dataStream.flush();
return outputStream.toByteArray();
}
 catch (Exception e) {
log.error("In combineSampleBytes(), exception combining sample byte arrays",e);
return new byte[0];
}
}
