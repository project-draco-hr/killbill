{
  final SampleOpcode opcode=sample.getOpcode();
  try {
switch (opcode) {
case REPEAT_BYTE:
case REPEAT_SHORT:
      final RepeatSample r=(RepeatSample)sample;
    final ScalarSample repeatee=r.getSampleRepeated();
  outputStream.write(opcode.getOpcodeIndex());
if (opcode == SampleOpcode.REPEAT_BYTE) {
  outputStream.write(r.getRepeatCount());
}
 else {
  outputStream.writeShort(r.getRepeatCount());
}
encodeScalarValue(outputStream,repeatee.getOpcode(),repeatee.getSampleValue());
case NULL:
break;
default :
if (sample instanceof ScalarSample) {
encodeScalarValue(outputStream,opcode,((ScalarSample)sample).getSampleValue());
}
 else {
log.error("In encodeSample, opcode {} is not ScalarSample; instead {}",opcode.name(),sample.getClass().getName());
}
}
}
 catch (IOException e) {
log.error(String.format("In encodeSample, IOException encoding opcode %s and value %s",opcode.name(),String.valueOf(sample)),e);
}
}
