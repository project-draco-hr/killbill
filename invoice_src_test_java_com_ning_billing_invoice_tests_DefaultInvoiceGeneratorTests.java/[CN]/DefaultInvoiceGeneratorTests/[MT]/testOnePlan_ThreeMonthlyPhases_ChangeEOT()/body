{
  final BillingEventSet events=new MockBillingEventSet();
  final Plan plan1=new MockPlan();
  final BigDecimal rate1=FIVE;
  final PlanPhase phase1=createMockMonthlyPlanPhase(rate1);
  final Subscription sub=createZombieSubscription();
  final BillingEvent event1=createBillingEvent(sub.getId(),buildDateTime(2011,9,1),plan1,phase1,1);
  events.add(event1);
  final BigDecimal rate2=TEN;
  final PlanPhase phase2=createMockMonthlyPlanPhase(rate2);
  final BillingEvent event2=createBillingEvent(sub.getId(),buildDateTime(2011,10,1),plan1,phase2,1);
  events.add(event2);
  final BigDecimal rate3=THIRTY;
  final PlanPhase phase3=createMockMonthlyPlanPhase(rate3);
  final BillingEvent event3=createBillingEvent(sub.getId(),buildDateTime(2011,11,1),plan1,phase3,1);
  events.add(event3);
  final DateTime targetDate=buildDateTime(2011,12,3);
  final UUID accountId=UUID.randomUUID();
  final Invoice invoice=generator.generateInvoice(accountId,events,null,targetDate,Currency.USD);
  assertNotNull(invoice);
  assertEquals(invoice.getNumberOfItems(),4);
  assertEquals(invoice.getBalance(),rate1.add(rate2).add(TWO.multiply(rate3)).setScale(NUMBER_OF_DECIMALS));
}
