{
  Subscription subscription=new MockSubscription();
  InternationalPrice zeroPrice=new MockInternationalPrice(new DefaultPrice(ZERO,Currency.USD));
  int billCycleDay=1;
  BillingEventSet events=new BillingEventSet();
  Plan shotgun=new MockPlan();
  PlanPhase shotgunMonthly=createMockMonthlyPlanPhase(null,ZERO,PhaseType.TRIAL);
  BillingEvent event1=new DefaultBillingEvent(subscription,new DateTime("2012-01-31T00:02:04.000Z"),shotgun,shotgunMonthly,zeroPrice,null,BillingPeriod.NO_BILLING_PERIOD,billCycleDay,BillingModeType.IN_ADVANCE,"Test Event 1");
  events.add(event1);
  Plan assaultRifle=new MockPlan();
  PlanPhase assaultRifleMonthly=createMockMonthlyPlanPhase(null,ZERO,PhaseType.TRIAL);
  BillingEvent event2=new DefaultBillingEvent(subscription,new DateTime("2012-01-31T00:02:04.000Z"),assaultRifle,assaultRifleMonthly,zeroPrice,null,BillingPeriod.NO_BILLING_PERIOD,billCycleDay,BillingModeType.IN_ADVANCE,"Test Event 2");
  events.add(event2);
  Plan pistol=new MockPlan();
  PlanPhase pistolMonthlyTrial=createMockMonthlyPlanPhase(null,ZERO,PhaseType.TRIAL);
  BigDecimal pistolMonthlyCost=new BigDecimal("29.95");
  PlanPhase pistolMonthlyEvergreen=createMockMonthlyPlanPhase(pistolMonthlyCost,null,PhaseType.EVERGREEN);
  InternationalPrice pistolEvergreenPrice=new MockInternationalPrice(new DefaultPrice(pistolMonthlyCost,Currency.USD));
  BillingEvent event3=new DefaultBillingEvent(subscription,new DateTime("2012-01-31T00:02:05.000Z"),pistol,pistolMonthlyTrial,zeroPrice,null,BillingPeriod.NO_BILLING_PERIOD,billCycleDay,BillingModeType.IN_ADVANCE,"Test Event 3");
  events.add(event3);
  BillingEvent event4=new DefaultBillingEvent(subscription,new DateTime("2012-03-01T00:02:04.000Z"),pistol,pistolMonthlyEvergreen,null,pistolEvergreenPrice,BillingPeriod.MONTHLY,billCycleDay,BillingModeType.IN_ADVANCE,"Test Event 4");
  events.add(event4);
  InvoiceItemList items=new InvoiceItemList();
  UUID subscriptionId=UUID.randomUUID();
  InvoiceItem item1=new DefaultInvoiceItem(UUID.randomUUID(),subscriptionId,new DateTime("2012-01-30T16:02:04.000-08:00"),new DateTime("2012-01-30T16:02:04.000-08:00"),"1",ZERO,ZERO,ZERO,Currency.USD);
  InvoiceItem item2=new DefaultInvoiceItem(UUID.randomUUID(),subscriptionId,new DateTime("2012-02-29T16:02:04.000-08:00"),new DateTime("2012-02-29T16:02:04.000-08:00"),"2",ZERO,new BigDecimal("249.95"),ZERO,Currency.USD);
  InvoiceItem item3=new DefaultInvoiceItem(UUID.randomUUID(),subscriptionId,new DateTime("2012-01-30T16:02:04.000-08:00"),new DateTime("2012-01-30T16:02:04.000-08:00"),"3",ZERO,ZERO,ZERO,Currency.USD);
  items.add(item1);
  items.add(item2);
  items.add(item3);
  InvoiceGenerator generator=new DefaultInvoiceGenerator();
  Invoice invoice=generator.generateInvoice(UUID.randomUUID(),events,items,new DateTime(),Currency.USD);
  assertNotNull(invoice);
  assertTrue(invoice.getNumberOfItems() > 0);
}
