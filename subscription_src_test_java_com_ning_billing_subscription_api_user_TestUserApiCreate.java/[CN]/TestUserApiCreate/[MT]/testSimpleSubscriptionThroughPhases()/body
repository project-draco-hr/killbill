{
  try {
    final String productName="Pistol";
    final BillingPeriod term=BillingPeriod.ANNUAL;
    final String planSetName="gunclubDiscount";
    testListener.pushExpectedEvent(NextEvent.CREATE);
    SubscriptionData subscription=(SubscriptionData)subscriptionApi.createSubscription(bundle.getId(),testUtil.getProductSpecifier(productName,planSetName,term,null),clock.getUTCNow(),callContext);
    assertNotNull(subscription);
    PlanPhase currentPhase=subscription.getCurrentPhase();
    assertNotNull(currentPhase);
    assertEquals(currentPhase.getPhaseType(),PhaseType.TRIAL);
    assertTrue(testListener.isCompleted(5000));
    testListener.pushExpectedEvent(NextEvent.PHASE);
    Interval it=new Interval(clock.getUTCNow(),clock.getUTCNow().plusDays(31));
    clock.addDeltaFromReality(it.toDurationMillis());
    assertTrue(testListener.isCompleted(5000));
    currentPhase=subscription.getCurrentPhase();
    assertNotNull(currentPhase);
    assertEquals(currentPhase.getPhaseType(),PhaseType.DISCOUNT);
    testListener.pushExpectedEvent(NextEvent.PHASE);
    it=new Interval(clock.getUTCNow(),clock.getUTCNow().plusYears(1));
    clock.addDeltaFromReality(it.toDurationMillis());
    assertTrue(testListener.isCompleted(5000));
    subscription=(SubscriptionData)subscriptionApi.getSubscriptionFromId(subscription.getId(),callContext);
    currentPhase=subscription.getCurrentPhase();
    assertNotNull(currentPhase);
    assertEquals(currentPhase.getPhaseType(),PhaseType.EVERGREEN);
    assertListenerStatus();
  }
 catch (  SubscriptionUserApiException e) {
    Assert.fail(e.getMessage());
  }
}
