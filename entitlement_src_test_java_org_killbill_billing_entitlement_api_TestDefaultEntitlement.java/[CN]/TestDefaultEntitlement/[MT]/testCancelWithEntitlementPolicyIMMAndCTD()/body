{
  final LocalDate initialDate=new LocalDate(2013,8,7);
  clock.setDay(initialDate);
  final Account account=accountApi.createAccount(getAccountData(7),callContext);
  final PlanPhaseSpecifier spec=new PlanPhaseSpecifier("Shotgun",ProductCategory.BASE,BillingPeriod.MONTHLY,PriceListSet.DEFAULT_PRICELIST_NAME,null);
  testListener.pushExpectedEvent(NextEvent.CREATE);
  final Entitlement entitlement=entitlementApi.createBaseEntitlement(account.getId(),spec,account.getExternalKey(),null,initialDate,ImmutableList.<PluginProperty>of(),callContext);
  assertListenerStatus();
  final DateTime ctd=clock.getUTCNow().plusDays(30).plusMonths(1);
  testListener.pushExpectedEvent(NextEvent.PHASE);
  clock.addDays(32);
  subscriptionInternalApi.setChargedThroughDate(entitlement.getId(),ctd,internalCallContext);
  assertListenerStatus();
  final Entitlement entitlement2=entitlementApi.getEntitlementForId(entitlement.getId(),callContext);
  testListener.pushExpectedEvent(NextEvent.BLOCK);
  final Entitlement entitlement3=entitlement2.cancelEntitlementWithPolicy(EntitlementActionPolicy.IMMEDIATE,ImmutableList.<PluginProperty>of(),callContext);
  assertListenerStatus();
  assertEquals(entitlement3.getState(),EntitlementState.CANCELLED);
  assertEquals(entitlement3.getEffectiveEndDate(),new LocalDate(2013,9,8));
  final Subscription subscription=subscriptionApi.getSubscriptionForEntitlementId(entitlement.getBaseEntitlementId(),callContext);
  assertEquals(subscription.getBillingEndDate(),new LocalDate(2013,10,6));
  testListener.pushExpectedEvent(NextEvent.CANCEL);
  clock.addMonths(1);
  assertListenerStatus();
  final Entitlement entitlement4=entitlementApi.getEntitlementForId(entitlement.getId(),callContext);
  assertEquals(entitlement4.getState(),EntitlementState.CANCELLED);
  assertEquals(entitlement4.getEffectiveEndDate(),new LocalDate(2013,9,8));
}
