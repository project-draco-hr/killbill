{
switch (changeType) {
case INSERT:
    break;
default :
  return;
}
final Long recordId=entitySqlDaoWrapperFactory.become(AccountSqlDao.class).getRecordId(savedAccount.getId().toString(),context);
final InternalCallContext rehydratedContext=internalCallContextFactory.createInternalCallContext(recordId,context);
final AccountCreationInternalEvent creationEvent=new DefaultAccountCreationEvent(new DefaultAccountData(savedAccount),savedAccount.getId(),rehydratedContext.getAccountRecordId(),rehydratedContext.getTenantRecordId(),rehydratedContext.getUserToken());
try {
eventBus.postFromTransaction(creationEvent,entitySqlDaoWrapperFactory.getHandle().getConnection());
}
 catch (final EventBusException e) {
log.warn("Failed to post account creation event for account " + savedAccount.getId(),e);
}
}
