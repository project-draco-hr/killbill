{
  notifier.initialize();
  notifier.start();
  busService.getBus().start();
  account=Mockito.mock(Account.class);
  final UUID accountId=UUID.randomUUID();
  Mockito.when(accountInternalApi.getAccountById(Mockito.<UUID>any(),Mockito.<InternalTenantContext>any())).thenReturn(account);
  Mockito.when(account.getCurrency()).thenReturn(Currency.USD);
  Mockito.when(account.getId()).thenReturn(accountId);
  Mockito.when(account.isNotifiedForInvoices()).thenReturn(true);
  Mockito.when(account.getBillCycleDay()).thenReturn(new MockBillCycleDay(30));
  Mockito.when(account.getTimeZone()).thenReturn(DateTimeZone.UTC);
  subscription=Mockito.mock(Subscription.class);
  final UUID subscriptionId=UUID.randomUUID();
  Mockito.when(subscription.getId()).thenReturn(subscriptionId);
  Mockito.when(subscription.getBundleId()).thenReturn(new UUID(0L,0L));
}
