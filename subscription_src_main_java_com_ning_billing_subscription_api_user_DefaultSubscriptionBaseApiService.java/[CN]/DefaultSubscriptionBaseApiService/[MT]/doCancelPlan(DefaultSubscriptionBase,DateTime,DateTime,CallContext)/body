{
  validateEffectiveDate(subscription,effectiveDate);
  final SubscriptionBaseEvent cancelEvent=new ApiEventCancel(new ApiEventBuilder().setSubscriptionId(subscription.getId()).setActiveVersion(subscription.getActiveVersion()).setProcessedDate(now).setEffectiveDate(effectiveDate).setRequestedDate(now).setFromDisk(true));
  final InternalCallContext internalCallContext=createCallContextFromBundleId(subscription.getBundleId(),context);
  dao.cancelSubscription(subscription,cancelEvent,internalCallContext,0);
  subscription.rebuildTransitions(dao.getEventsForSubscription(subscription.getId(),internalCallContext),catalogService.getFullCatalog());
  if (subscription.getCategory() == ProductCategory.BASE) {
    cancelAddOnsIfRequired(subscription,effectiveDate,internalCallContext);
  }
  final boolean isImmediate=subscription.getState() == EntitlementState.CANCELLED;
  return isImmediate;
}
