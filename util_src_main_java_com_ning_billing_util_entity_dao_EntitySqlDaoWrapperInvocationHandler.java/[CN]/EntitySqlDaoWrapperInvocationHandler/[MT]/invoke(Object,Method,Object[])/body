{
  try {
    return invokeSafely(proxy,method,args);
  }
 catch (  Throwable t) {
    logger.warn("Error during transaction for entity {} and method {}",sqlDao.getClass(),method.getName());
    if (t.getCause() != null && t.getCause().getCause() != null && DBIException.class.isAssignableFrom(t.getCause().getClass())) {
      errorDuringTransaction(t.getCause().getCause());
    }
 else     if (t.getCause() != null) {
      errorDuringTransaction(t.getCause());
    }
 else {
      errorDuringTransaction(t);
    }
  }
  return null;
}
