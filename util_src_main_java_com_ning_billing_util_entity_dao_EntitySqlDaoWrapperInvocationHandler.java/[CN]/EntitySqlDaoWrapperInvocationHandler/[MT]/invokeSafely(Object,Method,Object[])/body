{
  final Audited annotation=method.getAnnotation(Audited.class);
  InternalCallContext context=null;
  List<String> entityIds=null;
  final Map<String,U> entities=new HashMap<String,U>();
  final Map<String,Long> entityRecordIds=new HashMap<String,Long>();
  if (annotation != null) {
    context=retrieveContextFromArguments(method,args);
    entityIds=retrieveEntityIdsFromArguments(method,args);
    for (    final String entityId : entityIds) {
      entities.put(entityId,sqlDao.getById(entityId,context));
      entityRecordIds.put(entityId,sqlDao.getRecordId(entityId,context));
    }
  }
  final Object obj=method.invoke(sqlDao,args);
  if (annotation != null) {
    final ChangeType changeType=annotation.value();
    for (    final String entityId : entityIds) {
      updateHistoryAndAudit(entityId,entities,entityRecordIds,changeType,context);
    }
  }
  return obj;
}
