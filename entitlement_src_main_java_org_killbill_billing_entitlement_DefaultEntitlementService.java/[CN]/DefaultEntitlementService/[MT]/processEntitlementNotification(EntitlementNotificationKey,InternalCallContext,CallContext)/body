{
  final Entitlement entitlement;
  try {
    entitlement=entitlementInternalApi.getEntitlementForId(key.getEntitlementId(),internalCallContext);
  }
 catch (  final EntitlementApiException e) {
    log.error("Error retrieving entitlementId='{}'",key.getEntitlementId(),e);
    return;
  }
  if (!(entitlement instanceof DefaultEntitlement)) {
    log.error("Error retrieving entitlementId='{}', unexpected entitlement className='{}'",key.getEntitlementId(),entitlement.getClass().getName());
    return;
  }
  final EntitlementNotificationKeyAction entitlementNotificationKeyAction=key.getEntitlementNotificationKeyAction();
  try {
    if (EntitlementNotificationKeyAction.CHANGE.equals(entitlementNotificationKeyAction) || EntitlementNotificationKeyAction.CANCEL.equals(entitlementNotificationKeyAction)) {
      blockAddOnsIfRequired(key,(DefaultEntitlement)entitlement,callContext,internalCallContext);
    }
 else     if (EntitlementNotificationKeyAction.PAUSE.equals(entitlementNotificationKeyAction)) {
      entitlementInternalApi.pause(key.getBundleId(),internalCallContext.toLocalDate(key.getEffectiveDate(),((DefaultEntitlement)entitlement).getSubscriptionBase().getStartDate()),ImmutableList.<PluginProperty>of(),internalCallContext);
    }
 else     if (EntitlementNotificationKeyAction.RESUME.equals(entitlementNotificationKeyAction)) {
      entitlementInternalApi.resume(key.getBundleId(),internalCallContext.toLocalDate(key.getEffectiveDate(),((DefaultEntitlement)entitlement).getSubscriptionBase().getStartDate()),ImmutableList.<PluginProperty>of(),internalCallContext);
    }
  }
 catch (  final EntitlementApiException e) {
    log.error("Error processing event for entitlementId='{}'",entitlement.getId(),e);
  }
}
