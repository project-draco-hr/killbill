{
  final CallContext callContext=context.createContext(createdBy,reason,comment,request);
  final Account account=accountUserApi.getAccountById(UUID.fromString(externalChargeJson.getAccountId()),callContext);
  final LocalDate requestedDate=toLocalDate(account,requestedDateTimeString,callContext);
  final Currency currency=Objects.firstNonNull(externalChargeJson.getCurrency(),account.getCurrency());
  final InvoiceItem externalCharge;
  if (externalChargeJson.getBundleId() != null) {
    externalCharge=invoiceApi.insertExternalChargeForBundle(account.getId(),UUID.fromString(externalChargeJson.getBundleId()),externalChargeJson.getAmount(),externalChargeJson.getDescription(),requestedDate,currency,callContext);
  }
 else {
    externalCharge=invoiceApi.insertExternalCharge(account.getId(),externalChargeJson.getAmount(),externalChargeJson.getDescription(),requestedDate,currency,callContext);
  }
  return uriBuilder.buildResponse(InvoiceResource.class,"getInvoice",externalCharge.getInvoiceId(),uriInfo.getBaseUri().toString());
}
