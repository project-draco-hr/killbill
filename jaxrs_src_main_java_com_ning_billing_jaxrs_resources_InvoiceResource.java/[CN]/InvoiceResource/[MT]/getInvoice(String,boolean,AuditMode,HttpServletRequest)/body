{
  final TenantContext tenantContext=context.createContext(request);
  final Invoice invoice=invoiceApi.getInvoice(UUID.fromString(invoiceId),tenantContext);
  final AuditLogsForInvoices invoicesAuditLogs=auditUserApi.getAuditLogsForInvoices(ImmutableList.<Invoice>of(invoice),auditMode.getLevel(),tenantContext);
  if (invoice == null) {
    throw new InvoiceApiException(ErrorCode.INVOICE_NOT_FOUND,invoiceId);
  }
 else {
    final InvoiceJson json=withItems ? new InvoiceJson(invoice,invoicesAuditLogs.getInvoiceAuditLogs().get(invoice.getId()),invoicesAuditLogs.getInvoiceItemsAuditLogs()) : new InvoiceJson(invoice,invoicesAuditLogs.getInvoiceAuditLogs().get(invoice.getId()));
    return Response.status(Status.OK).entity(json).build();
  }
}
