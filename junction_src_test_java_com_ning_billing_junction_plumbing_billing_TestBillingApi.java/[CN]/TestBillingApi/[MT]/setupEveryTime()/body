{
  final List<SubscriptionBundle> bundles=new ArrayList<SubscriptionBundle>();
  final SubscriptionBundle bundle=BrainDeadProxyFactory.createBrainDeadProxyFor(SubscriptionBundle.class);
  ((ZombieControl)bundle).addResult("getId",bunId);
  bundles.add(bundle);
  effectiveSubscriptionTransitions=new LinkedList<EffectiveSubscriptionEvent>();
  final List<Subscription> subscriptions=new LinkedList<Subscription>();
  subscriptionStartDate=clock.getUTCNow().minusDays(3);
  subscription=new MockSubscription(subId,bunId,subscriptionPlan,subscriptionStartDate,effectiveSubscriptionTransitions);
  subscriptions.add(subscription);
  entitlementApi=BrainDeadProxyFactory.createBrainDeadProxyFor(EntitlementUserApi.class);
  ((ZombieControl)entitlementApi).addResult("getBundlesForAccount",bundles);
  ((ZombieControl)entitlementApi).addResult("getSubscriptionsForBundle",subscriptions);
  ((ZombieControl)entitlementApi).addResult("getSubscriptionFromId",subscription);
  ((ZombieControl)entitlementApi).addResult("getBundleFromId",bundle);
  ((ZombieControl)entitlementApi).addResult("getBaseSubscription",subscription);
  tagApi=mock(TagUserApi.class);
  assertTrue(true);
}
