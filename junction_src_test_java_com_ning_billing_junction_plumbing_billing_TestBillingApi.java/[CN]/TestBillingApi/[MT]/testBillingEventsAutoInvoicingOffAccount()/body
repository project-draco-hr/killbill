{
  final DateTime now=clock.getUTCNow();
  final DateTime then=now.minusDays(1);
  final Plan nextPlan=catalogService.getFullCatalog().findPlan("PickupTrialEvergreen10USD",now);
  final PlanPhase nextPhase=nextPlan.getAllPhases()[1];
  final PriceList nextPriceList=catalogService.getFullCatalog().findPriceList(PriceListSet.DEFAULT_PRICELIST_NAME,now);
  final EffectiveSubscriptionEvent t=new MockEffectiveSubscriptionEvent(eventId,subId,bunId,then,now,null,null,null,null,SubscriptionState.ACTIVE,nextPlan.getName(),nextPhase.getName(),nextPriceList.getName(),1L,null,SubscriptionTransitionType.CREATE,0,null);
  effectiveSubscriptionTransitions.add(t);
  final AccountUserApi accountApi=Mockito.mock(AccountUserApi.class);
  final Account account=Mockito.mock(Account.class);
  Mockito.when(account.getBillCycleDay()).thenReturn(new MockBillCycleDay(32));
  Mockito.when(account.getCurrency()).thenReturn(Currency.USD);
  Mockito.when(account.getId()).thenReturn(UUID.randomUUID());
  Mockito.when(accountApi.getAccountById(Mockito.<UUID>any())).thenReturn(account);
  final Map<String,Tag> tags=new HashMap<String,Tag>();
  final Tag aioTag=mock(Tag.class);
  when(aioTag.getTagDefinitionName()).thenReturn(ControlTagType.AUTO_INVOICING_OFF.name());
  tags.put(ControlTagType.AUTO_INVOICING_OFF.name(),aioTag);
  when(tagApi.getTags(account.getId(),ObjectType.ACCOUNT)).thenReturn(tags);
  assertEquals(tagApi.getTags(account.getId(),ObjectType.ACCOUNT),tags);
  ((MockCatalog)catalogService.getFullCatalog()).setBillingAlignment(BillingAlignment.ACCOUNT);
  final BillCycleDayCalculator bcdCalculator=new BillCycleDayCalculator(catalogService,entitlementApi);
  final CallContextFactory factory=new DefaultCallContextFactory(clock);
  final BillingApi api=new DefaultBillingApi(null,factory,accountApi,bcdCalculator,entitlementApi,blockCalculator,catalogService,tagApi);
  final BillingEventSet events=api.getBillingEventsForAccountAndUpdateAccountBCD(account.getId());
  assertEquals(events.isAccountAutoInvoiceOff(),true);
  assertEquals(events.size(),0);
}
