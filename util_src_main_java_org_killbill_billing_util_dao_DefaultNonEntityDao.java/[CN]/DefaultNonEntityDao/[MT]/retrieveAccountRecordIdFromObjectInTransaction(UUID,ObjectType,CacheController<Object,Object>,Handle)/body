{
  final TableName tableName=TableName.fromObjectType(objectType);
  Preconditions.checkNotNull(tableName,"%s is not a valid ObjectType",objectType);
  return withCachingObjectId.withCaching(new OperationRetrieval<UUID,Long>(){
    @Override public Long doRetrieve(    final UUID objectId,    final ObjectType objectType){
      final NonEntitySqlDao inTransactionNonEntitySqlDao=handle == null ? nonEntitySqlDao : SqlObjectBuilder.attach(handle,NonEntitySqlDao.class);
switch (tableName) {
case TENANT:
case TAG_DEFINITIONS:
case TAG_DEFINITION_HISTORY:
        return null;
case ACCOUNT:
      return inTransactionNonEntitySqlDao.getAccountRecordIdFromAccount(objectId.toString());
default :
    return inTransactionNonEntitySqlDao.getAccountRecordIdFromObjectOtherThanAccount(objectId.toString(),tableName.getTableName());
}
}
}
,objectId,objectType,tableName,cache);
}
