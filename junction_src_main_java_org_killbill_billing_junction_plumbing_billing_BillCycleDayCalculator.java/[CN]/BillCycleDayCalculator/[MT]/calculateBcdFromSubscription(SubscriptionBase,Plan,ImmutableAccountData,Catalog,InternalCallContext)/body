{
  final PhaseType initialPhaseType;
  final List<EffectiveSubscriptionInternalEvent> transitions=subscriptionApi.getAllTransitions(subscription,context);
  if (transitions.size() == 0) {
    initialPhaseType=null;
  }
 else {
    final DateTime requestedDate=subscription.getStartDate();
    final String initialPhaseString=transitions.get(0).getNextPhase();
    if (initialPhaseString == null) {
      initialPhaseType=null;
    }
 else {
      final PlanPhase initialPhase=catalog.findPhase(initialPhaseString,requestedDate,subscription.getStartDate());
      if (initialPhase == null) {
        initialPhaseType=null;
      }
 else {
        initialPhaseType=initialPhase.getPhaseType();
      }
    }
  }
  final DateTime date=plan.dateOfFirstRecurringNonZeroCharge(subscription.getStartDate(),initialPhaseType);
  final int bcdUTC=context.toUTCDateTime(date).getDayOfMonth();
  final int bcdLocal=context.toDateTime(date,account.getTimeZone()).getDayOfMonth();
  log.info("Calculated BCD: subscription id {}, subscription start {}, timezone {}, bcd UTC {}, bcd local {}",subscription.getId(),date.toDateTimeISO(),account.getTimeZone(),bcdUTC,bcdLocal);
  return bcdLocal;
}
