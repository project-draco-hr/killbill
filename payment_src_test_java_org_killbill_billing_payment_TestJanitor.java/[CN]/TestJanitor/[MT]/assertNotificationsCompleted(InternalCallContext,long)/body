{
  try {
    await().atMost(timeoutSec,SECONDS).until(new Callable<Boolean>(){
      @Override public Boolean call() throws Exception {
        for (        final NotificationEventWithMetadata<NotificationEvent> notificationEvent : notificationQueueService.getNotificationQueue(DefaultPaymentService.SERVICE_NAME,Janitor.QUEUE_NAME).getFutureOrInProcessingNotificationForSearchKeys(internalCallContext.getAccountRecordId(),internalCallContext.getTenantRecordId())) {
          if (!notificationEvent.getEffectiveDate().isAfter(clock.getUTCNow())) {
            return false;
          }
        }
        return true;
      }
    }
);
  }
 catch (  final Exception e) {
    fail("Test failed ",e);
  }
}
