{
  try {
    await().atMost(timeoutSec,SECONDS).until(new Callable<Boolean>(){
      @Override public Boolean call() throws Exception {
        final List<NotificationEventWithMetadata<NotificationEvent>> notifications=notificationQueueService.getNotificationQueue(DefaultPaymentService.SERVICE_NAME,Janitor.QUEUE_NAME).getFutureOrInProcessingNotificationForSearchKeys(internalCallContext.getAccountRecordId(),internalCallContext.getTenantRecordId());
        return notifications.isEmpty();
      }
    }
);
  }
 catch (  final Exception e) {
    fail("Test failed ",e);
  }
}
