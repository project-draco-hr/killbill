{
  final TransactionType transactionType=paymentControlContext.getTransactionType();
  Preconditions.checkArgument(paymentControlContext.getPaymentApiType() == PaymentApiType.PAYMENT_TRANSACTION);
  Preconditions.checkArgument(transactionType == TransactionType.PURCHASE || transactionType == TransactionType.REFUND || transactionType == TransactionType.CHARGEBACK);
  final InternalCallContext internalContext=internalCallContextFactory.createInternalCallContext(paymentControlContext.getAccountId(),paymentControlContext);
switch (transactionType) {
case PURCHASE:
    return getPluginPurchaseResult(paymentControlContext,pluginProperties,internalContext);
case REFUND:
  return getPluginRefundResult(paymentControlContext,pluginProperties,internalContext);
case CHARGEBACK:
return new DefaultPriorPaymentControlResult(false,paymentControlContext.getAmount());
default :
throw new IllegalStateException("Unexpected transactionType " + transactionType);
}
}
