{
  final ExistingEvent migrateEntitlementEvent=new ExistingEvent(){
    @Override public DateTime getEffectiveDate(){
      return migrateEntitlementEventEffectiveDate;
    }
    @Override public String getPlanPhaseName(){
      return "BicycleTrialEvergreen1USD-trial";
    }
    @Override public UUID getEventId(){
      return UUID.randomUUID();
    }
    @Override public PlanPhaseSpecifier getPlanPhaseSpecifier(){
      return new PlanPhaseSpecifier("BicycleTrialEvergreen1USD",ProductCategory.BASE,BillingPeriod.NO_BILLING_PERIOD,PriceListSet.DEFAULT_PRICELIST_NAME,PhaseType.FIXEDTERM);
    }
    @Override public DateTime getRequestedDate(){
      return getEffectiveDate();
    }
    @Override public SubscriptionTransitionType getSubscriptionTransitionType(){
      return SubscriptionTransitionType.MIGRATE_ENTITLEMENT;
    }
  }
;
  final ExistingEvent migrateBillingEvent=new ExistingEvent(){
    @Override public DateTime getEffectiveDate(){
      return migrateBillingEventEffectiveDate;
    }
    @Override public String getPlanPhaseName(){
      return migrateEntitlementEvent.getPlanPhaseName();
    }
    @Override public UUID getEventId(){
      return UUID.randomUUID();
    }
    @Override public PlanPhaseSpecifier getPlanPhaseSpecifier(){
      return migrateEntitlementEvent.getPlanPhaseSpecifier();
    }
    @Override public DateTime getRequestedDate(){
      return migrateEntitlementEvent.getRequestedDate();
    }
    @Override public SubscriptionTransitionType getSubscriptionTransitionType(){
      return SubscriptionTransitionType.MIGRATE_BILLING;
    }
  }
;
  return ImmutableList.<ExistingEvent>of(migrateEntitlementEvent,migrateBillingEvent);
}
