{
  for (  final PaymentTransactionModelDao paymentTransactionModelDao : allPaymentTransactionsForKey) {
    if (paymentTransactionModelDao.getTransactionExternalKey().equals(paymentStateContext.getPaymentTransactionExternalKey()) && paymentTransactionModelDao.getTransactionStatus() == TransactionStatus.SUCCESS && paymentTransactionModelDao.getTransactionType() != TransactionType.CHARGEBACK) {
      throw new PaymentApiException(ErrorCode.PAYMENT_ACTIVE_TRANSACTION_KEY_EXISTS,paymentStateContext.getPaymentTransactionExternalKey());
    }
    if (!paymentTransactionModelDao.getAccountRecordId().equals(internalCallContext.getAccountRecordId())) {
      UUID accountId;
      try {
        accountId=accountInternalApi.getAccountByRecordId(paymentTransactionModelDao.getAccountRecordId(),internalCallContext).getId();
      }
 catch (      final AccountApiException e) {
        log.warn("Unable to retrieve account",e);
        accountId=null;
      }
      throw new PaymentApiException(ErrorCode.PAYMENT_TRANSACTION_DIFFERENT_ACCOUNT_ID,accountId);
    }
  }
}
