{
  final UUID tagDefinitionId=UUID.randomUUID();
  final String tagDefinitionName=UUID.randomUUID().toString();
  final String tagDefinitionDescription=UUID.randomUUID().toString();
  final boolean controlTag=true;
  final TagDefinition tagDefinition=new DefaultTagDefinition(tagDefinitionId,tagDefinitionName,tagDefinitionDescription,controlTag);
  final UUID userToken=UUID.randomUUID();
  final DefaultUserTagDefinitionDeletionEvent event=new DefaultUserTagDefinitionDeletionEvent(tagDefinitionId,tagDefinition,userToken,1L,1L);
  Assert.assertEquals(event.getBusEventType(),BusInternalEvent.BusEventType.USER_TAGDEFINITION_DELETION);
  Assert.assertEquals(event.getTagDefinitionId(),tagDefinitionId);
  Assert.assertEquals(event.getTagDefinition(),tagDefinition);
  Assert.assertEquals(event.getTagDefinition().getId(),tagDefinitionId);
  Assert.assertEquals(event.getTagDefinition().getName(),tagDefinitionName);
  Assert.assertEquals(event.getTagDefinition().getDescription(),tagDefinitionDescription);
  Assert.assertEquals(event.getUserToken(),userToken);
  Assert.assertEquals(event,event);
  Assert.assertEquals(event,new DefaultUserTagDefinitionDeletionEvent(tagDefinitionId,tagDefinition,userToken,1L,1L));
  Assert.assertTrue(event.equals(event));
  Assert.assertTrue(event.equals(new DefaultUserTagDefinitionDeletionEvent(tagDefinitionId,tagDefinition,userToken,1L,1L)));
}
