{
  String externalKey=null;
  Plan plan=null;
  PlanPhase planPhase=null;
  if (invoiceItem.getBundleId() != null) {
    try {
      final SubscriptionBundle bundle=entitlementApi.getBundleFromId(invoiceItem.getBundleId());
      externalKey=bundle.getKey();
    }
 catch (    EntitlementUserApiException e) {
      log.warn("Ignoring subscription fields for invoice item {} for bundle {} (bundle does not exist)",invoiceItem.getId().toString(),invoiceItem.getBundleId().toString());
    }
  }
  if (invoiceItem.getSubscriptionId() != null) {
    final Subscription subscription;
    try {
      subscription=entitlementApi.getSubscriptionFromId(invoiceItem.getSubscriptionId());
      plan=subscription.getCurrentPlan();
      planPhase=subscription.getCurrentPhase();
    }
 catch (    EntitlementUserApiException e) {
      log.warn("Ignoring subscription fields for invoice item {} for subscription {} (subscription does not exist)",invoiceItem.getId().toString(),invoiceItem.getSubscriptionId().toString());
    }
  }
  return new BusinessInvoiceItem(externalKey,invoiceItem,plan,planPhase);
}
