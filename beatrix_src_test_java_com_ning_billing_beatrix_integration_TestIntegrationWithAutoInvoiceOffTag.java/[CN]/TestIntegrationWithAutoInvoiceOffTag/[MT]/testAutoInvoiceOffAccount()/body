{
  clock.setTime(new DateTime(2012,5,1,0,3,42,0));
  add_AUTO_INVOICING_OFF_Tag(account.getId(),ObjectType.ACCOUNT);
  final DefaultEntitlement bpEntitlement=createBaseEntitlementAndCheckForCompletion(account.getId(),"externalKey",productName,ProductCategory.BASE,term,NextEvent.CREATE);
  assertNotNull(bpEntitlement);
  Collection<Invoice> invoices=invoiceApi.getInvoicesByAccount(account.getId(),callContext);
  assertEquals(invoices.size(),0);
  clock.addDays(10);
  assertListenerStatus();
  invoices=invoiceApi.getInvoicesByAccount(account.getId(),callContext);
  assertEquals(invoices.size(),0);
  busHandler.pushExpectedEvents(NextEvent.PHASE);
  clock.addDays(30);
  assertListenerStatus();
  invoices=invoiceApi.getInvoicesByAccount(account.getId(),callContext);
  assertEquals(invoices.size(),0);
  busHandler.pushExpectedEvents(NextEvent.TAG,NextEvent.INVOICE,NextEvent.PAYMENT);
  remove_AUTO_INVOICING_OFF_Tag(account.getId(),ObjectType.ACCOUNT);
  assertListenerStatus();
  invoices=invoiceApi.getInvoicesByAccount(account.getId(),callContext);
  assertEquals(invoices.size(),1);
}
