{
  log.info("Starting testCreateWithRequestedDate");
  try {
    DateTime init=clock.getUTCNow();
    DateTime requestedDate=init.minusYears(1);
    String productName="Shotgun";
    BillingPeriod term=BillingPeriod.MONTHLY;
    String planSetName=PriceListSet.DEFAULT_PRICELIST_NAME;
    testListener.pushExpectedEvent(NextEvent.PHASE);
    testListener.pushExpectedEvent(NextEvent.CREATE);
    SubscriptionData subscription=(SubscriptionData)entitlementApi.createSubscription(bundle.getId(),getProductSpecifier(productName,planSetName,term,null),requestedDate);
    assertNotNull(subscription);
    assertEquals(subscription.getFieldValue("nonExistent"),null);
    subscription.setFieldValue("field1","value1");
    assertEquals(subscription.getFieldValue("field1"),"value1");
    List<CustomField> allFields=subscription.getFieldList();
    assertEquals(allFields.size(),1);
    subscription.setFieldValue("field1","valueNew1");
    assertEquals(subscription.getFieldValue("field1"),"valueNew1");
    allFields=subscription.getFieldList();
    assertEquals(allFields.size(),1);
    subscription=(SubscriptionData)entitlementApi.getSubscriptionFromId(subscription.getId());
    assertEquals(subscription.getFieldValue("field1"),"valueNew1");
    allFields=subscription.getFieldList();
    assertEquals(allFields.size(),1);
    subscription.setFieldValue("field1","valueSuperNew1");
    assertEquals(subscription.getFieldValue("field1"),"valueSuperNew1");
    allFields=subscription.getFieldList();
    assertEquals(allFields.size(),1);
    subscription=(SubscriptionData)entitlementApi.getSubscriptionFromId(subscription.getId());
    assertEquals(subscription.getFieldValue("field1"),"valueSuperNew1");
    allFields=subscription.getFieldList();
    assertEquals(allFields.size(),1);
  }
 catch (  EntitlementUserApiException e) {
    log.error("Unexpected exception",e);
    Assert.fail(e.getMessage());
  }
}
