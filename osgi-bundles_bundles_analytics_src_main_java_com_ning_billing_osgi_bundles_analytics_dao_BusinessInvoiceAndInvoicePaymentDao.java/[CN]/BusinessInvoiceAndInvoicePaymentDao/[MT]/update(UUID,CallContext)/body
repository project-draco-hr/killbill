{
  logService.log(LogService.LOG_INFO,"Starting rebuild of Analytics invoices and payments for account " + accountId);
  final BusinessAccountModelDao bac=bacFactory.createBusinessAccount(accountId,context);
  final Map<UUID,BusinessInvoiceModelDao> invoices=new HashMap<UUID,BusinessInvoiceModelDao>();
  final Multimap<UUID,BusinessInvoiceItemBaseModelDao> invoiceItems=ArrayListMultimap.<UUID,BusinessInvoiceItemBaseModelDao>create();
  final Multimap<UUID,BusinessInvoicePaymentBaseModelDao> invoicePayments=ArrayListMultimap.<UUID,BusinessInvoicePaymentBaseModelDao>create();
  createBusinessPojos(accountId,invoices,invoiceItems,invoicePayments,context);
  sqlDao.inTransaction(new Transaction<Void,BusinessAnalyticsSqlDao>(){
    @Override public Void inTransaction(    final BusinessAnalyticsSqlDao transactional,    final TransactionStatus status) throws Exception {
      updateInTransaction(bac,invoices,invoiceItems,invoicePayments,transactional,context);
      return null;
    }
  }
);
  logService.log(LogService.LOG_INFO,"Finished rebuild of Analytics invoices and payments for account " + accountId);
}
