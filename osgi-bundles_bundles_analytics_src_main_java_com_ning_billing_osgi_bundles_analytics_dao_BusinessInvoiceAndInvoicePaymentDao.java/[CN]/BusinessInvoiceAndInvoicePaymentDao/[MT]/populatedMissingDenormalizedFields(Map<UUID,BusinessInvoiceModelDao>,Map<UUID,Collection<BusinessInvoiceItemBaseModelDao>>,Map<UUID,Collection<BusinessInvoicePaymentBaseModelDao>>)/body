{
  for (  final BusinessInvoiceModelDao businessInvoice : businessInvoices.values()) {
    final BigDecimal balance=BusinessInvoiceUtils.computeInvoiceBalance(businessInvoiceItems.get(businessInvoice.getInvoiceId()),businessInvoicePayments.get(businessInvoice.getInvoiceId()));
    businessInvoice.setBalance(balance);
    final BigDecimal amountPaid=BusinessInvoiceUtils.computeInvoiceAmountPaid(businessInvoicePayments.get(businessInvoice.getInvoiceId()));
    businessInvoice.setAmountPaid(amountPaid);
    final BigDecimal amountRefunded=BusinessInvoiceUtils.computeInvoiceAmountRefunded(businessInvoicePayments.get(businessInvoice.getInvoiceId()));
    businessInvoice.setAmountRefunded(amountRefunded);
  }
  for (  final UUID invoiceId : businessInvoices.keySet()) {
    final Collection<BusinessInvoiceItemBaseModelDao> invoiceItemsForInvoice=businessInvoiceItems.get(invoiceId);
    if (invoiceItemsForInvoice != null) {
      for (      final BusinessInvoiceItemBaseModelDao businessInvoiceItem : invoiceItemsForInvoice) {
        businessInvoiceItem.populateDenormalizedInvoiceFields(businessInvoices.get(invoiceId));
      }
    }
    final Collection<BusinessInvoicePaymentBaseModelDao> invoicePaymentsForInvoice=businessInvoicePayments.get(invoiceId);
    if (invoicePaymentsForInvoice != null) {
      for (      final BusinessInvoicePaymentBaseModelDao businessInvoicePayment : invoicePaymentsForInvoice) {
        businessInvoicePayment.populateDenormalizedInvoiceFields(businessInvoices.get(invoiceId));
      }
    }
  }
}
