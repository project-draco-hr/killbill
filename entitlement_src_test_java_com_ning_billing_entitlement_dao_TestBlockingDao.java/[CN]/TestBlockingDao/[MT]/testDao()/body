{
  final UUID uuid=UUID.randomUUID();
  final String overdueStateName="WayPassedItMan";
  final String service="TEST";
  final boolean blockChange=true;
  final boolean blockEntitlement=false;
  final boolean blockBilling=false;
  final BlockingState state1=new DefaultBlockingState(uuid,overdueStateName,service,blockChange,blockEntitlement,blockBilling);
  blockingStateDao.setBlockingState(state1,clock,internalCallContext);
  clock.setDeltaFromReality(1000 * 3600 * 24);
  final String overdueStateName2="NoReallyThisCantGoOn";
  final BlockingState state2=new DefaultBlockingState(uuid,overdueStateName2,service,blockChange,blockEntitlement,blockBilling);
  blockingStateDao.setBlockingState(state2,clock,internalCallContext);
  final SubscriptionBaseBundle bundle=Mockito.mock(SubscriptionBaseBundle.class);
  Mockito.when(bundle.getId()).thenReturn(uuid);
  Assert.assertEquals(blockingStateDao.getBlockingStateFor(uuid,internalCallContext).getStateName(),state2.getStateName());
}
