{
  final DirectPaymentModelDao paymentModelDao=paymentDao.getDirectPayment(directPaymentId,tenantContext);
  if (paymentModelDao == null) {
    return null;
  }
  final InternalTenantContext tenantContextWithAccountRecordId=internalCallContextFactory.createInternalTenantContext(paymentModelDao.getAccountId(),tenantContext);
  final List<DirectPaymentTransactionModelDao> transactionsForAccount=paymentDao.getDirectTransactionsForAccount(paymentModelDao.getAccountId(),tenantContextWithAccountRecordId);
  final PaymentPluginApi plugin=withPluginInfo ? getPaymentProviderPlugin(paymentModelDao.getPaymentMethodId(),tenantContext) : null;
  PaymentInfoPlugin pluginInfo=null;
  if (plugin != null) {
    try {
      pluginInfo=plugin.getPaymentInfo(paymentModelDao.getAccountId(),directPaymentId,properties,buildTenantContext(tenantContext));
    }
 catch (    final PaymentPluginApiException e) {
      throw new PaymentApiException(ErrorCode.PAYMENT_PLUGIN_GET_PAYMENT_INFO,directPaymentId,e.toString());
    }
  }
  return toDirectPayment(paymentModelDao,transactionsForAccount,pluginInfo);
}
