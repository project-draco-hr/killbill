{
  validateUniqueTransactionExternalKey(chargebackTransactionExternalKey,internalCallContext);
  final PaymentTransactionModelDao transactionModelDao=paymentDao.getDirectPaymentTransaction(transactionId,internalCallContext);
  Preconditions.checkState(transactionModelDao != null);
  final DateTime utcNow=clock.getUTCNow();
  final PaymentTransactionModelDao chargebackTransaction=new PaymentTransactionModelDao(utcNow,utcNow,chargebackTransactionExternalKey,transactionModelDao.getPaymentId(),TransactionType.CHARGEBACK,utcNow,TransactionStatus.SUCCESS,amount,currency,null,null);
  final State currentPaymentState=directPaymentAutomatonRunner.fetchNextState("CHARGEBACK_INIT",true);
  paymentDao.updateDirectPaymentWithNewTransaction(transactionModelDao.getPaymentId(),chargebackTransaction,internalCallContext);
  paymentDao.updateDirectPaymentAndTransactionOnCompletion(transactionModelDao.getPaymentId(),currentPaymentState.getName(),chargebackTransaction.getId(),TransactionStatus.SUCCESS,chargebackTransaction.getAmount(),chargebackTransaction.getCurrency(),chargebackTransaction.getGatewayErrorCode(),chargebackTransaction.getGatewayErrorMsg(),internalCallContext);
  return getPayment(transactionModelDao.getPaymentId(),false,ImmutableList.<PluginProperty>of(),callContext,internalCallContext);
}
