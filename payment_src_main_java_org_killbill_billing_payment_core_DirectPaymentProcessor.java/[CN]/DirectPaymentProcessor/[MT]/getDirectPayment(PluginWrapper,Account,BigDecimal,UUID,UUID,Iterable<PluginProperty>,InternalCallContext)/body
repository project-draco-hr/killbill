{
  final UUID tenantId=nonEntityDao.retrieveIdFromObject(callContext.getTenantRecordId(),ObjectType.TENANT);
  final PaymentPluginApi plugin=getPaymentProviderPlugin(account,callContext);
  try {
    final PaymentInfoPlugin infoPlugin;
    try {
      infoPlugin=pluginWrapper.doPluginOperation(plugin,account,amount,directPaymentId,properties,callContext.toCallContext(tenantId));
    }
 catch (    final RuntimeException e) {
      final String formatError=String.format("Plugin threw RuntimeException for direct payment %s",directPaymentId);
      throw new PaymentPluginApiException(formatError,e);
    }
    processPaymentInfoPlugin(infoPlugin,account,amount,directPaymentId,directPaymentTransactionId,callContext);
  }
 catch (  final PaymentPluginApiException e) {
    paymentDao.updateDirectPaymentAndTransactionOnCompletion(directPaymentId,PaymentStatus.PAYMENT_FAILURE_ABORTED,amount,account.getCurrency(),directPaymentTransactionId,null,e.getMessage(),callContext);
  }
  return getPayment(directPaymentId,false,properties,callContext);
}
