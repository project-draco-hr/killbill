{
  final PaymentPluginApi plugin=getPaymentProviderPlugin(account,callContext);
  final DateTime utcNow=clock.getUTCNow();
  final DirectPaymentModelDao pmd=new DirectPaymentModelDao(utcNow,utcNow,account.getId(),account.getPaymentMethodId(),externalKey);
  final DirectPaymentTransactionModelDao ptmd=new DirectPaymentTransactionModelDao(utcNow,utcNow,pmd.getId(),TransactionType.AUTHORIZE,utcNow,PaymentStatus.UNKNOWN,amount,account.getCurrency(),null,null);
  final DirectPaymentModelDao inserted=paymentDao.insertDirectPaymentWithFirstTransaction(pmd,ptmd,callContext);
  final UUID tenantId=nonEntityDao.retrieveIdFromObject(callContext.getTenantRecordId(),ObjectType.TENANT);
  PaymentStatus paymentStatus;
  PaymentInfoPlugin infoPlugin;
  try {
    try {
      infoPlugin=plugin.authorizePayment(account.getId(),pmd.getId(),ptmd.getId(),amount,account.getCurrency(),ImmutableList.<PluginProperty>of(),callContext.toCallContext(tenantId));
    }
 catch (    final RuntimeException e) {
      final String formatError=String.format("Plugin threw RuntimeException for payment %s",pmd.getId());
      throw new PaymentPluginApiException(formatError,e);
    }
switch (infoPlugin.getStatus()) {
case PROCESSED:
case PENDING:
      paymentStatus=infoPlugin.getStatus() == PaymentPluginStatus.PROCESSED ? PaymentStatus.SUCCESS : PaymentStatus.PENDING;
    paymentDao.updateDirectPaymentAndTransactionOnCompletion(pmd.getId(),paymentStatus,amount,account.getCurrency(),ptmd.getId(),infoPlugin.getGatewayErrorCode(),null,callContext);
  break;
case ERROR:
paymentStatus=PaymentStatus.PLUGIN_FAILURE_ABORTED;
paymentDao.updateDirectPaymentAndTransactionOnCompletion(pmd.getId(),paymentStatus,amount,account.getCurrency(),ptmd.getId(),infoPlugin.getGatewayErrorCode(),infoPlugin.getGatewayError(),callContext);
break;
case UNDEFINED:
default :
final String formatError=String.format("Plugin return status %s for payment %s",infoPlugin.getStatus(),pmd.getId());
throw new PaymentPluginApiException("",formatError);
}
}
 catch (final PaymentPluginApiException e) {
paymentStatus=PaymentStatus.PAYMENT_FAILURE_ABORTED;
infoPlugin=null;
paymentDao.updateDirectPaymentAndTransactionOnCompletion(pmd.getId(),paymentStatus,amount,account.getCurrency(),ptmd.getId(),null,e.getMessage(),callContext);
}
 finally {
}
final DirectPaymentTransaction transaction=new DefaultDirectPaymentTransaction(ptmd.getId(),utcNow,utcNow,pmd.getId(),ptmd.getTransactionType(),utcNow,0,paymentStatus,amount,account.getCurrency(),((infoPlugin != null) ? infoPlugin.getGatewayErrorCode() : null),((infoPlugin != null) ? infoPlugin.getGatewayError() : null),infoPlugin);
final List<DirectPaymentTransaction> transactions=Collections.singletonList(transaction);
final DirectPayment result=new DefaultDirectPayment(inserted.getId(),utcNow,utcNow,account.getId(),account.getPaymentMethodId(),inserted.getPaymentNumber(),externalKey,transactions);
return result;
}
