{
  final DefaultMutableAccountData accountData=new DefaultMutableAccountData(this);
  if (externalKey != null ? !externalKey.equals(delegate.getExternalKey()) : delegate.getExternalKey() != null) {
    throw new IllegalArgumentException(String.format("Killbill doesn't support updating the account external key yet: this=%s, delegate=%s",externalKey,delegate.getExternalKey()));
  }
  if (currency != null ? !currency.equals(delegate.getCurrency()) : delegate.getCurrency() != null) {
    throw new IllegalArgumentException(String.format("Killbill doesn't support updating the account currency yet: this=%s, delegate=%s",currency,delegate.getCurrency()));
  }
  if (!(billCycleDay == null && (delegate.getBillCycleDay() == null || delegate.getBillCycleDay().getDayOfMonthUTC() == 0 && delegate.getBillCycleDay().getDayOfMonthLocal() == 0)) && !(billCycleDay != null && (billCycleDay.getDayOfMonthUTC() == delegate.getBillCycleDay().getDayOfMonthUTC() && billCycleDay.getDayOfMonthLocal() == delegate.getBillCycleDay().getDayOfMonthLocal()))) {
    throw new IllegalArgumentException(String.format("Killbill doesn't support updating the account BCD yet: this=%s, delegate=%s",billCycleDay,delegate.getBillCycleDay()));
  }
  accountData.setEmail(Objects.firstNonNull(email,delegate.getEmail()));
  accountData.setName(Objects.firstNonNull(name,delegate.getName()));
  accountData.setFirstNameLength(Objects.firstNonNull(firstNameLength,delegate.getFirstNameLength()));
  accountData.setPaymentMethodId(Optional.<UUID>fromNullable(paymentMethodId).or(Optional.<UUID>fromNullable(delegate.getPaymentMethodId())).orNull());
  accountData.setTimeZone(Objects.firstNonNull(timeZone,delegate.getTimeZone()));
  accountData.setLocale(Objects.firstNonNull(locale,delegate.getLocale()));
  accountData.setAddress1(Objects.firstNonNull(address1,delegate.getAddress1()));
  accountData.setAddress2(Objects.firstNonNull(address2,delegate.getAddress2()));
  accountData.setCompanyName(Objects.firstNonNull(companyName,delegate.getCompanyName()));
  accountData.setCity(Objects.firstNonNull(city,delegate.getCity()));
  accountData.setStateOrProvince(Objects.firstNonNull(stateOrProvince,delegate.getStateOrProvince()));
  accountData.setCountry(Objects.firstNonNull(country,delegate.getCountry()));
  accountData.setPostalCode(Objects.firstNonNull(postalCode,delegate.getPostalCode()));
  accountData.setPhone(Objects.firstNonNull(phone,delegate.getPhone()));
  accountData.setIsMigrated(Objects.firstNonNull(isMigrated,delegate.isMigrated()));
  accountData.setIsNotifiedForInvoices(Objects.firstNonNull(isNotifiedForInvoices,delegate.isNotifiedForInvoices()));
  return new DefaultAccount(delegate.getId(),accountData);
}
