{
  final InputStream is=new ByteArrayInputStream(testOverdueHelper.getConfigXml().getBytes());
  final OverdueConfig config=XMLLoader.getObjectFromStreamNoValidation(is,OverdueConfig.class);
  overdueWrapperFactory.setOverdueConfig(config);
  SubscriptionBaseBundle bundle;
  OverdueWrapper<SubscriptionBaseBundle> wrapper;
  OverdueState<SubscriptionBaseBundle> state;
  state=config.getBundleStateSet().findState("OD1");
  bundle=testOverdueHelper.createBundle(clock.getUTCToday().minusDays(31));
  wrapper=overdueWrapperFactory.createOverdueWrapperFor(bundle);
  wrapper.refresh(internalCallContext);
  testOverdueHelper.checkStateApplied(state);
  state=config.getBundleStateSet().findState("OD2");
  bundle=testOverdueHelper.createBundle(clock.getUTCToday().minusDays(41));
  wrapper=overdueWrapperFactory.createOverdueWrapperFor(bundle);
  wrapper.refresh(internalCallContext);
  testOverdueHelper.checkStateApplied(state);
  state=config.getBundleStateSet().findState("OD3");
  bundle=testOverdueHelper.createBundle(clock.getUTCToday().minusDays(51));
  wrapper=overdueWrapperFactory.createOverdueWrapperFor(bundle);
  wrapper.refresh(internalCallContext);
  testOverdueHelper.checkStateApplied(state);
}
