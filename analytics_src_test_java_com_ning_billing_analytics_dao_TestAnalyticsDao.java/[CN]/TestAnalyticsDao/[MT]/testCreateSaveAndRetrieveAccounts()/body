{
  businessAccountSqlDao.createAccount(account);
  final BusinessAccount foundAccount=businessAccountSqlDao.getAccount(ACCOUNT_KEY);
  Assert.assertNotNull(foundAccount.getCreatedDt());
  Assert.assertEquals(foundAccount.getCreatedDt(),foundAccount.getUpdatedDt());
  account.setCreatedDt(foundAccount.getCreatedDt());
  account.setUpdatedDt(foundAccount.getUpdatedDt());
  Assert.assertTrue(foundAccount.equals(account));
  final DateTime previousUpdatedDt=account.getUpdatedDt();
  account.setBalance(BigDecimal.TEN);
  account.setPaymentMethod("PayPal");
  businessAccountSqlDao.saveAccount(account);
  account=businessAccountSqlDao.getAccount(ACCOUNT_KEY);
  Assert.assertEquals(Rounder.round(BigDecimal.TEN),account.getRoundedBalance());
  Assert.assertEquals("PayPal",account.getPaymentMethod());
  Assert.assertTrue(account.getUpdatedDt().compareTo(previousUpdatedDt) > 0);
  Assert.assertNull(businessAccountSqlDao.getAccount("Doesn't exist"));
}
