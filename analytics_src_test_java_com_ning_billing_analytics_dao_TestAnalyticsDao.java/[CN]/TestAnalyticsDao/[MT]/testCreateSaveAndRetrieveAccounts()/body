{
  businessAccountSqlDao.createAccount(account,internalCallContext);
  final BusinessAccount foundAccount=businessAccountSqlDao.getAccountByKey(ACCOUNT_KEY,internalCallContext);
  Assert.assertNotNull(foundAccount.getCreatedDt());
  Assert.assertEquals(foundAccount.getCreatedDt(),foundAccount.getUpdatedDt());
  account.setCreatedDt(foundAccount.getCreatedDt());
  account.setUpdatedDt(foundAccount.getUpdatedDt());
  Assert.assertTrue(foundAccount.equals(account));
  final DateTime previousUpdatedDt=account.getUpdatedDt();
  account.setBalance(BigDecimal.TEN);
  account.setPaymentMethod("PayPal");
  account.setCurrency("CAD");
  businessAccountSqlDao.saveAccount(account,internalCallContext);
  account=businessAccountSqlDao.getAccountByKey(ACCOUNT_KEY,internalCallContext);
  Assert.assertEquals(Rounder.round(BigDecimal.TEN),account.getRoundedBalance());
  Assert.assertEquals("PayPal",account.getPaymentMethod());
  Assert.assertEquals("CAD",account.getCurrency());
  Assert.assertTrue(account.getUpdatedDt().compareTo(previousUpdatedDt) > 0);
  Assert.assertNull(businessAccountSqlDao.getAccountByKey("Doesn't exist",internalCallContext));
}
