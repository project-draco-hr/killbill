{
  final DateTime requestedTimestamp=clock.getUTCNow();
  final BusinessSubscription prevSubscription=new BusinessSubscription(null,plan.getName(),phase.getName(),Currency.USD,clock.getUTCNow(),Subscription.SubscriptionState.ACTIVE,catalog);
  final BusinessSubscription nextSubscription=new BusinessSubscription(null,plan.getName(),phase.getName(),Currency.USD,clock.getUTCNow(),Subscription.SubscriptionState.CANCELLED,catalog);
  final BusinessSubscriptionEvent event=BusinessSubscriptionEvent.subscriptionCancelled(plan.getName(),catalog,requestedTimestamp,requestedTimestamp);
  transition=new BusinessSubscriptionTransition(TOTAL_ORDERING,BUNDLE_ID,EXTERNAL_KEY,ACCOUNT_ID,ACCOUNT_KEY,UUID.randomUUID(),requestedTimestamp,event,prevSubscription,nextSubscription);
  final IDBI dbi=helper.getDBI();
  businessSubscriptionTransitionSqlDao=dbi.onDemand(BusinessSubscriptionTransitionSqlDao.class);
  try {
    businessSubscriptionTransitionSqlDao.test();
  }
 catch (  Throwable t) {
    Assert.fail(t.toString());
  }
}
