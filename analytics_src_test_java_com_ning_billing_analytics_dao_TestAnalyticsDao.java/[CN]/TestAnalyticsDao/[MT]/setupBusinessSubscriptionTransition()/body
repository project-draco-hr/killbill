{
  final BusinessSubscription prevSubscription=new BusinessSubscription(null,plan,phase,Currency.USD,new DateTime(DateTimeZone.UTC),Subscription.SubscriptionState.ACTIVE,UUID.randomUUID(),UUID.randomUUID());
  final BusinessSubscription nextSubscription=new BusinessSubscription(null,plan,phase,Currency.USD,new DateTime(DateTimeZone.UTC),Subscription.SubscriptionState.CANCELLED,UUID.randomUUID(),UUID.randomUUID());
  final BusinessSubscriptionEvent event=BusinessSubscriptionEvent.subscriptionCancelled(plan);
  final DateTime requestedTimestamp=new DateTime(DateTimeZone.UTC);
  transition=new BusinessSubscriptionTransition(EVENT_ID,EVENT_KEY,ACCOUNT_KEY,requestedTimestamp,event,prevSubscription,nextSubscription);
  final IDBI dbi=helper.getDBI();
  businessSubscriptionTransitionDao=dbi.onDemand(BusinessSubscriptionTransitionDao.class);
  try {
    businessSubscriptionTransitionDao.test();
  }
 catch (  Throwable t) {
    Assert.fail(t.toString());
  }
}
