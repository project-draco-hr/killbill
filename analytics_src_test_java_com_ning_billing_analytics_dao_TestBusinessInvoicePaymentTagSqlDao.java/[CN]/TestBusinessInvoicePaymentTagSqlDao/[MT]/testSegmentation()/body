{
  final String paymentId1=UUID.randomUUID().toString();
  final String name1=UUID.randomUUID().toString().substring(0,20);
  final String paymentId2=UUID.randomUUID().toString();
  final String name2=UUID.randomUUID().toString().substring(0,20);
  Assert.assertEquals(invoicePaymentTagSqlDao.addTag(paymentId1,name1,internalCallContext),1);
  Assert.assertEquals(invoicePaymentTagSqlDao.addTag(paymentId2,name2,internalCallContext),1);
  Assert.assertEquals(invoicePaymentTagSqlDao.getTagsForInvoicePayment(paymentId1,internalCallContext).size(),1);
  Assert.assertEquals(invoicePaymentTagSqlDao.getTagsForInvoicePayment(paymentId2,internalCallContext).size(),1);
  Assert.assertEquals(invoicePaymentTagSqlDao.removeTag(paymentId1,name1,internalCallContext),1);
  Assert.assertEquals(invoicePaymentTagSqlDao.getTagsForInvoicePayment(paymentId1,internalCallContext).size(),0);
  Assert.assertEquals(invoicePaymentTagSqlDao.getTagsForInvoicePayment(paymentId2,internalCallContext).size(),1);
}
