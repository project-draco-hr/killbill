{
  log.info("Starting testUncancel");
  try {
    String prod="Shotgun";
    BillingPeriod term=BillingPeriod.MONTHLY;
    String planSet=PriceListSet.DEFAULT_PRICELIST_NAME;
    Subscription subscription=createSubscription(prod,term,planSet);
    IPlanPhase trialPhase=subscription.getCurrentPhase();
    assertEquals(trialPhase.getPhaseType(),PhaseType.TRIAL);
    DateTime expectedPhaseTrialChange=Clock.addDuration(subscription.getStartDate(),trialPhase.getDuration());
    checkNextPhaseChange(subscription,1,expectedPhaseTrialChange);
    testListener.pushExpectedEvent(NextEvent.PHASE);
    clock.setDeltaFromReality(trialPhase.getDuration(),DAY_IN_MS);
    assertTrue(testListener.isCompleted(2000));
    IPlanPhase currentPhase=subscription.getCurrentPhase();
    assertEquals(currentPhase.getPhaseType(),PhaseType.EVERGREEN);
    IDuration ctd=getDurationMonth(1);
    DateTime newChargedThroughDate=Clock.addDuration(expectedPhaseTrialChange,ctd);
    billingApi.setChargedThroughDate(subscription.getId(),newChargedThroughDate);
    subscription=(Subscription)entitlementApi.getSubscriptionFromId(subscription.getId());
    testListener.pushExpectedEvent(NextEvent.CANCEL);
    subscription.cancel();
    assertFalse(testListener.isCompleted(2000));
    subscription.uncancel();
    clock.addDeltaFromReality(ctd);
    DateTime future=clock.getUTCNow();
    assertFalse(testListener.isCompleted(2000));
    IPlan currentPlan=subscription.getCurrentPlan();
    assertEquals(currentPlan.getProduct().getName(),prod);
    currentPhase=subscription.getCurrentPhase();
    assertEquals(currentPhase.getPhaseType(),PhaseType.EVERGREEN);
  }
 catch (  EntitlementUserApiException e) {
    Assert.fail(e.getMessage());
  }
}
