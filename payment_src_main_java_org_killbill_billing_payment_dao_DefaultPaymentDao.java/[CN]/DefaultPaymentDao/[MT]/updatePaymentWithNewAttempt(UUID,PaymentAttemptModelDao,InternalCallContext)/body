{
  return transactionalSqlDao.execute(new EntitySqlDaoTransactionWrapper<PaymentAttemptModelDao>(){
    @Override public PaymentAttemptModelDao inTransaction(    final EntitySqlDaoWrapperFactory<EntitySqlDao> entitySqlDaoWrapperFactory) throws Exception {
      final PaymentAttemptSqlDao transactional=entitySqlDaoWrapperFactory.become(PaymentAttemptSqlDao.class);
      transactional.create(attempt,context);
      final PaymentAttemptModelDao savedAttempt=transactional.getById(attempt.getId().toString(),context);
      entitySqlDaoWrapperFactory.become(PaymentSqlDao.class).updatePaymentForNewAttempt(paymentId.toString(),attempt.getPaymentMethodId().toString(),savedAttempt.getRequestedAmount(),attempt.getEffectiveDate().toDate(),context);
      return savedAttempt;
    }
  }
);
}
