{
  return transactionalSqlDao.execute(new EntitySqlDaoTransactionWrapper<PaymentTransactionModelDao>(){
    @Override public PaymentTransactionModelDao inTransaction(    final EntitySqlDaoWrapperFactory<EntitySqlDao> entitySqlDaoWrapperFactory) throws Exception {
      final TransactionSqlDao transactional=entitySqlDaoWrapperFactory.become(TransactionSqlDao.class);
      transactional.create(directPaymentTransaction,context);
      final PaymentTransactionModelDao directPaymentTransactionModelDao=transactional.getById(directPaymentTransaction.getId().toString(),context);
      entitySqlDaoWrapperFactory.become(PaymentSqlDao.class).updatePaymentForNewTransaction(directPaymentId.toString(),context);
      return directPaymentTransactionModelDao;
    }
  }
);
}
