{
  final DateTime initialDate=new DateTime(2012,4,25,0,3,42,0);
  clock.setDeltaFromReality(initialDate.getMillis() - clock.getUTCNow().getMillis());
  final Account accountJson=createAccountWithDefaultPaymentMethod();
  final String productName="Shotgun";
  final BillingPeriod term=BillingPeriod.MONTHLY;
  final String bundleExternalKey="93199";
  final Subscription entitlement=createEntitlement(accountJson.getAccountId(),bundleExternalKey,productName,ProductCategory.BASE,term,true);
  final Bundle bundle=killBillClient.getBundle(bundleExternalKey);
  assertEquals(bundle.getAccountId(),accountJson.getAccountId());
  assertEquals(bundle.getExternalKey(),bundleExternalKey);
  final BlockingState blockingState=new BlockingState(bundle.getBundleId(),"state","service",false,true,true,clock.getToday(DateTimeZone.forID(accountJson.getTimeZone())),BlockingStateType.SUBSCRIPTION_BUNDLE,null);
  killBillClient.blockBundle(bundle.getBundleId(),blockingState,createdBy,reason,comment);
  final Subscription subscription=killBillClient.getSubscription(entitlement.getSubscriptionId());
  assertEquals(subscription.getState(),EntitlementState.BLOCKED);
  clock.addDays(1);
  final BlockingState unblockingState=new BlockingState(bundle.getBundleId(),"state","service",false,false,false,clock.getToday(DateTimeZone.forID(accountJson.getTimeZone())),BlockingStateType.SUBSCRIPTION_BUNDLE,null);
  killBillClient.blockBundle(bundle.getBundleId(),unblockingState,createdBy,reason,comment);
  final Subscription subscription2=killBillClient.getSubscription(entitlement.getSubscriptionId());
  assertEquals(subscription2.getState(),EntitlementState.ACTIVE);
}
