{
  try {
    final NotificationQueue checkOverdueQueue=notificationQueueService.getNotificationQueue(DefaultOverdueService.OVERDUE_SERVICE_NAME,DefaultOverdueCheckNotifier.OVERDUE_CHECK_NOTIFIER_QUEUE);
    transactionalSqlDao.execute(new EntitySqlDaoTransactionWrapper<Void>(){
      @Override public Void inTransaction(      final EntitySqlDaoWrapperFactory<EntitySqlDao> entitySqlDaoWrapperFactory) throws Exception {
        final List<Notification> futureNotifications=getFutureNotificationsForAccountAndOverdueableInTransaction(entitySqlDaoWrapperFactory,checkOverdueQueue,overdueable,context);
        for (        final Notification notification : futureNotifications) {
          checkOverdueQueue.removeNotificationFromTransaction(entitySqlDaoWrapperFactory,notification.getId(),context);
        }
        return null;
      }
    }
);
  }
 catch (  NoSuchNotificationQueue e) {
    log.error("Attempting to clear items from a non-existent queue (DefaultOverdueCheck).",e);
  }
}
