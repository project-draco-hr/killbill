{
  final String accountKey=UUID.randomUUID().toString();
  final UUID bundleId=UUID.randomUUID();
  final DateTime endDate=new DateTime(DateTimeZone.UTC);
  final String externalKey=UUID.randomUUID().toString();
  final DateTime startDate=new DateTime(DateTimeZone.UTC);
  final String status=UUID.randomUUID().toString();
  final BusinessOverdueStatus overdueStatus=new BusinessOverdueStatus(accountKey,bundleId,endDate,externalKey,startDate,status);
  Assert.assertSame(overdueStatus,overdueStatus);
  Assert.assertEquals(overdueStatus,overdueStatus);
  Assert.assertTrue(overdueStatus.equals(overdueStatus));
  Assert.assertEquals(overdueStatus.getAccountKey(),accountKey);
  Assert.assertEquals(overdueStatus.getBundleId(),bundleId);
  Assert.assertEquals(overdueStatus.getEndDate(),endDate);
  Assert.assertEquals(overdueStatus.getExternalKey(),externalKey);
  Assert.assertEquals(overdueStatus.getStartDate(),startDate);
  Assert.assertEquals(overdueStatus.getStatus(),status);
  final BusinessOverdueStatus otherOverdueStatus=new BusinessOverdueStatus(UUID.randomUUID().toString(),UUID.randomUUID(),new DateTime(DateTimeZone.UTC),UUID.randomUUID().toString(),new DateTime(DateTimeZone.UTC),UUID.randomUUID().toString());
  Assert.assertFalse(overdueStatus.equals(otherOverdueStatus));
}
