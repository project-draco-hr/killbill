{
  DateTime initialDate=new DateTime(2012,4,25,0,3,42,0);
  clock.setDeltaFromReality(initialDate.getMillis() - clock.getUTCNow().getMillis());
  AccountJson accountJson=createAccount("xil","shdxilhkkl","xil@yahoo.com");
  BundleJsonNoSubscriptions bundleJson=createBundle(accountJson.getAccountId(),"99999");
  String productName="Shotgun";
  BillingPeriod term=BillingPeriod.MONTHLY;
  SubscriptionJsonNoEvents subscriptionJson=createSubscription(bundleJson.getBundleId(),productName,ProductCategory.BASE.toString(),term.toString(),true);
  Assert.assertNotNull(subscriptionJson.getChargedThroughDate());
  Assert.assertEquals(subscriptionJson.getChargedThroughDate(),subscriptionJson.getStartDate().plusDays(30));
  String uri=JaxrsResource.SUBSCRIPTIONS_PATH + "/" + subscriptionJson.getSubscriptionId().toString();
  Response response=doGet(uri,DEFAULT_EMPTY_QUERY,DEFAULT_HTTP_TIMEOUT_SEC);
  assertEquals(response.getStatusCode(),Status.OK.getStatusCode());
  String baseJson=response.getResponseBody();
  SubscriptionJsonNoEvents objFromJson=mapper.readValue(baseJson,SubscriptionJsonNoEvents.class);
  Assert.assertTrue(objFromJson.equals(subscriptionJson));
  String newProductName="Assault-Rifle";
  SubscriptionJsonNoEvents newInput=new SubscriptionJsonNoEvents(subscriptionJson.getSubscriptionId(),subscriptionJson.getBundleId(),null,newProductName,subscriptionJson.getProductCategory(),subscriptionJson.getBillingPeriod(),subscriptionJson.getPriceList(),null);
  baseJson=mapper.writeValueAsString(newInput);
  Map<String,String> queryParams=getQueryParamsForCallCompletion(CALL_COMPLETION_TIMEOUT_SEC);
  response=doPut(uri,baseJson,queryParams,DEFAULT_HTTP_TIMEOUT_SEC);
  assertEquals(response.getStatusCode(),Status.OK.getStatusCode());
  baseJson=response.getResponseBody();
  objFromJson=mapper.readValue(baseJson,SubscriptionJsonNoEvents.class);
  assertTrue(objFromJson.equalsNoSubscriptionIdNoStartDateNoCTD(newInput));
  Interval it=new Interval(clock.getUTCNow(),clock.getUTCNow().plusMonths(3).plusDays(1));
  clock.addDeltaFromReality(it.toDurationMillis());
  crappyWaitForLackOfProperSynchonization();
  uri=JaxrsResource.SUBSCRIPTIONS_PATH + "/" + subscriptionJson.getSubscriptionId().toString();
  response=doDelete(uri,queryParams,DEFAULT_HTTP_TIMEOUT_SEC);
  assertEquals(response.getStatusCode(),Status.OK.getStatusCode());
  uri=JaxrsResource.SUBSCRIPTIONS_PATH + "/" + subscriptionJson.getSubscriptionId().toString()+ "/uncancel";
  response=doPut(uri,baseJson,DEFAULT_EMPTY_QUERY,DEFAULT_HTTP_TIMEOUT_SEC);
  Assert.assertEquals(response.getStatusCode(),Status.OK.getStatusCode());
}
