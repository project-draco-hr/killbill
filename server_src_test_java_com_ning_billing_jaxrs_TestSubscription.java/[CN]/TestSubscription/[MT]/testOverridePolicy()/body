{
  final DateTime initialDate=new DateTime(2012,4,25,0,3,42,0);
  clock.setDeltaFromReality(initialDate.getMillis() - clock.getUTCNow().getMillis());
  final AccountJson accountJson=createAccountWithDefaultPaymentMethod("xil","shdxilhkkl","xil@yahoo.com");
  final BundleJsonNoSubscriptions bundleJson=createBundle(accountJson.getAccountId(),"99999");
  final String productName="Shotgun";
  final BillingPeriod term=BillingPeriod.ANNUAL;
  final EntitlementJsonNoEvents subscriptionJson=createSubscription(bundleJson.getBundleId(),productName,ProductCategory.BASE.toString(),term.toString(),true);
  final String uri=JaxrsResource.SUBSCRIPTIONS_PATH + "/" + subscriptionJson.getEntitlementId();
  Response response=doGet(uri,DEFAULT_EMPTY_QUERY,DEFAULT_HTTP_TIMEOUT_SEC);
  assertEquals(response.getStatusCode(),Status.OK.getStatusCode());
  String baseJson=response.getResponseBody();
  EntitlementJsonNoEvents objFromJson=mapper.readValue(baseJson,EntitlementJsonNoEvents.class);
  Assert.assertTrue(objFromJson.equals(subscriptionJson));
  assertEquals(objFromJson.getBillingPeriod(),BillingPeriod.ANNUAL.toString());
  final EntitlementJsonNoEvents newInput=null;
  baseJson=mapper.writeValueAsString(newInput);
  final Map<String,String> queryParams=getQueryParamsForCallCompletion(CALL_COMPLETION_TIMEOUT_SEC);
  queryParams.put(JaxrsResource.QUERY_POLICY,"immediate");
  response=doPut(uri,baseJson,queryParams,DEFAULT_HTTP_TIMEOUT_SEC);
  assertEquals(response.getStatusCode(),Status.OK.getStatusCode());
  baseJson=response.getResponseBody();
  objFromJson=mapper.readValue(baseJson,EntitlementJsonNoEvents.class);
  assertEquals(objFromJson.getBillingPeriod(),BillingPeriod.MONTHLY.toString());
}
