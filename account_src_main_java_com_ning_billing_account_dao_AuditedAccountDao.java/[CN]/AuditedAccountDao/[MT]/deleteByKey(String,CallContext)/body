{
  try {
    accountSqlDao.inTransaction(new Transaction<Void,AccountSqlDao>(){
      @Override public Void inTransaction(      final AccountSqlDao accountSqlDao,      final TransactionStatus status) throws AccountApiException, Bus.EventBusException {
        Account account=accountSqlDao.getAccountByKey(externalKey);
        accountSqlDao.deleteByKey(externalKey);
        UUID historyId=UUID.randomUUID();
        AccountHistorySqlDao historyDao=accountSqlDao.become(AccountHistorySqlDao.class);
        historyDao.insertAccountHistoryFromTransaction(account,historyId.toString(),ChangeType.UPDATE.toString(),context);
        AuditSqlDao auditDao=accountSqlDao.become(AuditSqlDao.class);
        auditDao.insertAuditFromTransaction("account_history",historyId.toString(),ChangeType.INSERT.toString(),context);
        return null;
      }
    }
);
  }
 catch (  RuntimeException re) {
    if (re.getCause() instanceof AccountApiException) {
      throw (AccountApiException)re.getCause();
    }
 else {
      throw re;
    }
  }
}
