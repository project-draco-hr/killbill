{
  return transactionalSqlDao.execute(new EntitySqlDaoTransactionWrapper<List<TagDefinitionModelDao>>(){
    @Override public List<TagDefinitionModelDao> inTransaction(    final EntitySqlDaoWrapperFactory entitySqlDaoWrapperFactory) throws Exception {
      final List<TagDefinitionModelDao> result=new LinkedList<TagDefinitionModelDao>();
      for (      final UUID cur : definitionIds) {
        for (        final ControlTagType controlTag : ControlTagType.values()) {
          if (controlTag.getId().equals(cur)) {
            result.add(new TagDefinitionModelDao(controlTag));
            break;
          }
        }
      }
      if (definitionIds.size() > 0) {
        result.addAll(entitySqlDaoWrapperFactory.become(TagDefinitionSqlDao.class).getByIds(Collections2.transform(definitionIds,new Function<UUID,String>(){
          @Override public String apply(          final UUID input){
            return input.toString();
          }
        }
),context));
      }
      return result;
    }
  }
);
}
