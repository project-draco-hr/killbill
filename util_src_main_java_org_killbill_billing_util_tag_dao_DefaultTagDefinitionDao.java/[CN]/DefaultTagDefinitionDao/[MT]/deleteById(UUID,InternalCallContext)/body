{
  try {
    transactionalSqlDao.execute(new EntitySqlDaoTransactionWrapper<Void>(){
      @Override public Void inTransaction(      final EntitySqlDaoWrapperFactory entitySqlDaoWrapperFactory) throws Exception {
        final TagDefinitionSqlDao tagDefinitionSqlDao=entitySqlDaoWrapperFactory.become(TagDefinitionSqlDao.class);
        final TagDefinitionModelDao tagDefinition=tagDefinitionSqlDao.getById(definitionId.toString(),context);
        if (tagDefinition == null) {
          throw new TagDefinitionApiException(ErrorCode.TAG_DEFINITION_DOES_NOT_EXIST,definitionId);
        }
        if (tagDefinitionSqlDao.tagDefinitionUsageCount(definitionId.toString(),context) > 0) {
          throw new TagDefinitionApiException(ErrorCode.TAG_DEFINITION_IN_USE,definitionId);
        }
        tagDefinitionSqlDao.markTagDefinitionAsDeleted(definitionId.toString(),context);
        postBusEventFromTransaction(tagDefinition,tagDefinition,ChangeType.DELETE,entitySqlDaoWrapperFactory,context);
        return null;
      }
    }
);
  }
 catch (  final TransactionFailedException exception) {
    if (exception.getCause() instanceof TagDefinitionApiException) {
      throw (TagDefinitionApiException)exception.getCause();
    }
 else {
      throw exception;
    }
  }
}
