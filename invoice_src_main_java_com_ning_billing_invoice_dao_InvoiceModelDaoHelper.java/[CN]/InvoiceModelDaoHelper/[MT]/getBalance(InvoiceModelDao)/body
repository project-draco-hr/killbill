{
  return InvoiceCalculatorUtils.computeInvoiceBalance(invoiceModelDao.getCurrency(),Iterables.transform(invoiceModelDao.getInvoiceItems(),new Function<InvoiceItemModelDao,InvoiceItem>(){
    @Override public InvoiceItem apply(    final InvoiceItemModelDao input){
      return InvoiceItemFactory.fromModelDao(input);
    }
  }
),Iterables.transform(invoiceModelDao.getInvoicePayments(),new Function<InvoicePaymentModelDao,InvoicePayment>(){
    @Nullable @Override public InvoicePayment apply(    final InvoicePaymentModelDao input){
      return new DefaultInvoicePayment(input);
    }
  }
));
}
