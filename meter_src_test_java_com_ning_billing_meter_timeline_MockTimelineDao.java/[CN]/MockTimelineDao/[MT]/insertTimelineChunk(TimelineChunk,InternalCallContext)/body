{
  final Long timelineChunkId;
synchronized (timelineChunks) {
    timelineChunks.put(timelineChunks.size(),chunk);
    timelineChunkId=(long)timelineChunks.size() - 1;
  }
synchronized (samplesPerHostAndSampleKind) {
    Map<Integer,List<TimelineChunk>> samplesPerSampleKind=samplesPerHostAndSampleKind.get(chunk.getSourceId());
    if (samplesPerSampleKind == null) {
      samplesPerSampleKind=new HashMap<Integer,List<TimelineChunk>>();
    }
    List<TimelineChunk> chunkAndTimes=samplesPerSampleKind.get(chunk.getMetricId());
    if (chunkAndTimes == null) {
      chunkAndTimes=new ArrayList<TimelineChunk>();
    }
    chunkAndTimes.add(chunk);
    samplesPerSampleKind.put(chunk.getMetricId(),chunkAndTimes);
    samplesPerHostAndSampleKind.put(chunk.getSourceId(),samplesPerSampleKind);
  }
  return timelineChunkId;
}
