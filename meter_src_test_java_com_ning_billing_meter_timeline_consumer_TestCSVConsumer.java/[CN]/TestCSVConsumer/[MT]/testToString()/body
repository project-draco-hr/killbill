{
  final int sampleCount=3;
  final DateTime startTime=new DateTime("2012-01-16T21:23:58.000Z",DateTimeZone.UTC);
  final List<DateTime> dateTimes=new ArrayList<DateTime>();
  final ByteArrayOutputStream out=new ByteArrayOutputStream();
  final DataOutputStream stream=new DataOutputStream(out);
  for (int i=0; i < sampleCount; i++) {
    sampleCoder.encodeSample(stream,new ScalarSample<Long>(SampleOpcode.LONG,12345L + i));
    dateTimes.add(startTime.plusSeconds(1 + i));
  }
  final DateTime endTime=dateTimes.get(dateTimes.size() - 1);
  final byte[] times=timelineCoder.compressDateTimes(dateTimes);
  final TimelineChunk timelineChunk=new TimelineChunk(CHUNK_ID,HOST_ID,SAMPLE_KIND_ID,startTime,endTime,times,out.toByteArray(),sampleCount);
  Assert.assertEquals(CSVConsumer.getSamplesAsCSV(sampleCoder,timelineChunk),"1326749039,12345,1326749040,12346,1326749041,12347");
  Assert.assertEquals(CSVConsumer.getSamplesAsCSV(sampleCoder,timelineChunk,null,null),"1326749039,12345,1326749040,12346,1326749041,12347");
  Assert.assertEquals(CSVConsumer.getSamplesAsCSV(sampleCoder,timelineChunk,startTime,null),"1326749039,12345,1326749040,12346,1326749041,12347");
  Assert.assertEquals(CSVConsumer.getSamplesAsCSV(sampleCoder,timelineChunk,null,startTime.plusSeconds(sampleCount)),"1326749039,12345,1326749040,12346,1326749041,12347");
  Assert.assertEquals(CSVConsumer.getSamplesAsCSV(sampleCoder,timelineChunk,startTime.plusSeconds(1),startTime.plusSeconds(sampleCount)),"1326749039,12345,1326749040,12346,1326749041,12347");
  Assert.assertEquals(CSVConsumer.getSamplesAsCSV(sampleCoder,timelineChunk,startTime.plusSeconds(2),startTime.plusSeconds(sampleCount)),"1326749040,12346,1326749041,12347");
  Assert.assertEquals(CSVConsumer.getSamplesAsCSV(sampleCoder,timelineChunk,startTime.plusSeconds(3),startTime.plusSeconds(sampleCount)),"1326749041,12347");
  Assert.assertEquals(CSVConsumer.getSamplesAsCSV(sampleCoder,timelineChunk,startTime.plusSeconds(4),startTime.plusSeconds(sampleCount)),"");
  Assert.assertEquals(CSVConsumer.getSamplesAsCSV(sampleCoder,timelineChunk,startTime.plusSeconds(10),startTime.plusSeconds(sampleCount)),"");
  Assert.assertEquals(CSVConsumer.getSamplesAsCSV(sampleCoder,timelineChunk,startTime,startTime.minusSeconds(1)),"");
}
