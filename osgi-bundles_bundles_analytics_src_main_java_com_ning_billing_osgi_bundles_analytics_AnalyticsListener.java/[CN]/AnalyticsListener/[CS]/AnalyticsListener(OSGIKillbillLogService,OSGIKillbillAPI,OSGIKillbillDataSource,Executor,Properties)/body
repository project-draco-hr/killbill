{
  this.logService=logService;
  this.bacDao=new BusinessAccountDao(logService,osgiKillbillAPI,osgiKillbillDataSource,executor);
  this.bstDao=new BusinessSubscriptionTransitionDao(logService,osgiKillbillAPI,osgiKillbillDataSource,bacDao,executor);
  this.binAndBipDao=new BusinessInvoiceAndInvoicePaymentDao(logService,osgiKillbillAPI,osgiKillbillDataSource,bacDao,executor);
  this.bosDao=new BusinessOverdueStatusDao(logService,osgiKillbillAPI,osgiKillbillDataSource,executor);
  this.bFieldDao=new BusinessFieldDao(logService,osgiKillbillAPI,osgiKillbillDataSource);
  this.bTagDao=new BusinessTagDao(logService,osgiKillbillAPI,osgiKillbillDataSource);
  this.allBusinessObjectsDao=new AllBusinessObjectsDao(logService,osgiKillbillAPI,osgiKillbillDataSource,executor);
  this.locker=new MySqlGlobalLocker(osgiKillbillDataSource.getDataSource());
  accountsBlacklist=BLACKLIST_SPLITTER.split(properties.getProperty(ANALYTICS_ACCOUNTS_BLACKLIST_PROPERTY,""));
}
