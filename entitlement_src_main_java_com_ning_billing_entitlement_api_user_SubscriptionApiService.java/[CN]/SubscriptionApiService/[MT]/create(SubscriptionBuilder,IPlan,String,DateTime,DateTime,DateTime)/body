{
  try {
    SubscriptionData subscription=new SubscriptionData(builder,this,clock);
    TimedPhase currentTimedPhase=planAligner.getCurrentTimedPhaseOnCreate(subscription,plan,realPriceList,effectiveDate);
    ApiEventCreate creationEvent=new ApiEventCreate(new ApiEventBuilder().setSubscriptionId(subscription.getId()).setEventPlan(plan.getName()).setEventPlanPhase(currentTimedPhase.getPhase().getName()).setEventPriceList(realPriceList).setActiveVersion(subscription.getActiveVersion()).setProcessedDate(processedDate).setEffectiveDate(effectiveDate).setRequestedDate(requestedDate));
    TimedPhase nextTimedPhase=planAligner.getNextTimedPhaseOnCreate(subscription,plan,realPriceList,effectiveDate);
    PhaseEvent nextPhaseEvent=PhaseEventData.getNextPhaseEvent(nextTimedPhase,subscription,processedDate);
    List<EntitlementEvent> events=new ArrayList<EntitlementEvent>();
    events.add(creationEvent);
    if (nextPhaseEvent != null) {
      events.add(nextPhaseEvent);
    }
    dao.createSubscription(subscription,events);
    subscription.rebuildTransitions(events,catalogService.getCatalog());
    return subscription;
  }
 catch (  CatalogApiException e) {
    throw new EntitlementUserApiException(e);
  }
}
