{
  try {
    TimedPhase[] curAndNextPhases=planAligner.getCurrentAndNextTimedPhaseOnCreate(subscription,plan,initialPhase,realPriceList,requestedDate,effectiveDate);
    ApiEventBuilder createBuilder=new ApiEventBuilder().setSubscriptionId(subscription.getId()).setEventPlan(plan.getName()).setEventPlanPhase(curAndNextPhases[0].getPhase().getName()).setEventPriceList(realPriceList).setActiveVersion(subscription.getActiveVersion()).setProcessedDate(processedDate).setEffectiveDate(effectiveDate).setRequestedDate(requestedDate).setFromDisk(true);
    ApiEvent creationEvent=(reCreate) ? new ApiEventReCreate(createBuilder) : new ApiEventCreate(createBuilder);
    TimedPhase nextTimedPhase=curAndNextPhases[1];
    PhaseEvent nextPhaseEvent=(nextTimedPhase != null) ? PhaseEventData.createNextPhaseEvent(nextTimedPhase.getPhase().getName(),subscription,processedDate,nextTimedPhase.getStartPhase()) : null;
    List<EntitlementEvent> events=new ArrayList<EntitlementEvent>();
    events.add(creationEvent);
    if (nextPhaseEvent != null) {
      events.add(nextPhaseEvent);
    }
    if (reCreate) {
      dao.recreateSubscription(subscription.getId(),events,context);
    }
 else {
      dao.createSubscription(subscription,events,context);
    }
    subscription.rebuildTransitions(dao.getEventsForSubscription(subscription.getId()),catalogService.getFullCatalog());
  }
 catch (  CatalogApiException e) {
    throw new EntitlementUserApiException(e);
  }
}
