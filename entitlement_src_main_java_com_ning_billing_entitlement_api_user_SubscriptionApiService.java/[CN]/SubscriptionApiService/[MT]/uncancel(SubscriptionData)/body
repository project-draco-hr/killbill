{
  if (!subscription.isSubscriptionFutureCancelled()) {
    throw new EntitlementUserApiException(ErrorCode.ENT_UNCANCEL_BAD_STATE,subscription.getId().toString());
  }
  try {
    DateTime now=clock.getUTCNow();
    EntitlementEvent uncancelEvent=new ApiEventUncancel(new ApiEventBuilder().setSubscriptionId(subscription.getId()).setActiveVersion(subscription.getActiveVersion()).setProcessedDate(now).setRequestedDate(now).setEffectiveDate(now));
    List<EntitlementEvent> uncancelEvents=new ArrayList<EntitlementEvent>();
    uncancelEvents.add(uncancelEvent);
    DateTime planStartDate=subscription.getCurrentPlanStart();
    TimedPhase nextTimedPhase=planAligner.getNextTimedPhase(subscription,subscription.getCurrentPlan(),now,planStartDate);
    PhaseEvent nextPhaseEvent=PhaseEventData.getNextPhaseEvent(nextTimedPhase,subscription,now);
    if (nextPhaseEvent != null) {
      uncancelEvents.add(nextPhaseEvent);
    }
    dao.uncancelSubscription(subscription.getId(),uncancelEvents);
    subscription.rebuildTransitions(dao.getEventsForSubscription(subscription.getId()),catalogService.getCatalog());
  }
 catch (  CatalogApiException e) {
    throw new EntitlementUserApiException(e);
  }
}
