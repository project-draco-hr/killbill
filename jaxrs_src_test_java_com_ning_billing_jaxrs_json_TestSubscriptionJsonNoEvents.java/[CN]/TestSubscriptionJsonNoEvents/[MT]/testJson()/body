{
  final String subscriptionId=UUID.randomUUID().toString();
  final String bundleId=UUID.randomUUID().toString();
  final DateTime startDate=new DateTime(DateTimeZone.UTC);
  final String productName=UUID.randomUUID().toString();
  final String productCategory=UUID.randomUUID().toString();
  final String billingPeriod=UUID.randomUUID().toString();
  final String priceList=UUID.randomUUID().toString();
  final DateTime chargedThroughDate=new DateTime(DateTimeZone.UTC);
  final DateTime endDate=new DateTime(DateTimeZone.UTC);
  final SubscriptionJsonNoEvents subscriptionJsonNoEvents=new SubscriptionJsonNoEvents(subscriptionId,bundleId,startDate,productName,productCategory,billingPeriod,priceList,chargedThroughDate,endDate);
  Assert.assertEquals(subscriptionJsonNoEvents.getSubscriptionId(),subscriptionId);
  Assert.assertEquals(subscriptionJsonNoEvents.getBundleId(),bundleId);
  Assert.assertEquals(subscriptionJsonNoEvents.getStartDate(),startDate);
  Assert.assertEquals(subscriptionJsonNoEvents.getProductName(),productName);
  Assert.assertEquals(subscriptionJsonNoEvents.getProductCategory(),productCategory);
  Assert.assertEquals(subscriptionJsonNoEvents.getBillingPeriod(),billingPeriod);
  Assert.assertEquals(subscriptionJsonNoEvents.getPriceList(),priceList);
  Assert.assertEquals(subscriptionJsonNoEvents.getChargedThroughDate(),chargedThroughDate);
  final String asJson=mapper.writeValueAsString(subscriptionJsonNoEvents);
  Assert.assertEquals(asJson,"{\"subscriptionId\":\"" + subscriptionJsonNoEvents.getSubscriptionId() + "\","+ "\"bundleId\":\""+ subscriptionJsonNoEvents.getBundleId()+ "\","+ "\"startDate\":\""+ subscriptionJsonNoEvents.getStartDate().toDateTimeISO().toString()+ "\","+ "\"productName\":\""+ subscriptionJsonNoEvents.getProductName()+ "\","+ "\"productCategory\":\""+ subscriptionJsonNoEvents.getProductCategory()+ "\","+ "\"billingPeriod\":\""+ subscriptionJsonNoEvents.getBillingPeriod()+ "\","+ "\"priceList\":\""+ subscriptionJsonNoEvents.getPriceList()+ "\","+ "\"chargedThroughDate\":\""+ subscriptionJsonNoEvents.getChargedThroughDate().toDateTimeISO().toString()+ "\","+ "\"cancelledDate\":\""+ subscriptionJsonNoEvents.getCancelledDate().toDateTimeISO().toString()+ "\"}");
  final SubscriptionJsonNoEvents fromJson=mapper.readValue(asJson,SubscriptionJsonNoEvents.class);
  Assert.assertEquals(fromJson,subscriptionJsonNoEvents);
}
