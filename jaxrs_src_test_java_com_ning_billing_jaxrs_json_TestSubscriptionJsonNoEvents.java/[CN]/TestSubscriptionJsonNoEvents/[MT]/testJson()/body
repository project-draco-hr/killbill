{
  final String accountId=UUID.randomUUID().toString();
  final String entitlementId=UUID.randomUUID().toString();
  final String bundleId=UUID.randomUUID().toString();
  final String externalKey="ecternalKey";
  final LocalDate startDate=new LocalDate();
  final LocalDate cancelDate=new LocalDate();
  final LocalDate billingStartDate=new LocalDate();
  final LocalDate billingEndDate=new LocalDate();
  final String productName=UUID.randomUUID().toString();
  final String productCategory=UUID.randomUUID().toString();
  final String billingPeriod=UUID.randomUUID().toString();
  final String priceList=UUID.randomUUID().toString();
  final LocalDate chargedThroughDate=new LocalDate();
  final DateTime endDate=new DateTime(DateTimeZone.UTC);
  final List<AuditLogJson> auditLogs=createAuditLogsJson(clock.getUTCNow());
  final SubscriptionJsonNoEvents subscriptionJsonNoEvents=new SubscriptionJsonNoEvents(accountId,bundleId,entitlementId,externalKey,startDate,productName,productCategory,billingPeriod,priceList,cancelDate,auditLogs,chargedThroughDate,billingStartDate,billingEndDate,new Integer(1));
  Assert.assertEquals(subscriptionJsonNoEvents.getEntitlementId(),entitlementId);
  Assert.assertEquals(subscriptionJsonNoEvents.getBundleId(),bundleId);
  Assert.assertEquals(subscriptionJsonNoEvents.getStartDate(),startDate);
  Assert.assertEquals(subscriptionJsonNoEvents.getProductName(),productName);
  Assert.assertEquals(subscriptionJsonNoEvents.getProductCategory(),productCategory);
  Assert.assertEquals(subscriptionJsonNoEvents.getBillingPeriod(),billingPeriod);
  Assert.assertEquals(subscriptionJsonNoEvents.getPriceList(),priceList);
  Assert.assertEquals(subscriptionJsonNoEvents.getChargedThroughDate(),chargedThroughDate);
  Assert.assertEquals(subscriptionJsonNoEvents.getAuditLogs(),auditLogs);
  final String asJson=mapper.writeValueAsString(subscriptionJsonNoEvents);
  final SubscriptionJsonNoEvents fromJson=mapper.readValue(asJson,SubscriptionJsonNoEvents.class);
  Assert.assertEquals(fromJson,subscriptionJsonNoEvents);
}
