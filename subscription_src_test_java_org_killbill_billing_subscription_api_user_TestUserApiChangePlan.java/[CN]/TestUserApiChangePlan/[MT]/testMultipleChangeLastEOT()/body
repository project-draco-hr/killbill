{
  DefaultSubscriptionBase subscription=testUtil.createSubscription(bundle,"Assault-Rifle",BillingPeriod.ANNUAL,"gunclubDiscount");
  final PlanPhase trialPhase=subscription.getCurrentPhase();
  assertEquals(trialPhase.getPhaseType(),PhaseType.TRIAL);
  testListener.pushExpectedEvent(NextEvent.PHASE);
  Interval it=new Interval(clock.getUTCNow(),clock.getUTCNow().plusDays(31));
  clock.addDeltaFromReality(it.toDurationMillis());
  assertListenerStatus();
  final List<Duration> durationList=new ArrayList<Duration>();
  durationList.add(trialPhase.getDuration());
  final DateTime startDiscountPhase=TestSubscriptionHelper.addDuration(subscription.getStartDate(),durationList);
  final Duration ctd=testUtil.getDurationMonth(1);
  final DateTime newChargedThroughDate=TestSubscriptionHelper.addDuration(startDiscountPhase,ctd);
  subscriptionInternalApi.setChargedThroughDate(subscription.getId(),newChargedThroughDate,internalCallContext);
  subscription=(DefaultSubscriptionBase)subscriptionInternalApi.getSubscriptionFromId(subscription.getId(),internalCallContext);
  subscription.changePlan("Shotgun",BillingPeriod.MONTHLY,"gunclubDiscount",null,callContext);
  assertListenerStatus();
  subscription.changePlan("Pistol",BillingPeriod.ANNUAL,"gunclubDiscount",null,callContext);
  assertListenerStatus();
  Plan currentPlan=subscription.getCurrentPlan();
  assertNotNull(currentPlan);
  assertEquals(currentPlan.getProduct().getName(),"Assault-Rifle");
  assertEquals(currentPlan.getProduct().getCategory(),ProductCategory.BASE);
  assertEquals(currentPlan.getRecurringBillingPeriod(),BillingPeriod.ANNUAL);
  PlanPhase currentPhase=subscription.getCurrentPhase();
  assertNotNull(currentPhase);
  assertEquals(currentPhase.getPhaseType(),PhaseType.DISCOUNT);
  testListener.pushExpectedEvent(NextEvent.CHANGE);
  it=new Interval(clock.getUTCNow(),clock.getUTCNow().plusMonths(1));
  clock.addDeltaFromReality(it.toDurationMillis());
  assertListenerStatus();
  currentPlan=subscription.getCurrentPlan();
  assertNotNull(currentPlan);
  assertEquals(currentPlan.getProduct().getName(),"Pistol");
  assertEquals(currentPlan.getProduct().getCategory(),ProductCategory.BASE);
  assertEquals(currentPlan.getRecurringBillingPeriod(),BillingPeriod.ANNUAL);
  currentPhase=subscription.getCurrentPhase();
  assertNotNull(currentPhase);
  assertEquals(currentPhase.getPhaseType(),PhaseType.DISCOUNT);
  testListener.pushExpectedEvent(NextEvent.PHASE);
  it=new Interval(clock.getUTCNow(),clock.getUTCNow().plusMonths(6));
  clock.addDeltaFromReality(it.toDurationMillis());
  assertListenerStatus();
  subscription=(DefaultSubscriptionBase)subscriptionInternalApi.getSubscriptionFromId(subscription.getId(),internalCallContext);
  currentPlan=subscription.getCurrentPlan();
  assertNotNull(currentPlan);
  assertEquals(currentPlan.getProduct().getName(),"Pistol");
  assertEquals(currentPlan.getProduct().getCategory(),ProductCategory.BASE);
  assertEquals(currentPlan.getRecurringBillingPeriod(),BillingPeriod.ANNUAL);
  currentPhase=subscription.getCurrentPhase();
  assertNotNull(currentPhase);
  assertEquals(currentPhase.getPhaseType(),PhaseType.EVERGREEN);
  assertListenerStatus();
}
