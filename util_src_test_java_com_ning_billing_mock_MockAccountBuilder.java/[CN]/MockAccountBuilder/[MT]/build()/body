{
  return new Account(){
    @Override public String getExternalKey(){
      return externalKey;
    }
    @Override public String getName(){
      return name;
    }
    @Override public int getFirstNameLength(){
      return firstNameLength;
    }
    @Override public String getEmail(){
      return email;
    }
    @Override public int getBillCycleDay(){
      return billingCycleDay;
    }
    @Override public Currency getCurrency(){
      return currency;
    }
    @Override public String getPaymentProviderName(){
      return paymentProviderName;
    }
    @Override public DateTimeZone getTimeZone(){
      return timeZone;
    }
    @Override public String getLocale(){
      return locale;
    }
    @Override public String getAddress1(){
      return address1;
    }
    @Override public String getAddress2(){
      return address2;
    }
    @Override public String getCompanyName(){
      return companyName;
    }
    @Override public String getCity(){
      return city;
    }
    @Override public String getStateOrProvince(){
      return stateOrProvince;
    }
    @Override public String getPostalCode(){
      return postalCode;
    }
    @Override public String getCountry(){
      return country;
    }
    @Override public String getPhone(){
      return phone;
    }
    @Override public boolean isMigrated(){
      return migrated;
    }
    @Override public boolean isNotifiedForInvoices(){
      return isNotifiedForInvoices;
    }
    @Override public String getFieldValue(    String fieldName){
      return null;
    }
    @Override public void setFieldValue(    String fieldName,    String fieldValue){
    }
    @Override public void saveFieldValue(    String fieldName,    String fieldValue,    CallContext context){
    }
    @Override public List<CustomField> getFieldList(){
      return null;
    }
    @Override public void setFields(    List<CustomField> fields){
    }
    @Override public void saveFields(    List<CustomField> fields,    CallContext context){
    }
    @Override public void clearFields(){
    }
    @Override public void clearPersistedFields(    CallContext context){
    }
    @Override public ObjectType getObjectType(){
      throw new UnsupportedOperationException();
    }
    @Override public UUID getId(){
      return id;
    }
    @Override public List<Tag> getTagList(){
      return null;
    }
    @Override public boolean hasTag(    TagDefinition tagDefinition){
      return false;
    }
    @Override public boolean hasTag(    ControlTagType controlTagType){
      return false;
    }
    @Override public void addTag(    TagDefinition definition){
    }
    @Override public void addTags(    List<Tag> tags){
    }
    @Override public void addTagsFromDefinitions(    List<TagDefinition> tagDefinitions){
    }
    @Override public void clearTags(){
    }
    @Override public void removeTag(    TagDefinition definition){
    }
    @Override public boolean generateInvoice(){
      return true;
    }
    @Override public boolean processPayment(){
      return true;
    }
    @Override public BlockingState getBlockingState(){
      return null;
    }
    @Override public MutableAccountData toMutableAccountData(){
      throw new NotImplementedException();
    }
  }
;
}
