{
  return new Account(){
    @Override public DateTime getCreatedDate(){
      throw new UnsupportedOperationException();
    }
    @Override public DateTime getUpdatedDate(){
      throw new UnsupportedOperationException();
    }
    @Override public String getExternalKey(){
      return externalKey;
    }
    @Override public String getName(){
      return name;
    }
    @Override public Integer getFirstNameLength(){
      return firstNameLength;
    }
    @Override public String getEmail(){
      return email;
    }
    @Override public BillCycleDay getBillCycleDay(){
      return billingCycleDay;
    }
    @Override public Currency getCurrency(){
      return currency;
    }
    @Override public UUID getPaymentMethodId(){
      return paymentMethodId;
    }
    @Override public DateTimeZone getTimeZone(){
      return timeZone;
    }
    @Override public String getLocale(){
      return locale;
    }
    @Override public String getAddress1(){
      return address1;
    }
    @Override public String getAddress2(){
      return address2;
    }
    @Override public String getCompanyName(){
      return companyName;
    }
    @Override public String getCity(){
      return city;
    }
    @Override public String getStateOrProvince(){
      return stateOrProvince;
    }
    @Override public String getPostalCode(){
      return postalCode;
    }
    @Override public String getCountry(){
      return country;
    }
    @Override public String getPhone(){
      return phone;
    }
    @Override public Boolean isMigrated(){
      return migrated;
    }
    @Override public Boolean isNotifiedForInvoices(){
      return isNotifiedForInvoices;
    }
    @Override public UUID getId(){
      return id;
    }
    @Override public BlockingState getBlockingState(){
      return null;
    }
    @Override public MutableAccountData toMutableAccountData(){
      throw new UnsupportedOperationException();
    }
    @Override public Account mergeWithDelegate(    final Account delegate){
      throw new UnsupportedOperationException();
    }
  }
;
}
