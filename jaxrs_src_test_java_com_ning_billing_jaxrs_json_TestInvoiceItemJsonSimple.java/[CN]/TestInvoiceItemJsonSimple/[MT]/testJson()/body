{
  final String invoiceItemId=UUID.randomUUID().toString();
  final String invoiceId=UUID.randomUUID().toString();
  final String linkedInvoiceItemId=UUID.randomUUID().toString();
  final String accountId=UUID.randomUUID().toString();
  final String bundleId=UUID.randomUUID().toString();
  final String subscriptionId=UUID.randomUUID().toString();
  final String planName=UUID.randomUUID().toString();
  final String phaseName=UUID.randomUUID().toString();
  final String description=UUID.randomUUID().toString();
  final LocalDate startDate=clock.getUTCToday();
  final LocalDate endDate=clock.getUTCToday();
  final BigDecimal amount=BigDecimal.TEN;
  final Currency currency=Currency.MXN;
  final List<AuditLogJson> auditLogs=createAuditLogsJson(clock.getUTCNow());
  final InvoiceItemJson invoiceItemJson=new InvoiceItemJson(invoiceItemId,invoiceId,linkedInvoiceItemId,accountId,bundleId,subscriptionId,planName,phaseName,description,startDate,endDate,amount,currency,auditLogs);
  Assert.assertEquals(invoiceItemJson.getInvoiceItemId(),invoiceItemId);
  Assert.assertEquals(invoiceItemJson.getInvoiceId(),invoiceId);
  Assert.assertEquals(invoiceItemJson.getLinkedInvoiceItemId(),linkedInvoiceItemId);
  Assert.assertEquals(invoiceItemJson.getAccountId(),accountId);
  Assert.assertEquals(invoiceItemJson.getBundleId(),bundleId);
  Assert.assertEquals(invoiceItemJson.getSubscriptionId(),subscriptionId);
  Assert.assertEquals(invoiceItemJson.getPlanName(),planName);
  Assert.assertEquals(invoiceItemJson.getPhaseName(),phaseName);
  Assert.assertEquals(invoiceItemJson.getDescription(),description);
  Assert.assertEquals(invoiceItemJson.getStartDate(),startDate);
  Assert.assertEquals(invoiceItemJson.getEndDate(),endDate);
  Assert.assertEquals(invoiceItemJson.getAmount(),amount);
  Assert.assertEquals(invoiceItemJson.getCurrency(),currency);
  Assert.assertEquals(invoiceItemJson.getAuditLogs(),auditLogs);
  final String asJson=mapper.writeValueAsString(invoiceItemJson);
  final InvoiceItemJson fromJson=mapper.readValue(asJson,InvoiceItemJson.class);
  Assert.assertEquals(fromJson,invoiceItemJson);
}
