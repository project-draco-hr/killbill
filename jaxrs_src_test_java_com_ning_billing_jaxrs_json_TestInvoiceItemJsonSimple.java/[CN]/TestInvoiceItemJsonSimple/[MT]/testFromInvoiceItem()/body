{
  final InvoiceItem invoiceItem=Mockito.mock(InvoiceItem.class);
  Mockito.when(invoiceItem.getId()).thenReturn(UUID.randomUUID());
  Mockito.when(invoiceItem.getInvoiceId()).thenReturn(UUID.randomUUID());
  Mockito.when(invoiceItem.getLinkedItemId()).thenReturn(UUID.randomUUID());
  Mockito.when(invoiceItem.getAccountId()).thenReturn(UUID.randomUUID());
  Mockito.when(invoiceItem.getBundleId()).thenReturn(UUID.randomUUID());
  Mockito.when(invoiceItem.getSubscriptionId()).thenReturn(UUID.randomUUID());
  Mockito.when(invoiceItem.getPlanName()).thenReturn(UUID.randomUUID().toString());
  Mockito.when(invoiceItem.getPhaseName()).thenReturn(UUID.randomUUID().toString());
  Mockito.when(invoiceItem.getDescription()).thenReturn(UUID.randomUUID().toString());
  Mockito.when(invoiceItem.getStartDate()).thenReturn(clock.getUTCToday());
  Mockito.when(invoiceItem.getEndDate()).thenReturn(clock.getUTCToday());
  Mockito.when(invoiceItem.getAmount()).thenReturn(BigDecimal.TEN);
  Mockito.when(invoiceItem.getCurrency()).thenReturn(Currency.EUR);
  final InvoiceItemJson invoiceItemJson=new InvoiceItemJson(invoiceItem);
  Assert.assertEquals(invoiceItemJson.getInvoiceItemId(),invoiceItem.getId().toString());
  Assert.assertEquals(invoiceItemJson.getInvoiceId(),invoiceItem.getInvoiceId().toString());
  Assert.assertEquals(invoiceItemJson.getLinkedInvoiceItemId(),invoiceItem.getLinkedItemId().toString());
  Assert.assertEquals(invoiceItemJson.getAccountId(),invoiceItem.getAccountId().toString());
  Assert.assertEquals(invoiceItemJson.getBundleId(),invoiceItem.getBundleId().toString());
  Assert.assertEquals(invoiceItemJson.getSubscriptionId(),invoiceItem.getSubscriptionId().toString());
  Assert.assertEquals(invoiceItemJson.getPlanName(),invoiceItem.getPlanName());
  Assert.assertEquals(invoiceItemJson.getPhaseName(),invoiceItem.getPhaseName());
  Assert.assertEquals(invoiceItemJson.getDescription(),invoiceItem.getDescription());
  Assert.assertEquals(invoiceItemJson.getStartDate(),invoiceItem.getStartDate());
  Assert.assertEquals(invoiceItemJson.getEndDate(),invoiceItem.getEndDate());
  Assert.assertEquals(invoiceItemJson.getAmount(),invoiceItem.getAmount());
  Assert.assertEquals(invoiceItemJson.getCurrency(),invoiceItem.getCurrency());
}
