{
  final TagDefinitionSqlDao tagDefinitionSqlDao=dbi.onDemand(TagDefinitionSqlDao.class);
  for (int i=0; i < 10; i++) {
    final String definitionName="name-" + i;
    final String description="description-" + i;
    eventsListener.pushExpectedEvent(NextEvent.TAG_DEFINITION);
    tagDefinitionDao.create(definitionName,description,internalCallContext);
    assertListenerStatus();
  }
  Assert.assertEquals(ImmutableList.<TagDefinitionModelDao>copyOf(tagDefinitionSqlDao.getAll(internalCallContext)).size(),10);
  Assert.assertEquals(ImmutableList.<TagDefinitionModelDao>copyOf(tagDefinitionSqlDao.get(0L,100L,"recordId",internalCallContext)).size(),10);
  Assert.assertEquals(ImmutableList.<TagDefinitionModelDao>copyOf(tagDefinitionSqlDao.get(5L,100L,"recordId",internalCallContext)).size(),5);
  Assert.assertEquals(ImmutableList.<TagDefinitionModelDao>copyOf(tagDefinitionSqlDao.get(5L,10L,"recordId",internalCallContext)).size(),5);
  Assert.assertEquals(ImmutableList.<TagDefinitionModelDao>copyOf(tagDefinitionSqlDao.get(0L,5L,"recordId",internalCallContext)).size(),5);
  for (int i=0; i < 10; i++) {
    final List<TagDefinitionModelDao> tagDefinitions=ImmutableList.<TagDefinitionModelDao>copyOf(tagDefinitionSqlDao.get(0L,(long)i,"recordId",internalCallContext));
    Assert.assertEquals(tagDefinitions.size(),i);
    for (int j=0; j < tagDefinitions.size(); j++) {
      Assert.assertEquals(tagDefinitions.get(j).getName(),"name-" + j);
      Assert.assertEquals(tagDefinitions.get(j).getDescription(),"description-" + j);
    }
  }
  Assert.assertEquals(ImmutableList.<TagDefinitionModelDao>copyOf(tagDefinitionDao.getAll(internalCallContext)).size(),10);
  Assert.assertEquals(ImmutableList.<TagDefinitionModelDao>copyOf(tagDefinitionDao.get(0L,100L,internalCallContext)).size(),10);
  Assert.assertEquals(ImmutableList.<TagDefinitionModelDao>copyOf(tagDefinitionDao.get(5L,100L,internalCallContext)).size(),5);
  Assert.assertEquals(ImmutableList.<TagDefinitionModelDao>copyOf(tagDefinitionDao.get(5L,10L,internalCallContext)).size(),5);
  Assert.assertEquals(ImmutableList.<TagDefinitionModelDao>copyOf(tagDefinitionDao.get(0L,5L,internalCallContext)).size(),5);
  for (int i=0; i < 10; i++) {
    final List<TagDefinitionModelDao> tagDefinitions=ImmutableList.<TagDefinitionModelDao>copyOf(tagDefinitionDao.get(0L,(long)i,internalCallContext));
    Assert.assertEquals(tagDefinitions.size(),i);
    for (int j=0; j < tagDefinitions.size(); j++) {
      Assert.assertEquals(tagDefinitions.get(j).getName(),"name-" + j);
      Assert.assertEquals(tagDefinitions.get(j).getDescription(),"description-" + j);
    }
  }
}
