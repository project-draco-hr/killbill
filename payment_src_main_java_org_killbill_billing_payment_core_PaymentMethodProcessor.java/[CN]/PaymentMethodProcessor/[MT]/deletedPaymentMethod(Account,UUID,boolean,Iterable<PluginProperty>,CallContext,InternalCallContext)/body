{
  try {
    new WithAccountLock<Void,PaymentApiException>(paymentConfig).processAccountWithLock(locker,account.getExternalKey(),new DispatcherCallback<PluginDispatcherReturnType<Void>,PaymentApiException>(){
      @Override public PluginDispatcherReturnType<Void> doOperation() throws PaymentApiException {
        final PaymentMethodModelDao paymentMethodModel=paymentDao.getPaymentMethod(paymentMethodId,context);
        if (paymentMethodModel == null) {
          throw new PaymentApiException(ErrorCode.PAYMENT_NO_SUCH_PAYMENT_METHOD,paymentMethodId);
        }
        try {
          if (paymentMethodId.equals(account.getPaymentMethodId())) {
            if (!deleteDefaultPaymentMethodWithAutoPayOff) {
              throw new PaymentApiException(ErrorCode.PAYMENT_DEL_DEFAULT_PAYMENT_METHOD,account.getId());
            }
 else {
              final boolean isAccountAutoPayOff=isAccountAutoPayOff(account.getId(),context);
              if (!isAccountAutoPayOff) {
                log.info("Setting account {} to AUTO_PAY_OFF because of default payment method deletion",account.getId());
                setAccountAutoPayOff(account.getId(),context);
              }
              accountInternalApi.removePaymentMethod(account.getId(),context);
            }
          }
          final PaymentPluginApi pluginApi=getPluginApi(paymentMethodId,context);
          pluginApi.deletePaymentMethod(account.getId(),paymentMethodId,properties,callContext);
          paymentDao.deletedPaymentMethod(paymentMethodId,context);
          return PluginDispatcher.createPluginDispatcherReturnType(null);
        }
 catch (        final PaymentPluginApiException e) {
          log.warn("Error deleting payment method " + paymentMethodId,e);
          throw new PaymentApiException(ErrorCode.PAYMENT_DEL_PAYMENT_METHOD,account.getId(),e.getErrorMessage());
        }
catch (        final AccountApiException e) {
          throw new PaymentApiException(e);
        }
      }
    }
);
  }
 catch (  final Exception e) {
    throw new PaymentApiException(e,ErrorCode.PAYMENT_INTERNAL_ERROR,Objects.firstNonNull(e.getMessage(),""));
  }
}
