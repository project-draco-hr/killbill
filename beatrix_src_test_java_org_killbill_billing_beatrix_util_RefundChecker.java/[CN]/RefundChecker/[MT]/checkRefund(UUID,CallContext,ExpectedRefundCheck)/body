{
  final DirectPayment payment=null;
  final List<DirectPayment> refunds=null;
  Assert.assertEquals(refunds.size(),1);
  final InvoicePayment refundInvoicePayment=getInvoicePaymentEntry(paymentId,InvoicePaymentType.REFUND,context);
  final InvoicePayment invoicePayment=getInvoicePaymentEntry(paymentId,InvoicePaymentType.ATTEMPT,context);
  final DirectPayment refund=refunds.get(0);
  final DirectPaymentTransaction refundTransaction=getRefundTransaction(refund);
  Assert.assertEquals(refundTransaction.getDirectPaymentId(),expected.getPaymentId());
  Assert.assertEquals(refund.getCurrency(),expected.getCurrency());
  Assert.assertEquals(refundTransaction.getAmount().compareTo(expected.getRefundAmount()),0);
  Assert.assertEquals(refundInvoicePayment.getPaymentId(),paymentId);
  Assert.assertEquals(refundInvoicePayment.getLinkedInvoicePaymentId(),invoicePayment.getId());
  Assert.assertEquals(refundInvoicePayment.getPaymentCookieId(),refund.getId());
  Assert.assertEquals(refundInvoicePayment.getInvoiceId(),invoicePayment.getInvoiceId());
  Assert.assertEquals(refundInvoicePayment.getAmount().compareTo(expected.getRefundAmount().negate()),0);
  Assert.assertEquals(refundInvoicePayment.getCurrency(),expected.getCurrency());
  return refund;
}
