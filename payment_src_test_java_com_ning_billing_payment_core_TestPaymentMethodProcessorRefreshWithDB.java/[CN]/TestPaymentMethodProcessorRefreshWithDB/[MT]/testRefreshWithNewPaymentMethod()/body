{
  final Account account=testHelper.createTestAccount("foo@bar.com",true);
  Assert.assertEquals(getPluginApi().getPaymentMethods(account.getId(),true,callContext).size(),1);
  final UUID existingPMId=account.getPaymentMethodId();
  final UUID newPmId=UUID.randomUUID();
  getPluginApi().addPaymentMethod(account.getId(),newPmId,new DefaultNoOpPaymentMethodPlugin(UUID.randomUUID().toString(),false,ImmutableList.<PaymentMethodKVInfo>of()),false,callContext);
  final List<PaymentMethod> methods=paymentMethodProcessor.refreshPaymentMethods(MockPaymentProviderPlugin.PLUGIN_NAME,account,internalCallContext);
  Assert.assertEquals(methods.size(),2);
  checkPaymentMethodExistsWithStatus(methods,existingPMId,true);
  checkPaymentMethodExistsWithStatus(methods,newPmId,true);
}
