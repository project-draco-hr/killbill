{
  final boolean isDefault=account.getPaymentMethodId() != null && account.getPaymentMethodId().equals(in.getId());
  final PaymentMethodPlugin pluginDetail=in.getPluginDetail();
  PaymentMethodPluginDetailJson pluginDetailJson=null;
  if (pluginDetail != null) {
    List<PluginPropertyJson> properties=null;
    if (pluginDetail.getProperties() != null) {
      properties=new ArrayList<PluginPropertyJson>(Collections2.transform(pluginDetail.getProperties(),new Function<PluginProperty,PluginPropertyJson>(){
        @Override public PluginPropertyJson apply(        final PluginProperty input){
          return new PluginPropertyJson(input.getKey(),input.getValue() == null ? null : input.getValue().toString(),input.getIsUpdatable());
        }
      }
));
    }
    pluginDetailJson=new PaymentMethodPluginDetailJson(pluginDetail.getExternalPaymentMethodId(),pluginDetail.isDefaultPaymentMethod(),properties);
  }
  return new PaymentMethodJson(in.getId().toString(),account.getId().toString(),isDefault,in.getPluginName(),pluginDetailJson,toAuditLogJson(accountAuditLogs == null ? null : accountAuditLogs.getAuditLogsForPaymentMethod(in.getId())));
}
