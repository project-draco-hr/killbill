{
  final InvoiceItemSqlDao invoiceItemSqlDao=entitySqlDaoWrapperFactory.become(InvoiceItemSqlDao.class);
  final InvoiceItemModelDao invoiceItemToBeAdjusted=invoiceItemSqlDao.getById(invoiceItemId.toString(),context);
  if (invoiceItemToBeAdjusted == null) {
    throw new InvoiceApiException(ErrorCode.INVOICE_ITEM_NOT_FOUND,invoiceItemId);
  }
  if (!invoiceItemToBeAdjusted.getInvoiceId().equals(invoiceId)) {
    throw new InvoiceApiException(ErrorCode.INVOICE_INVALID_FOR_INVOICE_ITEM_ADJUSTMENT,invoiceItemId,invoiceId);
  }
  final BigDecimal amountToAdjust=Objects.firstNonNull(positiveAdjAmount,invoiceItemToBeAdjusted.getAmount());
  final Currency currencyForAdjustment=Objects.firstNonNull(currency,invoiceItemToBeAdjusted.getCurrency());
  return new InvoiceItemModelDao(context.getCreatedDate(),InvoiceItemType.ITEM_ADJ,invoiceItemToBeAdjusted.getInvoiceId(),invoiceItemToBeAdjusted.getAccountId(),null,null,null,null,null,null,effectiveDate,effectiveDate,amountToAdjust.negate(),null,currencyForAdjustment,invoiceItemToBeAdjusted.getId());
}
