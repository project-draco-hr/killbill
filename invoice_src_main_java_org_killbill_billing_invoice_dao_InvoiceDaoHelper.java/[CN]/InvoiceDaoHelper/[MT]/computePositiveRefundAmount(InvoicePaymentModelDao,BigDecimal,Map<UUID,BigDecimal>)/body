{
  final BigDecimal maxRefundAmount=payment.getAmount() == null ? BigDecimal.ZERO : payment.getAmount();
  final BigDecimal requestedPositiveAmount=requestedRefundAmount == null ? maxRefundAmount : requestedRefundAmount;
  if (requestedPositiveAmount.compareTo(maxRefundAmount) > 0) {
    throw new InvoiceApiException(ErrorCode.REFUND_AMOUNT_TOO_HIGH,requestedPositiveAmount,maxRefundAmount);
  }
  BigDecimal amountFromItems=BigDecimal.ZERO;
  for (  final BigDecimal itemAmount : invoiceItemIdsWithAmounts.values()) {
    amountFromItems=amountFromItems.add(itemAmount);
  }
  if (amountFromItems.compareTo(BigDecimal.ZERO) != 0 && requestedPositiveAmount.compareTo(amountFromItems) < 0) {
    throw new InvoiceApiException(ErrorCode.REFUND_AMOUNT_DONT_MATCH_ITEMS_TO_ADJUST,requestedPositiveAmount,amountFromItems);
  }
  return requestedPositiveAmount;
}
