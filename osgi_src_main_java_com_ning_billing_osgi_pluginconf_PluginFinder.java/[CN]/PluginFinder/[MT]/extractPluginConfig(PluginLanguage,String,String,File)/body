{
  T result;
  Properties props=null;
  try {
    final File[] files=pluginVersionDir.listFiles();
    if (files == null) {
      throw new PluginConfigException("Unable to list files in " + pluginVersionDir.getAbsolutePath());
    }
    for (    final File cur : files) {
      if (cur.isFile() && cur.getName().equals(INSTALATION_PROPERTIES)) {
        props=readPluginConfigurationFile(cur);
      }
      if (props != null) {
        break;
      }
    }
    if (pluginLanguage == PluginLanguage.RUBY && props == null) {
      throw new PluginConfigException("Invalid plugin configuration file for " + pluginName + "-"+ pluginVersion);
    }
  }
 catch (  IOException e) {
    throw new PluginConfigException("Failed to read property file for " + pluginName + "-"+ pluginVersion,e);
  }
switch (pluginLanguage) {
case RUBY:
    result=(T)new DefaultPluginRubyConfig(pluginName,pluginVersion,pluginVersionDir,props);
  break;
case JAVA:
result=(T)new DefaultPluginJavaConfig(pluginName,pluginVersion,pluginVersionDir,(props == null) ? new Properties() : props);
break;
default :
throw new RuntimeException("Unknown plugin language " + pluginLanguage);
}
return result;
}
