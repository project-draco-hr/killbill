{
  final BillingEvent result=Mockito.mock(BillingEvent.class);
  Mockito.when(result.getCurrency()).thenReturn(Currency.BTC);
  Mockito.when(result.getBillCycleDayLocal()).thenReturn(BCD);
  Mockito.when(result.getTimeZone()).thenReturn(DateTimeZone.UTC);
  Mockito.when(result.getEffectiveDate()).thenReturn(effectiveDate);
  final Account account=Mockito.mock(Account.class);
  Mockito.when(account.getId()).thenReturn(accountId);
  Mockito.when(result.getAccount()).thenReturn(account);
  final SubscriptionBase subscription=Mockito.mock(SubscriptionBase.class);
  Mockito.when(subscription.getId()).thenReturn(subscriptionId);
  Mockito.when(subscription.getBundleId()).thenReturn(bundleId);
  Mockito.when(result.getSubscription()).thenReturn(subscription);
  final Plan plan=Mockito.mock(Plan.class);
  Mockito.when(plan.getName()).thenReturn(planName);
  Mockito.when(result.getPlan()).thenReturn(plan);
  final PlanPhase phase=Mockito.mock(PlanPhase.class);
  Mockito.when(phase.getName()).thenReturn(phaseName);
  Mockito.when(result.getPlanPhase()).thenReturn(phase);
  Mockito.when(result.getUsages()).thenReturn(usages);
  return result;
}
