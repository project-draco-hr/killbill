{
  if (!event.isTransitionedToUnblockedBilling() && !event.isTransitionedToBlockedBilling()) {
    return;
  }
  try {
    final InternalCallContext context=internalCallContextFactory.createInternalCallContext(event.getSearchKey2(),event.getSearchKey1(),"SubscriptionBaseTransition",CallOrigin.INTERNAL,UserType.SYSTEM,event.getUserToken());
    final UUID accountId=accountApi.getByRecordId(event.getSearchKey1(),context);
    dispatcher.processAccount(accountId,clock.getUTCNow(),null,context);
  }
 catch (  InvoiceApiException e) {
    log.warn(String.format("Unable to process event %s",event),e);
  }
catch (  AccountApiException e) {
    log.warn(String.format("Unable to process event %s",event),e);
  }
}
