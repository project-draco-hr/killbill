{
  final UUID accountId=UUID.randomUUID();
  final UUID invoiceId=UUID.randomUUID();
  final UUID invoiceItemId=UUID.randomUUID();
  final LocalDate effectiveDate=new LocalDate();
  try {
    invoiceDao.insertInvoiceItemAdjustment(accountId,invoiceId,invoiceItemId,effectiveDate,null,null,internalCallContext);
    Assert.fail("Should not have been able to adjust a non existing invoice item");
  }
 catch (  Exception e) {
    Assert.assertEquals(((InvoiceApiException)e.getCause()).getCode(),ErrorCode.INVOICE_ITEM_NOT_FOUND.getCode());
  }
}
