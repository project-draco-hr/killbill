{
  final String externalKey=UUID.randomUUID().toString();
  final UUID paymentId=UUID.randomUUID();
  final BigDecimal amount=BigDecimal.TEN;
  final PaymentInfoPlugin paymentInfoPlugin=plugin.processPayment(externalKey,paymentId,amount,callContext);
  Assert.assertEquals(paymentInfoPlugin.getAmount(),amount);
  Assert.assertEquals(Seconds.secondsBetween(paymentInfoPlugin.getCreatedDate(),clock.getUTCNow()).getSeconds(),0);
  Assert.assertEquals(Seconds.secondsBetween(paymentInfoPlugin.getEffectiveDate(),clock.getUTCNow()).getSeconds(),0);
  Assert.assertNull(paymentInfoPlugin.getExtFirstReferenceId());
  Assert.assertNull(paymentInfoPlugin.getExtSecondReferenceId());
  Assert.assertNull(paymentInfoPlugin.getGatewayError());
  Assert.assertNull(paymentInfoPlugin.getGatewayErrorCode());
  Assert.assertEquals(paymentInfoPlugin.getStatus(),PaymentPluginStatus.PROCESSED);
  final PaymentInfoPlugin retrievedPaymentInfoPlugin=plugin.getPaymentInfo(paymentId,callContext);
  Assert.assertEquals(retrievedPaymentInfoPlugin,paymentInfoPlugin);
}
