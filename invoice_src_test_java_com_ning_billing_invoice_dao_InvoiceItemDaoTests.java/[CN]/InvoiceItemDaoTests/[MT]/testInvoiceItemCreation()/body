{
  UUID invoiceId=UUID.randomUUID();
  UUID subscriptionId=UUID.randomUUID();
  DateTime startDate=new DateTime(2011,10,1,0,0,0,0);
  DateTime endDate=new DateTime(2011,11,1,0,0,0,0);
  BigDecimal rate=new BigDecimal("20.00");
  final DateTime expectedCreatedDate=clock.getUTCNow();
  RecurringInvoiceItem item=new RecurringInvoiceItem(invoiceId,subscriptionId,"test plan","test phase",startDate,endDate,rate,rate,Currency.USD,expectedCreatedDate);
  recurringInvoiceItemDao.create(item);
  RecurringInvoiceItem thisItem=(RecurringInvoiceItem)recurringInvoiceItemDao.getById(item.getId().toString());
  assertNotNull(thisItem);
  assertEquals(thisItem.getId(),item.getId());
  assertEquals(thisItem.getInvoiceId(),item.getInvoiceId());
  assertEquals(thisItem.getSubscriptionId(),item.getSubscriptionId());
  assertEquals(thisItem.getStartDate(),item.getStartDate());
  assertEquals(thisItem.getEndDate(),item.getEndDate());
  assertEquals(thisItem.getAmount().compareTo(item.getRate()),0);
  assertEquals(thisItem.getRate().compareTo(item.getRate()),0);
  assertEquals(thisItem.getCurrency(),item.getCurrency());
  assertEquals(thisItem.getCreatedDate().compareTo(item.getCreatedDate()),0);
}
