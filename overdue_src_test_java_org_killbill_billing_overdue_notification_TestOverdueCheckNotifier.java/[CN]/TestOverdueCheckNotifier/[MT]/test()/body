{
  final UUID accountId=new UUID(0L,1L);
  final Account account=Mockito.mock(Account.class);
  Mockito.when(account.getId()).thenReturn(accountId);
  final DateTime now=clock.getUTCNow();
  final DateTime readyTime=now.plusMillis(2000);
  final OverdueCheckNotificationKey notificationKey=new OverdueCheckNotificationKey(accountId);
  checkPoster.insertOverdueNotification(accountId,readyTime,OverdueCheckNotifier.OVERDUE_CHECK_NOTIFIER_QUEUE,notificationKey,internalCallContext);
  clock.setDeltaFromReality(3000);
  await().atMost(5,SECONDS).until(new Callable<Boolean>(){
    @Override public Boolean call() throws Exception {
      return mockDispatcher.getEventCount() == 1;
    }
  }
);
  Assert.assertEquals(mockDispatcher.getEventCount(),1);
  Assert.assertEquals(mockDispatcher.getLatestAccountId(),accountId);
}
