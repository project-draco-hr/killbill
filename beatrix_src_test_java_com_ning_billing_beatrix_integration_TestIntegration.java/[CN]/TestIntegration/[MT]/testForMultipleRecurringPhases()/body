{
  log.info("Starting testForMultipleRecurringPhases");
  final DateTime initialCreationDate=new DateTime(2012,2,1,0,3,42,0,testTimeZone);
  clock.setDeltaFromReality(initialCreationDate.getMillis() - clock.getUTCNow().getMillis());
  final Account account=createAccountWithPaymentMethod(getAccountData(2));
  final UUID accountId=account.getId();
  final String productName="Blowdart";
  final String planSetName="DEFAULT";
  busHandler.pushExpectedEvent(NextEvent.CREATE);
  busHandler.pushExpectedEvent(NextEvent.INVOICE);
  final SubscriptionBundle bundle=entitlementUserApi.createBundleForAccount(accountId,"testKey",callContext);
  subscriptionDataFromSubscription(entitlementUserApi.createSubscription(bundle.getId(),new PlanPhaseSpecifier(productName,ProductCategory.BASE,BillingPeriod.MONTHLY,planSetName,PhaseType.TRIAL),null,callContext));
  assertTrue(busHandler.isCompleted(DELAY));
  List<Invoice> invoices=invoiceUserApi.getInvoicesByAccount(accountId,callContext);
  assertNotNull(invoices);
  assertTrue(invoices.size() == 1);
  busHandler.pushExpectedEvent(NextEvent.PHASE);
  busHandler.pushExpectedEvent(NextEvent.INVOICE);
  busHandler.pushExpectedEvent(NextEvent.PAYMENT);
  clock.addDeltaFromReality(AT_LEAST_ONE_MONTH_MS);
  assertTrue(busHandler.isCompleted(DELAY));
  invoices=invoiceUserApi.getInvoicesByAccount(accountId,callContext);
  assertNotNull(invoices);
  assertEquals(invoices.size(),2);
  for (int i=0; i < 5; i++) {
    log.info("============== loop number " + i + "=======================");
    busHandler.pushExpectedEvent(NextEvent.INVOICE);
    busHandler.pushExpectedEvent(NextEvent.PAYMENT);
    clock.addDeltaFromReality(AT_LEAST_ONE_MONTH_MS);
    assertTrue(busHandler.isCompleted(DELAY));
  }
  busHandler.pushExpectedEvent(NextEvent.INVOICE);
  busHandler.pushExpectedEvent(NextEvent.PAYMENT);
  busHandler.pushExpectedEvent(NextEvent.PHASE);
  clock.addDeltaFromReality(AT_LEAST_ONE_MONTH_MS);
  assertTrue(busHandler.isCompleted(DELAY));
  invoices=invoiceUserApi.getInvoicesByAccount(accountId,callContext);
  assertNotNull(invoices);
  assertEquals(invoices.size(),8);
  for (int i=0; i <= 5; i++) {
    log.info("============== second loop number " + i + "=======================");
    busHandler.pushExpectedEvent(NextEvent.INVOICE);
    busHandler.pushExpectedEvent(NextEvent.PAYMENT);
    clock.addDeltaFromReality(AT_LEAST_ONE_MONTH_MS);
    assertTrue(busHandler.isCompleted(DELAY));
  }
  invoices=invoiceUserApi.getInvoicesByAccount(accountId,callContext);
  assertNotNull(invoices);
  assertEquals(invoices.size(),14);
  assertListenerStatus();
}
