{
  BlockingSubscription bSubscription=(BlockingSubscription)entitlementUserApi.getSubscriptionFromId(subscriptionId);
  SubscriptionData subscription=(SubscriptionData)bSubscription.getDelegateSubscription();
  List<Invoice> invoices=invoiceUserApi.getInvoicesByAccount(accountId);
  List<InvoiceItem> invoiceItems=new ArrayList<InvoiceItem>();
  for (  Invoice invoice : invoices) {
    invoiceItems.addAll(invoice.getInvoiceItems());
  }
  assertEquals(invoiceItems.size(),totalInvoiceItemCount);
  boolean wasFound=false;
  for (  InvoiceItem item : invoiceItems) {
    if (item.getStartDate().compareTo(startDate) == 0) {
      if (item.getEndDate().compareTo(endDate) == 0) {
        if (item.getAmount().compareTo(amount) == 0) {
          wasFound=true;
          break;
        }
      }
    }
  }
  if (!wasFound) {
    fail();
  }
  DateTime ctd=subscription.getChargedThroughDate();
  assertNotNull(ctd);
  log.info("Checking CTD: " + ctd.toString() + "; clock is "+ clock.getUTCNow().toString());
  assertTrue(clock.getUTCNow().isBefore(ctd));
  assertTrue(ctd.compareTo(chargeThroughDate) == 0);
}
