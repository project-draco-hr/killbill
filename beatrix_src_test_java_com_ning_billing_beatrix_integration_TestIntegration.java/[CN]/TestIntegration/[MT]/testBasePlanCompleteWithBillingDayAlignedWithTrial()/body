{
  final int billingDay=2;
  final DateTime initialCreationDate=new DateTime(2012,2,1,0,3,42,0,testTimeZone);
  log.info("Beginning test with BCD of " + billingDay);
  final Account account=createAccountWithNonOsgiPaymentMethod(getAccountData(billingDay));
  clock.setTime(initialCreationDate);
  int invoiceItemCount=1;
  DefaultEntitlement baseEntitlement=createBaseEntitlementAndCheckForCompletion(account.getId(),"bundleKey","Shotgun",ProductCategory.BASE,BillingPeriod.MONTHLY,NextEvent.CREATE,NextEvent.INVOICE);
  DefaultSubscriptionBase subscription=subscriptionDataFromSubscription(baseEntitlement.getSubscriptionBase());
  invoiceChecker.checkInvoice(account.getId(),invoiceItemCount++,callContext,new ExpectedInvoiceItemCheck(initialCreationDate.toLocalDate(),null,InvoiceItemType.FIXED,new BigDecimal("0")));
  invoiceChecker.checkChargedThroughDate(subscription.getId(),clock.getUTCToday(),callContext);
  changeEntitlementAndCheckForCompletion(baseEntitlement,"Assault-Rifle",BillingPeriod.MONTHLY,null,NextEvent.CHANGE,NextEvent.INVOICE);
  invoiceChecker.checkInvoice(account.getId(),invoiceItemCount++,callContext,new ExpectedInvoiceItemCheck(initialCreationDate.toLocalDate(),null,InvoiceItemType.FIXED,new BigDecimal("0")));
  invoiceChecker.checkChargedThroughDate(subscription.getId(),clock.getUTCToday(),callContext);
  setDateAndCheckForCompletion(new DateTime(2012,2,28,23,59,59,0,testTimeZone));
  setDateAndCheckForCompletion(new DateTime(2012,2,29,23,59,59,0,testTimeZone));
  setDateAndCheckForCompletion(new DateTime(2012,3,1,23,59,59,0,testTimeZone));
  setDateAndCheckForCompletion(new DateTime(2012,3,2,23,59,59,0,testTimeZone),NextEvent.PHASE,NextEvent.INVOICE,NextEvent.PAYMENT);
  invoiceChecker.checkInvoice(account.getId(),invoiceItemCount++,callContext,new ExpectedInvoiceItemCheck(new LocalDate(2012,3,2),new LocalDate(2012,4,2),InvoiceItemType.RECURRING,new BigDecimal("599.95")));
  invoiceChecker.checkChargedThroughDate(subscription.getId(),new LocalDate(2012,4,2),callContext);
  baseEntitlement=changeEntitlementAndCheckForCompletion(baseEntitlement,"Pistol",BillingPeriod.MONTHLY,null);
  subscription=subscriptionDataFromSubscription(baseEntitlement.getSubscriptionBase());
  final LocalDate firstRecurringPistolDate=subscription.getChargedThroughDate().toLocalDate();
  final LocalDate secondRecurringPistolDate=firstRecurringPistolDate.plusMonths(1);
  addDaysAndCheckForCompletion(31,NextEvent.CHANGE,NextEvent.INVOICE,NextEvent.PAYMENT);
  invoiceChecker.checkInvoice(account.getId(),invoiceItemCount++,callContext,new ExpectedInvoiceItemCheck(new LocalDate(2012,4,2),new LocalDate(2012,5,2),InvoiceItemType.RECURRING,new BigDecimal("29.95")));
  invoiceChecker.checkChargedThroughDate(subscription.getId(),secondRecurringPistolDate,callContext);
  addDaysAndCheckForCompletion(31,NextEvent.INVOICE,NextEvent.PAYMENT);
  invoiceChecker.checkInvoice(account.getId(),invoiceItemCount++,callContext,new ExpectedInvoiceItemCheck(new LocalDate(2012,5,2),new LocalDate(2012,6,2),InvoiceItemType.RECURRING,new BigDecimal("29.95")));
  invoiceChecker.checkChargedThroughDate(subscription.getId(),new LocalDate(2012,6,2),callContext);
  addDaysAndCheckForCompletion(31,NextEvent.INVOICE,NextEvent.PAYMENT);
  invoiceChecker.checkInvoice(account.getId(),invoiceItemCount++,callContext,new ExpectedInvoiceItemCheck(new LocalDate(2012,6,2),new LocalDate(2012,7,2),InvoiceItemType.RECURRING,new BigDecimal("29.95")));
  invoiceChecker.checkChargedThroughDate(subscription.getId(),new LocalDate(2012,7,2),callContext);
  addDaysAndCheckForCompletion(31,NextEvent.INVOICE,NextEvent.PAYMENT);
  invoiceChecker.checkInvoice(account.getId(),invoiceItemCount++,callContext,new ExpectedInvoiceItemCheck(new LocalDate(2012,7,2),new LocalDate(2012,8,2),InvoiceItemType.RECURRING,new BigDecimal("29.95")));
  invoiceChecker.checkChargedThroughDate(subscription.getId(),new LocalDate(2012,8,2),callContext);
  cancelEntitlementAndCheckForCompletion(baseEntitlement,clock.getUTCNow(),NextEvent.BLOCK);
  addDaysAndCheckForCompletion(31,NextEvent.CANCEL);
  invoiceChecker.checkChargedThroughDate(subscription.getId(),new LocalDate(2012,8,2),callContext);
}
