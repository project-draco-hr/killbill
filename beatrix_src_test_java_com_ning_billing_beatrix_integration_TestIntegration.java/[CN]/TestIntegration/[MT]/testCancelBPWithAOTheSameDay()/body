{
  final Account account=createAccountWithPaymentMethod(getAccountData(1));
  clock.setDay(new LocalDate(2012,4,1));
  final SubscriptionBundle bundle=entitlementUserApi.createBundleForAccount(account.getId(),"whatever",context);
  final Subscription bpSubscription=createSubscriptionAndCheckForCompletion(bundle.getId(),"Shotgun",ProductCategory.BASE,BillingPeriod.MONTHLY,NextEvent.CREATE,NextEvent.INVOICE);
  invoiceChecker.checkInvoice(account.getId(),1,new ExpectedItemCheck(new LocalDate(2012,4,1),null,InvoiceItemType.FIXED,new BigDecimal("0")));
  createSubscriptionAndCheckForCompletion(bundle.getId(),"Telescopic-Scope",ProductCategory.ADD_ON,BillingPeriod.MONTHLY,NextEvent.CREATE,NextEvent.INVOICE,NextEvent.PAYMENT);
  invoiceChecker.checkInvoice(account.getId(),2,new ExpectedItemCheck(new LocalDate(2012,4,1),new LocalDate(2012,5,1),InvoiceItemType.RECURRING,new BigDecimal("399.95")));
  cancelSubscriptionAndCheckForCompletion(bpSubscription,clock.getUTCNow(),NextEvent.CANCEL,NextEvent.CANCEL);
  invoiceChecker.checkInvoice(account.getId(),2,new ExpectedItemCheck(new LocalDate(2012,4,1),new LocalDate(2012,5,1),InvoiceItemType.RECURRING,new BigDecimal("399.95")),new ExpectedItemCheck(new LocalDate(2012,4,1),new LocalDate(2012,5,1),InvoiceItemType.REPAIR_ADJ,new BigDecimal("-399.95")),new ExpectedItemCheck(new LocalDate(2012,4,1),new LocalDate(2012,4,1),InvoiceItemType.CBA_ADJ,new BigDecimal("399.95")));
}
