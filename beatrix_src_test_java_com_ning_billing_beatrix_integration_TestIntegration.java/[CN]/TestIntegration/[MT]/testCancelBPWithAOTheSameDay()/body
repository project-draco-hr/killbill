{
  final AccountData accountData=getAccountData(1);
  final Account account=createAccountWithNonOsgiPaymentMethod(accountData);
  accountChecker.checkAccount(account.getId(),accountData,callContext);
  clock.setDay(new LocalDate(2012,4,1));
  final DefaultEntitlement bpSubscription=createBaseEntitlementAndCheckForCompletion(account.getId(),"bundleKey","Shotgun",ProductCategory.BASE,BillingPeriod.MONTHLY,NextEvent.CREATE,NextEvent.INVOICE);
  subscriptionChecker.checkSubscriptionCreated(bpSubscription.getId(),internalCallContext);
  invoiceChecker.checkInvoice(account.getId(),1,callContext,new ExpectedInvoiceItemCheck(new LocalDate(2012,4,1),null,InvoiceItemType.FIXED,new BigDecimal("0")));
  addAOEntitlementAndCheckForCompletion(bpSubscription.getBundleId(),"Telescopic-Scope",ProductCategory.ADD_ON,BillingPeriod.MONTHLY,NextEvent.CREATE,NextEvent.INVOICE,NextEvent.PAYMENT);
  Invoice invoice=invoiceChecker.checkInvoice(account.getId(),2,callContext,new ExpectedInvoiceItemCheck(new LocalDate(2012,4,1),new LocalDate(2012,5,1),InvoiceItemType.RECURRING,new BigDecimal("399.95")));
  paymentChecker.checkPayment(account.getId(),1,callContext,new ExpectedPaymentCheck(new LocalDate(2012,4,1),new BigDecimal("399.95"),PaymentStatus.SUCCESS,invoice.getId(),Currency.USD));
  cancelEntitlementAndCheckForCompletion(bpSubscription,clock.getUTCNow(),NextEvent.CANCEL,NextEvent.CANCEL,NextEvent.INVOICE_ADJUSTMENT);
  invoiceChecker.checkInvoice(account.getId(),2,callContext,new ExpectedInvoiceItemCheck(new LocalDate(2012,4,1),new LocalDate(2012,5,1),InvoiceItemType.RECURRING,new BigDecimal("399.95")),new ExpectedInvoiceItemCheck(new LocalDate(2012,4,1),new LocalDate(2012,5,1),InvoiceItemType.REPAIR_ADJ,new BigDecimal("-399.95")),new ExpectedInvoiceItemCheck(new LocalDate(2012,4,1),new LocalDate(2012,4,1),InvoiceItemType.CBA_ADJ,new BigDecimal("399.95")));
}
