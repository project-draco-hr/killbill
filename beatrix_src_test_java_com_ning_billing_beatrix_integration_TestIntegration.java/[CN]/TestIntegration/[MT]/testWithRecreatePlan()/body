{
  final DateTime initialDate=new DateTime(2012,2,1,0,3,42,0,testTimeZone);
  final int billingDay=2;
  log.info("Beginning test with BCD of " + billingDay);
  final Account account=createAccountWithNonOsgiPaymentMethod(getAccountData(billingDay));
  final UUID accountId=account.getId();
  assertNotNull(account);
  clock.setDeltaFromReality(initialDate.getMillis() - clock.getUTCNow().getMillis());
  String productName="Shotgun";
  BillingPeriod term=BillingPeriod.MONTHLY;
  String planSetName=PriceListSet.DEFAULT_PRICELIST_NAME;
  final DefaultEntitlement baseEntitlement=createBaseEntitlementAndCheckForCompletion(account.getId(),"bundleKey",productName,ProductCategory.BASE,term,NextEvent.CREATE,NextEvent.INVOICE);
  assertNotNull(baseEntitlement);
  SubscriptionData subscription=(SubscriptionData)baseEntitlement.getSubscription();
  final DateTime startDate=subscription.getCurrentPhaseStart();
  final BigDecimal rate=subscription.getCurrentPhase().getFixedPrice().getPrice(Currency.USD);
  final int invoiceItemCount=1;
  verifyTestResult(accountId,subscription.getId(),startDate,null,rate,clock.getUTCNow(),invoiceItemCount);
  busHandler.pushExpectedEvent(NextEvent.PHASE);
  busHandler.pushExpectedEvent(NextEvent.INVOICE);
  busHandler.pushExpectedEvent(NextEvent.PAYMENT);
  clock.addDeltaFromReality(AT_LEAST_ONE_MONTH_MS);
  assertTrue(busHandler.isCompleted(DELAY));
  DefaultEntitlement entitlement=(DefaultEntitlement)entitlementApi.getEntitlementFromId(baseEntitlement.getId(),callContext);
  entitlement.cancelEntitlementWithDate(clock.getUTCNow().toLocalDate(),callContext);
  subscription=(SubscriptionData)baseEntitlement.getSubscription();
  busHandler.pushExpectedEvent(NextEvent.CANCEL);
  DateTime endDate=subscription.getChargedThroughDate();
  final Interval it=new Interval(clock.getUTCNow(),endDate);
  clock.addDeltaFromReality(it.toDurationMillis());
  assertTrue(busHandler.isCompleted(DELAY));
  productName="Assault-Rifle";
  term=BillingPeriod.MONTHLY;
  planSetName=PriceListSet.DEFAULT_PRICELIST_NAME;
}
