{
  final DateTime initialDate=new DateTime(2012,2,1,0,3,42,0,testTimeZone);
  final int billingDay=2;
  log.info("Beginning test with BCD of " + billingDay);
  final Account account=createAccountWithPaymentMethod(getAccountData(billingDay));
  final UUID accountId=account.getId();
  assertNotNull(account);
  clock.setDeltaFromReality(initialDate.getMillis() - clock.getUTCNow().getMillis());
  final SubscriptionBundle bundle=entitlementUserApi.createBundleForAccount(account.getId(),"whatever2",context);
  String productName="Shotgun";
  BillingPeriod term=BillingPeriod.MONTHLY;
  String planSetName=PriceListSet.DEFAULT_PRICELIST_NAME;
  busHandler.pushExpectedEvent(NextEvent.CREATE);
  busHandler.pushExpectedEvent(NextEvent.INVOICE);
  SubscriptionData subscription=subscriptionDataFromSubscription(entitlementUserApi.createSubscription(bundle.getId(),new PlanPhaseSpecifier(productName,ProductCategory.BASE,term,planSetName,null),null,context));
  assertNotNull(subscription);
  assertTrue(busHandler.isCompleted(DELAY));
  final DateTime startDate=subscription.getCurrentPhaseStart();
  final BigDecimal rate=subscription.getCurrentPhase().getFixedPrice().getPrice(Currency.USD);
  final int invoiceItemCount=1;
  verifyTestResult(accountId,subscription.getId(),startDate,null,rate,clock.getUTCNow(),invoiceItemCount);
  busHandler.pushExpectedEvent(NextEvent.PHASE);
  busHandler.pushExpectedEvent(NextEvent.INVOICE);
  busHandler.pushExpectedEvent(NextEvent.PAYMENT);
  clock.addDeltaFromReality(AT_LEAST_ONE_MONTH_MS);
  assertTrue(busHandler.isCompleted(DELAY));
  subscription=subscriptionDataFromSubscription(entitlementUserApi.getSubscriptionFromId(subscription.getId()));
  subscription.cancel(clock.getUTCNow(),false,context);
  busHandler.pushExpectedEvent(NextEvent.CANCEL);
  DateTime endDate=subscription.getChargedThroughDate();
  final Interval it=new Interval(clock.getUTCNow(),endDate);
  clock.addDeltaFromReality(it.toDurationMillis());
  assertTrue(busHandler.isCompleted(DELAY));
  productName="Assault-Rifle";
  term=BillingPeriod.MONTHLY;
  planSetName=PriceListSet.DEFAULT_PRICELIST_NAME;
  busHandler.pushExpectedEvent(NextEvent.RE_CREATE);
  busHandler.pushExpectedEvent(NextEvent.INVOICE);
  busHandler.pushExpectedEvent(NextEvent.PAYMENT);
  subscription.recreate(new PlanPhaseSpecifier(productName,ProductCategory.BASE,term,planSetName,null),endDate,context);
  assertTrue(busHandler.isCompleted(DELAY));
  assertListenerStatus();
}
