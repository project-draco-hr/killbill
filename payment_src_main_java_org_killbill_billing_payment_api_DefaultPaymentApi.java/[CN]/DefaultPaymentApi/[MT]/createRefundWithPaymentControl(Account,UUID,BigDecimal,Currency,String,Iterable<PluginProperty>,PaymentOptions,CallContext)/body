{
  final List<String> paymentControlPluginNames=toPaymentControlPluginNames(paymentOptions);
  if (paymentControlPluginNames.isEmpty()) {
    return createRefund(account,paymentId,amount,currency,paymentTransactionExternalKey,properties,callContext);
  }
  checkNotNullParameter(account,"account");
  if (paymentId == null) {
    checkNotNullParameter(currency,"currency");
  }
  checkNotNullParameter(paymentId,"paymentId");
  checkNotNullParameter(paymentTransactionExternalKey,"paymentTransactionExternalKey");
  checkNotNullParameter(properties,"plugin properties");
  if (amount != null) {
    checkPositiveAmount(amount);
  }
  logAPICall(TransactionType.REFUND.name(),account,null,paymentId,null,amount,currency,null,paymentTransactionExternalKey);
  final InternalCallContext internalCallContext=internalCallContextFactory.createInternalCallContext(account.getId(),callContext);
  return pluginControlPaymentProcessor.createRefund(IS_API_PAYMENT,account,paymentId,amount,currency,paymentTransactionExternalKey,properties,paymentControlPluginNames,callContext,internalCallContext);
}
