{
  final List<String> paymentControlPluginNames=toPaymentControlPluginNames(paymentOptions);
  if (paymentControlPluginNames.isEmpty()) {
    return createAuthorization(account,paymentMethodId,paymentId,amount,currency,paymentExternalKey,paymentTransactionExternalKey,properties,callContext);
  }
  checkNotNullParameter(account,"account");
  checkNotNullParameter(paymentMethodId,"paymentMethodId");
  checkNotNullParameter(amount,"amount");
  checkNotNullParameter(currency,"currency");
  checkNotNullParameter(properties,"plugin properties");
  checkPositiveAmount(amount);
  logAPICall(TransactionType.AUTHORIZE.name(),account,paymentMethodId,paymentId,null,amount,currency,paymentExternalKey,paymentTransactionExternalKey);
  final InternalCallContext internalCallContext=internalCallContextFactory.createInternalCallContext(account.getId(),callContext);
  return pluginControlPaymentProcessor.createAuthorization(IS_API_PAYMENT,account,paymentMethodId,paymentId,amount,currency,paymentExternalKey,paymentTransactionExternalKey,properties,paymentControlPluginNames,callContext,internalCallContext);
}
