{
  checkNotNullParameter(account,"account");
  checkNotNullParameter(paymentId,"paymentId");
  checkNotNullParameter(currency,"currency");
  checkNotNullParameter(properties,"plugin properties");
  checkPositiveAmount(amount);
  final String transactionType=TransactionType.CAPTURE.name();
  logAPICall(transactionType,account,null,paymentId,null,amount,currency,null,paymentTransactionExternalKey,null,null);
  final InternalCallContext internalCallContext=internalCallContextFactory.createInternalCallContext(account.getId(),callContext);
  final Payment payment=paymentProcessor.createCapture(IS_API_PAYMENT,NULL_ATTEMPT_ID,account,paymentId,amount,currency,paymentTransactionExternalKey,SHOULD_LOCK_ACCOUNT,properties,callContext,internalCallContext);
  final PaymentTransaction paymentTransaction=payment.getTransactions().get(payment.getTransactions().size() - 1);
  logAPICall(transactionType,account,payment.getPaymentMethodId(),payment.getId(),paymentTransaction.getId(),paymentTransaction.getProcessedAmount(),paymentTransaction.getProcessedCurrency(),payment.getExternalKey(),paymentTransaction.getExternalKey(),paymentTransaction.getTransactionStatus(),null);
  return payment;
}
