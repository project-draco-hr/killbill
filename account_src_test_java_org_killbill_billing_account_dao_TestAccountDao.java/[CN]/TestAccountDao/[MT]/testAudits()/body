{
  final AccountModelDao account1=createTestAccount();
  accountDao.create(account1,internalCallContext);
  final Long account1RecordId=nonEntityDao.retrieveAccountRecordIdFromObject(account1.getId(),ObjectType.ACCOUNT,null);
  internalCallContext.setAccountRecordId(account1RecordId);
  internalCallContext.setReferenceDateTimeZone(account1.getTimeZone());
  final DefaultAccountAuditLogs auditLogsForAccount1ViaAccountRecordId1=auditDao.getAuditLogsForAccountRecordId(AuditLevel.FULL,internalCallContext);
  Assert.assertEquals(auditLogsForAccount1ViaAccountRecordId1.getAuditLogsForAccount().size(),1);
  Assert.assertEquals(auditLogsForAccount1ViaAccountRecordId1.getAuditLogsForAccount().get(0).getChangeType(),ChangeType.INSERT);
  accountDao.updatePaymentMethod(account1.getId(),UUID.randomUUID(),internalCallContext);
  final AccountModelDao account2=createTestAccount();
  accountDao.create(account2,internalCallContext);
  final Long account2RecordId=nonEntityDao.retrieveAccountRecordIdFromObject(account2.getId(),ObjectType.ACCOUNT,null);
  internalCallContext.setAccountRecordId(account2RecordId);
  internalCallContext.setReferenceDateTimeZone(account2.getTimeZone());
  final DefaultAccountAuditLogs auditLogsForAccount2ViaAccountRecordId=auditDao.getAuditLogsForAccountRecordId(AuditLevel.FULL,internalCallContext);
  Assert.assertEquals(auditLogsForAccount2ViaAccountRecordId.getAuditLogsForAccount().size(),1);
  Assert.assertEquals(auditLogsForAccount2ViaAccountRecordId.getAuditLogsForAccount().get(0).getChangeType(),ChangeType.INSERT);
  internalCallContext.setAccountRecordId(account1RecordId);
  final DefaultAccountAuditLogs auditLogsForAccount1ViaAccountRecordId2=auditDao.getAuditLogsForAccountRecordId(AuditLevel.FULL,internalCallContext);
  Assert.assertEquals(auditLogsForAccount1ViaAccountRecordId2.getAuditLogsForAccount().size(),2);
  Assert.assertEquals(auditLogsForAccount1ViaAccountRecordId2.getAuditLogsForAccount().get(0).getChangeType(),ChangeType.INSERT);
  Assert.assertEquals(auditLogsForAccount1ViaAccountRecordId2.getAuditLogsForAccount().get(1).getChangeType(),ChangeType.UPDATE);
}
