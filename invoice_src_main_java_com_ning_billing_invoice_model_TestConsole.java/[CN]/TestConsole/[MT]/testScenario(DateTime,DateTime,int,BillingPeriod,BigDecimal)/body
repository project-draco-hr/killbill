{
  BillingMode billingMode=new InAdvanceBillingMode();
  System.out.println("Start date: " + startDate.toLocalDate());
  System.out.println("Target date: " + targetDate.toLocalDate());
  System.out.println("Billing cycle day: " + billingCycleDay);
  System.out.println("Expected value: " + expectedValue.toString());
  System.out.println();
  try {
    BigDecimal numberOfBillingCycles=billingMode.calculateNumberOfBillingCycles(startDate,targetDate,billingCycleDay,billingPeriod);
    System.out.println("Result: " + numberOfBillingCycles.toString() + " billing cycles");
  }
 catch (  InvalidDateSequenceException e) {
    e.printStackTrace();
    System.out.println("Invalid date sequence");
  }
  System.out.println();
  try {
    BufferedReader br=new BufferedReader(new InputStreamReader(System.in));
    System.out.println("Hit <Enter> to continue");
    br.readLine();
  }
 catch (  IOException ioex) {
    System.out.println("IO error getting input");
    System.exit(1);
  }
}
