{
  final TenantContext tenantContext=context.createContext(request);
  final Account account=accountUserApi.getAccountById(UUID.fromString(accountId),tenantContext);
  final List<PaymentMethod> methods=paymentApi.getPaymentMethods(account,withPluginInfo,pluginProperties,tenantContext);
  final AccountAuditLogs accountAuditLogs=auditUserApi.getAccountAuditLogs(account.getId(),auditMode.getLevel(),tenantContext);
  final List<PaymentMethodJson> json=new ArrayList<PaymentMethodJson>(Collections2.transform(methods,new Function<PaymentMethod,PaymentMethodJson>(){
    @Override public PaymentMethodJson apply(    final PaymentMethod input){
      return PaymentMethodJson.toPaymentMethodJson(account,input,accountAuditLogs);
    }
  }
));
  return Response.status(Status.OK).entity(json).build();
}
