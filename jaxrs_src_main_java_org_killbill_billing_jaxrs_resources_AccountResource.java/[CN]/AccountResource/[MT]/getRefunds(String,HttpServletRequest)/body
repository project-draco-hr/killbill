{
  final TenantContext tenantContext=context.createContext(request);
  final Account account=accountUserApi.getAccountById(UUID.fromString(accountId),tenantContext);
  final List<DirectPayment> refunds=paymentApi.getAccountRefunds(account,tenantContext);
  final List<RefundJson> result=new ArrayList<RefundJson>(Collections2.transform(refunds,new Function<DirectPayment,RefundJson>(){
    @Override public RefundJson apply(    final DirectPayment input){
      return new RefundJson(input,null,null);
    }
  }
));
  return Response.status(Status.OK).entity(result).build();
}
