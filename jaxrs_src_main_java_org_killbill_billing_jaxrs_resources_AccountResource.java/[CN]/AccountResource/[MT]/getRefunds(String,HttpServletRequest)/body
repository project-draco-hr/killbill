{
  final TenantContext tenantContext=context.createContext(request);
  final Account account=accountUserApi.getAccountById(UUID.fromString(accountId),tenantContext);
  final List<DirectPayment> payments=paymentApi.getAccountPayments(account.getId(),false,ImmutableList.<PluginProperty>of(),tenantContext);
  final Iterable<DirectPaymentTransaction> transactions=getDirectPaymentTransactions(payments,TransactionType.REFUND);
  final Iterable<RefundJson> result=Iterables.transform(transactions,new Function<DirectPaymentTransaction,RefundJson>(){
    @Override public RefundJson apply(    final DirectPaymentTransaction input){
      return new RefundJson(input,null,null);
    }
  }
);
  final List<RefundJson> realResult=ImmutableList.copyOf(result);
  return Response.status(Status.OK).entity(realResult).build();
}
