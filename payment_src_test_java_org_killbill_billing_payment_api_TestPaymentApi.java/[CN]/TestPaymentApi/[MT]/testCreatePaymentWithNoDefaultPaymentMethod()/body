{
  final LocalDate now=clock.getUTCToday();
  final Invoice invoice=testHelper.createTestInvoice(account,now,Currency.USD);
  final UUID subscriptionId=UUID.randomUUID();
  final UUID bundleId=UUID.randomUUID();
  final BigDecimal requestedAmount=BigDecimal.TEN;
  invoice.addInvoiceItem(new MockRecurringInvoiceItem(invoice.getId(),account.getId(),subscriptionId,bundleId,"test plan","test phase",null,now,now.plusMonths(1),requestedAmount,new BigDecimal("1.0"),Currency.USD));
  try {
    final Account accountNoPaymentMethod=testHelper.createTestAccount("bobo@gmail.com",false);
    paymentApi.createPurchase(accountNoPaymentMethod,accountNoPaymentMethod.getPaymentMethodId(),null,requestedAmount,Currency.AED,invoice.getId().toString(),"yo",ImmutableList.<PluginProperty>of(),callContext);
  }
 catch (  final PaymentApiException e) {
    assertEquals(e.getCode(),ErrorCode.PAYMENT_NO_DEFAULT_PAYMENT_METHOD.getCode());
  }
}
