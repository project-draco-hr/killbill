{
  final BigDecimal authAmount=BigDecimal.TEN;
  final String paymentExternalKey="rouge";
  final String transactionExternalKey="vert";
  final Payment initialPayment=paymentApi.createAuthorization(account,account.getPaymentMethodId(),null,authAmount,Currency.AED,paymentExternalKey,transactionExternalKey,ImmutableList.<PluginProperty>of(),callContext);
  final PaymentTransaction paymentTransaction=initialPayment.getTransactions().get(0);
  paymentDao.updatePaymentAndTransactionOnCompletion(account.getId(),initialPayment.getId(),TransactionType.AUTHORIZE,"AUTH_PENDING","AUTH_PENDING",paymentTransaction.getId(),TransactionStatus.PENDING,paymentTransaction.getProcessedAmount(),paymentTransaction.getProcessedCurrency(),null,null,internalCallContext);
  final Payment payment=paymentApi.notifyPendingTransactionOfStateChanged(account,paymentTransaction.getId(),true,callContext);
  assertEquals(payment.getExternalKey(),paymentExternalKey);
  assertEquals(payment.getPaymentMethodId(),account.getPaymentMethodId());
  assertEquals(payment.getAccountId(),account.getId());
  assertEquals(payment.getAuthAmount().compareTo(authAmount),0);
  assertEquals(payment.getCapturedAmount().compareTo(BigDecimal.ZERO),0);
  assertEquals(payment.getPurchasedAmount().compareTo(BigDecimal.ZERO),0);
  assertEquals(payment.getRefundedAmount().compareTo(BigDecimal.ZERO),0);
  assertEquals(payment.getCurrency(),Currency.AED);
  assertEquals(payment.getTransactions().size(),1);
  assertEquals(payment.getTransactions().get(0).getExternalKey(),transactionExternalKey);
  assertEquals(payment.getTransactions().get(0).getPaymentId(),payment.getId());
  assertEquals(payment.getTransactions().get(0).getAmount().compareTo(authAmount),0);
  assertEquals(payment.getTransactions().get(0).getCurrency(),Currency.AED);
  assertEquals(payment.getTransactions().get(0).getProcessedAmount().compareTo(authAmount),0);
  assertEquals(payment.getTransactions().get(0).getProcessedCurrency(),Currency.AED);
  assertEquals(payment.getTransactions().get(0).getTransactionStatus(),TransactionStatus.SUCCESS);
  assertEquals(payment.getTransactions().get(0).getTransactionType(),TransactionType.AUTHORIZE);
  assertNull(payment.getTransactions().get(0).getGatewayErrorMsg());
  assertNull(payment.getTransactions().get(0).getGatewayErrorCode());
}
