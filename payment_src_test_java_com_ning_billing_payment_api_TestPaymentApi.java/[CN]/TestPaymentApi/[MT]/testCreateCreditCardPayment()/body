{
  ((ZombieControl)invoicePaymentApi).addResult("notifyOfPaymentAttempt",BrainDeadProxyFactory.ZOMBIE_VOID);
  final DateTime now=new DateTime(DateTimeZone.UTC);
  final Account account=testHelper.createTestCreditCardAccount();
  final Invoice invoice=testHelper.createTestInvoice(account,now,Currency.USD);
  final BigDecimal amount=new BigDecimal("10.0011");
  final UUID subscriptionId=UUID.randomUUID();
  final UUID bundleId=UUID.randomUUID();
  invoice.addInvoiceItem(new MockRecurringInvoiceItem(invoice.getId(),account.getId(),subscriptionId,bundleId,"test plan","test phase",now,now.plusMonths(1),amount,new BigDecimal("1.0"),Currency.USD));
  Payment paymentInfo=paymentApi.createPayment(account.getExternalKey(),invoice.getId(),context);
  assertNotNull(paymentInfo.getId());
  assertTrue(paymentInfo.getAmount().compareTo(amount.setScale(2,RoundingMode.HALF_EVEN)) == 0);
  assertNotNull(paymentInfo.getPaymentNumber());
  assertEquals(paymentInfo.getPaymentStatus(),PaymentStatus.SUCCESS);
  assertEquals(paymentInfo.getAttempts().size(),1);
  assertEquals(paymentInfo.getInvoiceId(),invoice.getId());
  assertTrue(paymentInfo.getAmount().compareTo(amount.setScale(2,RoundingMode.HALF_EVEN)) == 0);
  assertEquals(paymentInfo.getCurrency(),Currency.USD);
  PaymentAttempt paymentAttempt=paymentInfo.getAttempts().get(0);
  assertNotNull(paymentAttempt);
  assertNotNull(paymentAttempt.getId());
}
