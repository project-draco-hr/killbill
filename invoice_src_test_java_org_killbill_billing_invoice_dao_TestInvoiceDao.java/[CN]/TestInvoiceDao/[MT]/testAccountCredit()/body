{
  final UUID accountId=account.getId();
  final LocalDate effectiveDate=new LocalDate(2011,3,1);
  final BigDecimal creditAmount=new BigDecimal("5.0");
  invoiceDao.insertCredit(accountId,null,creditAmount,effectiveDate,Currency.USD,context);
  final List<InvoiceModelDao> invoices=invoiceDao.getAllInvoicesByAccount(context);
  assertEquals(invoices.size(),1);
  final InvoiceModelDao invoice=invoices.get(0);
  assertTrue(InvoiceModelDaoHelper.getBalance(invoice).compareTo(BigDecimal.ZERO) == 0);
  final List<InvoiceItemModelDao> invoiceItems=invoice.getInvoiceItems();
  assertEquals(invoiceItems.size(),2);
  boolean foundCredit=false;
  boolean foundCBA=false;
  for (  final InvoiceItemModelDao cur : invoiceItems) {
    if (cur.getType() == InvoiceItemType.CREDIT_ADJ) {
      foundCredit=true;
      assertTrue(cur.getAmount().compareTo(creditAmount.negate()) == 0);
    }
 else     if (cur.getType() == InvoiceItemType.CBA_ADJ) {
      foundCBA=true;
      assertTrue(cur.getAmount().compareTo(creditAmount) == 0);
    }
  }
  assertTrue(foundCredit);
  assertTrue(foundCBA);
}
