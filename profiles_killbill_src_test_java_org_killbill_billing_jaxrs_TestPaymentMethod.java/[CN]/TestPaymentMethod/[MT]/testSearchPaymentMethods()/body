{
  Assert.assertEquals(killBillClient.searchPaymentMethodsByKey(UUID.randomUUID().toString()).size(),0);
  Assert.assertEquals(killBillClient.searchPaymentMethodsByKeyAndPlugin(UUID.randomUUID().toString(),PLUGIN_NAME).size(),0);
  final List<PluginProperty> pmProperties=new ArrayList<PluginProperty>();
  pmProperties.add(new PluginProperty("CC_NAME","Bozo",false));
  pmProperties.add(new PluginProperty("CC_CITY","SF",false));
  pmProperties.add(new PluginProperty("CC_LAST_4","4365",false));
  pmProperties.add(new PluginProperty("CC_STATE","CA",false));
  pmProperties.add(new PluginProperty("CC_COUNTRY","Zimbawe",false));
  final Account accountJson=createAccountWithDefaultPaymentMethod(UUID.randomUUID().toString(),pmProperties);
  final PaymentMethod paymentMethodJson=killBillClient.getPaymentMethod(accountJson.getPaymentMethodId(),true);
  Assert.assertEquals(killBillClient.searchPaymentMethodsByKey(UUID.randomUUID().toString()).size(),0);
  Assert.assertEquals(killBillClient.searchPaymentMethodsByKeyAndPlugin(UUID.randomUUID().toString(),PLUGIN_NAME).size(),0);
  doSearch("4365",paymentMethodJson);
  doSearch("Bozo",paymentMethodJson);
  doSearch("SF",paymentMethodJson);
  doSearch("CA",paymentMethodJson);
  doSearch("Zimbawe",paymentMethodJson);
}
