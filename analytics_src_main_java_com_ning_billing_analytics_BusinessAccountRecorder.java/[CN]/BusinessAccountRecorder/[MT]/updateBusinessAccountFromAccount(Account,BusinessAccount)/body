{
  bac.setName(account.getName());
  bac.setKey(account.getExternalKey());
  final Currency currency=account.getCurrency();
  bac.setCurrency(currency != null ? currency.toString() : bac.getCurrency());
  try {
    LocalDate lastInvoiceDate=bac.getLastInvoiceDate();
    BigDecimal totalInvoiceBalance=bac.getTotalInvoiceBalance();
    String lastPaymentStatus=bac.getLastPaymentStatus();
    String paymentMethodType=bac.getPaymentMethod();
    String creditCardType=bac.getCreditCardType();
    String billingAddressCountry=bac.getBillingAddressCountry();
    final List<Invoice> invoices=invoiceUserApi.getInvoicesByAccount(account.getId());
    if (invoices != null && invoices.size() > 0) {
      for (      final Invoice invoice : invoices) {
        totalInvoiceBalance=totalInvoiceBalance.add(invoice.getBalance());
        if (lastInvoiceDate == null || invoice.getInvoiceDate().isAfter(lastInvoiceDate)) {
          lastInvoiceDate=invoice.getInvoiceDate();
        }
      }
      DateTime lastPaymentDate=null;
      final List<Payment> payments=paymentApi.getAccountPayments(account.getId());
      if (payments != null) {
        for (        final Payment cur : payments) {
          if (lastPaymentDate == null || cur.getEffectiveDate().isAfter(lastPaymentDate)) {
            lastPaymentDate=cur.getEffectiveDate();
            lastPaymentStatus=cur.getPaymentStatus().toString();
          }
        }
      }
    }
    for (    final PaymentMethod paymentMethod : paymentApi.getPaymentMethods(account,true)) {
      if (paymentMethod.getId().equals(account.getPaymentMethodId()) && paymentMethod.getPluginDetail() != null) {
        paymentMethodType=PaymentMethodUtils.getPaymentMethodType(paymentMethod.getPluginDetail());
        creditCardType=PaymentMethodUtils.getCardType(paymentMethod.getPluginDetail());
        billingAddressCountry=PaymentMethodUtils.getCardCountry(paymentMethod.getPluginDetail());
        break;
      }
    }
    bac.setLastPaymentStatus(lastPaymentStatus);
    bac.setPaymentMethod(paymentMethodType);
    bac.setCreditCardType(creditCardType);
    bac.setBillingAddressCountry(billingAddressCountry);
    bac.setLastInvoiceDate(lastInvoiceDate);
    bac.setTotalInvoiceBalance(totalInvoiceBalance);
    bac.setBalance(invoiceUserApi.getAccountBalance(account.getId()));
  }
 catch (  PaymentApiException ex) {
    log.error(String.format("Failed to handle account update for account %s",account.getId()),ex);
  }
}
