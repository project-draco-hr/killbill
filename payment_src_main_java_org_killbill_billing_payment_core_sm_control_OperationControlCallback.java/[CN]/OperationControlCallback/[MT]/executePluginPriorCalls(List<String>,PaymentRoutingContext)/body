{
  PriorPaymentRoutingResult prevResult=null;
  PaymentRoutingContext inputPaymentRoutingContext=paymentControlContextArg;
  for (  final String pluginName : paymentControlPluginNames) {
    final PaymentRoutingPluginApi plugin=paymentControlPluginRegistry.getServiceForName(pluginName);
    if (plugin == null) {
      logger.warn("Skipping unknown payment control plugin {} when fetching results",pluginName);
      continue;
    }
    prevResult=plugin.priorCall(inputPaymentRoutingContext,paymentStateContext.getProperties());
    if (prevResult.isAborted()) {
      break;
    }
    inputPaymentRoutingContext=new DefaultPaymentRoutingContext(paymentStateContext.getAccount(),prevResult.getAdjustedPaymentMethodId() != null ? prevResult.getAdjustedPaymentMethodId() : inputPaymentRoutingContext.getPaymentMethodId(),paymentStateControlContext.getAttemptId(),paymentStateContext.getPaymentId(),paymentStateContext.getPaymentExternalKey(),paymentStateContext.getPaymentTransactionExternalKey(),paymentStateContext.getTransactionType(),prevResult.getAdjustedAmount() != null ? prevResult.getAdjustedAmount() : inputPaymentRoutingContext.getAmount(),prevResult.getAdjustedCurrency() != null ? prevResult.getAdjustedCurrency() : inputPaymentRoutingContext.getCurrency(),prevResult.getAdjustedPluginProperties() != null ? prevResult.getAdjustedPluginProperties() : inputPaymentRoutingContext.getPluginProperties(),paymentStateControlContext.isApiPayment(),paymentStateContext.getCallContext());
  }
  return prevResult;
}
