{
  final String invoiceId1=UUID.randomUUID().toString();
  final String name1=UUID.randomUUID().toString().substring(0,20);
  final String invoiceId2=UUID.randomUUID().toString();
  final String name2=UUID.randomUUID().toString().substring(0,20);
  Assert.assertEquals(invoiceTagSqlDao.addTag(invoiceId1,name1,internalCallContext),1);
  Assert.assertEquals(invoiceTagSqlDao.addTag(invoiceId2,name2,internalCallContext),1);
  Assert.assertEquals(invoiceTagSqlDao.getTagsForInvoice(invoiceId1,internalCallContext).size(),1);
  Assert.assertEquals(invoiceTagSqlDao.getTagsForInvoice(invoiceId2,internalCallContext).size(),1);
  Assert.assertEquals(invoiceTagSqlDao.removeTag(invoiceId1,name1,internalCallContext),1);
  Assert.assertEquals(invoiceTagSqlDao.getTagsForInvoice(invoiceId1,internalCallContext).size(),0);
  Assert.assertEquals(invoiceTagSqlDao.getTagsForInvoice(invoiceId2,internalCallContext).size(),1);
}
