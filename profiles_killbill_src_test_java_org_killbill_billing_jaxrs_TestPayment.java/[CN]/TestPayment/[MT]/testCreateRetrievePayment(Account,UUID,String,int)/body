{
  final String authTransactionExternalKey=UUID.randomUUID().toString();
  final PaymentTransaction authTransaction=new PaymentTransaction();
  authTransaction.setAmount(BigDecimal.TEN);
  authTransaction.setCurrency(account.getCurrency());
  authTransaction.setPaymentExternalKey(PaymentExternalKey);
  authTransaction.setTransactionExternalKey(authTransactionExternalKey);
  authTransaction.setTransactionType("AUTHORIZE");
  final Payment authPayment=killBillClient.createPayment(account.getAccountId(),paymentMethodId,authTransaction,createdBy,reason,comment);
  verifyPayment(account,paymentMethodId,authPayment,PaymentExternalKey,authTransactionExternalKey,BigDecimal.TEN,BigDecimal.ZERO,BigDecimal.ZERO,1,PaymentNb);
  final String capture1TransactionExternalKey=UUID.randomUUID().toString();
  final PaymentTransaction captureTransaction=new PaymentTransaction();
  captureTransaction.setPaymentId(authPayment.getPaymentId());
  captureTransaction.setAmount(BigDecimal.ONE);
  captureTransaction.setCurrency(account.getCurrency());
  captureTransaction.setPaymentExternalKey(PaymentExternalKey);
  captureTransaction.setTransactionExternalKey(capture1TransactionExternalKey);
  final Payment capturedPayment1=killBillClient.captureAuthorization(captureTransaction,createdBy,reason,comment);
  verifyPayment(account,paymentMethodId,capturedPayment1,PaymentExternalKey,authTransactionExternalKey,BigDecimal.TEN,BigDecimal.ONE,BigDecimal.ZERO,2,PaymentNb);
  verifyPaymentTransaction(authPayment.getPaymentId(),capturedPayment1.getTransactions().get(1),PaymentExternalKey,capture1TransactionExternalKey,account,captureTransaction.getAmount(),"CAPTURE");
  final String capture2TransactionExternalKey=UUID.randomUUID().toString();
  captureTransaction.setTransactionExternalKey(capture2TransactionExternalKey);
  captureTransaction.setPaymentId(null);
  final Payment capturedPayment2=killBillClient.captureAuthorization(captureTransaction,createdBy,reason,comment);
  verifyPayment(account,paymentMethodId,capturedPayment2,PaymentExternalKey,authTransactionExternalKey,BigDecimal.TEN,new BigDecimal("2"),BigDecimal.ZERO,3,PaymentNb);
  verifyPaymentTransaction(authPayment.getPaymentId(),capturedPayment2.getTransactions().get(2),PaymentExternalKey,capture2TransactionExternalKey,account,captureTransaction.getAmount(),"CAPTURE");
  final String refundTransactionExternalKey=UUID.randomUUID().toString();
  final PaymentTransaction refundTransaction=new PaymentTransaction();
  refundTransaction.setPaymentId(authPayment.getPaymentId());
  refundTransaction.setAmount(new BigDecimal("2"));
  refundTransaction.setCurrency(account.getCurrency());
  refundTransaction.setPaymentExternalKey(PaymentExternalKey);
  refundTransaction.setTransactionExternalKey(refundTransactionExternalKey);
  final Payment refundPayment=killBillClient.refundPayment(refundTransaction,createdBy,reason,comment);
  verifyPayment(account,paymentMethodId,refundPayment,PaymentExternalKey,authTransactionExternalKey,BigDecimal.TEN,new BigDecimal("2"),new BigDecimal("2"),4,PaymentNb);
  verifyPaymentTransaction(authPayment.getPaymentId(),refundPayment.getTransactions().get(3),PaymentExternalKey,refundTransactionExternalKey,account,refundTransaction.getAmount(),"REFUND");
}
