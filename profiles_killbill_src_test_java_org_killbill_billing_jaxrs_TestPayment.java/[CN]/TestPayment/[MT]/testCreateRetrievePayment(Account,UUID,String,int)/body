{
  final String authTransactionExternalKey=UUID.randomUUID().toString();
  final Payment authPayment=createVerifyTransaction(account,paymentMethodId,paymentExternalKey,authTransactionExternalKey,TransactionType.AUTHORIZE,"SUCCESS",BigDecimal.TEN,BigDecimal.TEN,ImmutableMap.<String,String>of(),paymentNb);
  final String capture1TransactionExternalKey=UUID.randomUUID().toString();
  final PaymentTransaction captureTransaction=new PaymentTransaction();
  captureTransaction.setPaymentId(authPayment.getPaymentId());
  captureTransaction.setAmount(BigDecimal.ONE);
  captureTransaction.setCurrency(account.getCurrency());
  captureTransaction.setPaymentExternalKey(paymentExternalKey);
  captureTransaction.setTransactionExternalKey(capture1TransactionExternalKey);
  final Payment capturedPayment1=killBillClient.captureAuthorization(captureTransaction,createdBy,reason,comment);
  verifyPayment(account,paymentMethodId,capturedPayment1,paymentExternalKey,authTransactionExternalKey,"AUTHORIZE","SUCCESS",BigDecimal.TEN,BigDecimal.TEN,BigDecimal.ONE,BigDecimal.ZERO,2,paymentNb);
  verifyPaymentTransaction(account,authPayment.getPaymentId(),paymentExternalKey,capturedPayment1.getTransactions().get(1),capture1TransactionExternalKey,captureTransaction.getAmount(),"CAPTURE","SUCCESS");
  final String capture2TransactionExternalKey=UUID.randomUUID().toString();
  captureTransaction.setTransactionExternalKey(capture2TransactionExternalKey);
  captureTransaction.setPaymentId(null);
  final Payment capturedPayment2=killBillClient.captureAuthorization(captureTransaction,createdBy,reason,comment);
  verifyPayment(account,paymentMethodId,capturedPayment2,paymentExternalKey,authTransactionExternalKey,"AUTHORIZE","SUCCESS",BigDecimal.TEN,BigDecimal.TEN,new BigDecimal("2"),BigDecimal.ZERO,3,paymentNb);
  verifyPaymentTransaction(account,authPayment.getPaymentId(),paymentExternalKey,capturedPayment2.getTransactions().get(2),capture2TransactionExternalKey,captureTransaction.getAmount(),"CAPTURE","SUCCESS");
  final String refundTransactionExternalKey=UUID.randomUUID().toString();
  final PaymentTransaction refundTransaction=new PaymentTransaction();
  refundTransaction.setPaymentId(authPayment.getPaymentId());
  refundTransaction.setAmount(new BigDecimal("2"));
  refundTransaction.setCurrency(account.getCurrency());
  refundTransaction.setPaymentExternalKey(paymentExternalKey);
  refundTransaction.setTransactionExternalKey(refundTransactionExternalKey);
  final Payment refundPayment=killBillClient.refundPayment(refundTransaction,createdBy,reason,comment);
  verifyPayment(account,paymentMethodId,refundPayment,paymentExternalKey,authTransactionExternalKey,"AUTHORIZE","SUCCESS",BigDecimal.TEN,BigDecimal.TEN,new BigDecimal("2"),new BigDecimal("2"),4,paymentNb);
  verifyPaymentTransaction(account,authPayment.getPaymentId(),paymentExternalKey,refundPayment.getTransactions().get(3),refundTransactionExternalKey,refundTransaction.getAmount(),"REFUND","SUCCESS");
}
