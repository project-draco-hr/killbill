{
  assertEquals(payment.getAccountId(),account.getAccountId());
  assertEquals(payment.getPaymentMethodId(),MoreObjects.firstNonNull(paymentMethodId,account.getPaymentMethodId()));
  Assert.assertNotNull(payment.getPaymentId());
  Assert.assertNotNull(payment.getPaymentNumber());
  assertEquals(payment.getPaymentExternalKey(),paymentExternalKey);
  assertEquals(payment.getAuthAmount().compareTo(authAmount),0);
  assertEquals(payment.getCapturedAmount().compareTo(capturedAmount),0);
  assertEquals(payment.getRefundedAmount().compareTo(refundedAmount),0);
  assertEquals(payment.getCurrency(),account.getCurrency());
  assertEquals(payment.getTransactions().size(),nbTransactions);
  final Payments Payments=killBillClient.getPayments();
  assertEquals(Payments.size(),paymentNb);
  assertEquals(Payments.get(paymentNb - 1),payment);
  final Payment retrievedPayment=killBillClient.getPayment(payment.getPaymentId());
  assertEquals(retrievedPayment,payment);
  final Payments paymentsForAccount=killBillClient.getPaymentsForAccount(account.getAccountId());
  assertEquals(paymentsForAccount.size(),paymentNb);
  assertEquals(paymentsForAccount.get(paymentNb - 1),payment);
}
