{
  paymentAttemptSqlDao.inTransaction(new Transaction<Void,PaymentAttemptSqlDao>(){
    @Override public Void inTransaction(    PaymentAttemptSqlDao transactional,    TransactionStatus status) throws Exception {
      transactional.updatePaymentAttemptWithPaymentId(paymentAttemptId.toString(),id.toString(),context);
      PaymentAttempt paymentAttempt=transactional.getPaymentAttemptById(paymentAttemptId.toString());
      Long recordId=transactional.getRecordId(paymentAttemptId.toString());
      EntityHistory<PaymentAttempt> history=new EntityHistory<PaymentAttempt>(paymentAttemptId,recordId,paymentAttempt,ChangeType.UPDATE);
      transactional.insertHistoryFromTransaction(history,context);
      Long historyRecordId=transactional.getHistoryRecordId(recordId);
      EntityAudit audit=new EntityAudit(TableName.PAYMENT_ATTEMPTS,historyRecordId,ChangeType.UPDATE);
      transactional.insertAuditFromTransaction(audit,context);
      return null;
    }
  }
);
}
