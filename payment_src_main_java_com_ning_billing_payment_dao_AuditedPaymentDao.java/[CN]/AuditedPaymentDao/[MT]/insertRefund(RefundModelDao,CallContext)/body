{
  return refundSqlDao.inTransaction(new Transaction<RefundModelDao,RefundSqlDao>(){
    @Override public RefundModelDao inTransaction(    RefundSqlDao transactional,    TransactionStatus status) throws Exception {
      transactional.insertRefund(refundInfo,context);
      final RefundModelDao savedRefund=transactional.getRefund(refundInfo.getId().toString());
      final Long recordId=transactional.getRecordId(savedRefund.getId().toString());
      final EntityHistory<RefundModelDao> history=new EntityHistory<RefundModelDao>(savedRefund.getId(),recordId,savedRefund,ChangeType.INSERT);
      transactional.insertHistoryFromTransaction(history,context);
      final Long historyRecordId=transactional.getHistoryRecordId(recordId);
      final EntityAudit audit=new EntityAudit(TableName.REFUND_HISTORY,historyRecordId,ChangeType.INSERT);
      transactional.insertAuditFromTransaction(audit,context);
      return savedRefund;
    }
  }
);
}
