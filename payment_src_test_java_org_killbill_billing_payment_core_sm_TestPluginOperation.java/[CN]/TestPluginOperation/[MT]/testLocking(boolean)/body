{
  final Semaphore available=new Semaphore(1,true);
  final CallbackTest callback=new CallbackTest(available);
  final PluginOperation pluginOperation=getPluginOperation(withAccountLock);
  available.acquire();
  runPluginOperationInBackground(pluginOperation,callback,false);
  Assert.assertEquals(available.getQueueLength(),1);
  Assert.assertEquals(callback.getRunCount(),0);
  if (withAccountLock) {
    runPluginOperationInBackground(pluginOperation,callback,true);
  }
 else {
    runPluginOperationInBackground(pluginOperation,callback,false);
    Assert.assertEquals(available.getQueueLength(),2);
    Assert.assertEquals(callback.getRunCount(),0);
  }
  available.release();
  Awaitility.await().until(new Callable<Boolean>(){
    @Override public Boolean call() throws Exception {
      return callback.getRunCount() == (withAccountLock ? 1 : 2);
    }
  }
);
  Assert.assertEquals(available.getQueueLength(),0);
  Assert.assertEquals(callback.getRunCount(),withAccountLock ? 1 : 2);
}
