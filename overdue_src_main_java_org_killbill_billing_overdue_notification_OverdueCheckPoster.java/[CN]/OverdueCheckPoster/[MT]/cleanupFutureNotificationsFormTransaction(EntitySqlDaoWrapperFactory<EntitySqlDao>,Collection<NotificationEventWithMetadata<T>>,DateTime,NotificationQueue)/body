{
  boolean shouldInsertNewNotification=true;
  if (!futureNotifications.isEmpty()) {
    final DateTime earliestExistingNotificationDate=futureNotifications.iterator().next().getEffectiveDate();
    final int minIndexToDeleteFrom;
    if (earliestExistingNotificationDate.isBefore(futureNotificationTime)) {
      minIndexToDeleteFrom=1;
      shouldInsertNewNotification=false;
    }
 else {
      minIndexToDeleteFrom=0;
    }
    int index=0;
    for (    final NotificationEventWithMetadata<T> cur : futureNotifications) {
      if (minIndexToDeleteFrom <= index) {
        overdueQueue.removeNotificationFromTransaction(entitySqlDaoWrapperFactory.getHandle().getConnection(),cur.getRecordId());
      }
      index++;
    }
  }
  return shouldInsertNewNotification;
}
