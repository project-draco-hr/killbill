{
  if (state == EntitlementState.CANCELLED) {
    throw new EntitlementApiException(ErrorCode.SUB_CANCEL_BAD_STATE,getId(),EntitlementState.CANCELLED);
  }
  final InternalCallContext contextWithValidAccountRecordId=internalCallContextFactory.createInternalCallContext(accountId,callContext);
  final DateTime effectiveCancelDate=dateHelper.fromLocalDateAndReferenceTime(localCancelDate,subscriptionBase.getStartDate(),contextWithValidAccountRecordId);
  try {
    subscriptionBase.cancel(callContext);
    blockingStateDao.setBlockingState(new DefaultBlockingState(getId(),BlockingStateType.SUBSCRIPTION,DefaultEntitlementApi.ENT_STATE_CANCELLED,EntitlementService.ENTITLEMENT_SERVICE_NAME,true,true,false,effectiveCancelDate),clock,contextWithValidAccountRecordId);
    return entitlementApi.getEntitlementForId(getId(),callContext);
  }
 catch (  SubscriptionBaseApiException e) {
    throw new EntitlementApiException(e);
  }
}
