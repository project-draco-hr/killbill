{
  if (!ProductCategory.BASE.equals(getSubscriptionBase().getCategory())) {
    return;
  }
  refresh(context);
  final DateTime now=clock.getUTCNow();
  final DateTime effectiveDate=effectiveDateOrNull == null ? now : effectiveDateOrNull;
  final boolean isBaseEntitlementCancelled=eventsStream.isEntitlementCancelled();
  if (effectiveDate.compareTo(now) > 0) {
    final NotificationEvent notificationEvent=new EntitlementNotificationKey(getId(),isBaseEntitlementCancelled ? EntitlementNotificationKeyAction.CANCEL : EntitlementNotificationKeyAction.CHANGE,effectiveDate);
    recordFutureNotification(effectiveDate,notificationEvent,internalCallContext);
    return;
  }
  final Collection<BlockingState> addOnsBlockingStates=entitlementUtils.computeBlockingStatesForAssociatedAddons(getSubscriptionBase(),effectiveDate,internalCallContext);
  for (  final BlockingState addOnBlockingState : addOnsBlockingStates) {
    entitlementUtils.setBlockingStateAndPostBlockingTransitionEvent(addOnBlockingState,internalCallContext);
  }
}
