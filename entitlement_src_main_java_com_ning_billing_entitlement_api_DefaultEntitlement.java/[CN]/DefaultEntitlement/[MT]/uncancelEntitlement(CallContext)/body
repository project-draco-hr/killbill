{
  refresh(callContext);
  if (eventsStream.isEntitlementCancelled() || eventsStream.isSubscriptionCancelled()) {
    throw new EntitlementApiException(ErrorCode.SUB_CANCEL_BAD_STATE,getId(),EntitlementState.CANCELLED);
  }
  final InternalCallContext contextWithValidAccountRecordId=internalCallContextFactory.createInternalCallContext(getAccountId(),callContext);
  for (  final BlockingState futureCancellation : eventsStream.getPendingEntitlementCancellationEvents()) {
    blockingStateDao.unactiveBlockingState(futureCancellation.getId(),contextWithValidAccountRecordId);
  }
  if (getSubscriptionBase().getFutureEndDate() != null) {
    try {
      getSubscriptionBase().uncancel(callContext);
    }
 catch (    SubscriptionBaseApiException e) {
      throw new EntitlementApiException(e);
    }
  }
}
