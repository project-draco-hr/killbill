{
  final List<PaymentMethod> allResults=new LinkedList<PaymentMethod>();
  Long totalNbRecords=0L;
  Long maxNbRecords=0L;
  boolean firstSearch=true;
  for (  final String pluginName : getAvailablePlugins()) {
    try {
      final Pagination<PaymentMethod> paymentMethods;
      if (allResults.size() >= limit) {
        paymentMethods=getPaymentMethods(firstSearch ? offset : 0L,1L,pluginName,tenantContext,internalTenantContext);
        ImmutableList.<PaymentMethod>copyOf(paymentMethods);
      }
 else {
        paymentMethods=getPaymentMethods(firstSearch ? offset : 0L,limit - allResults.size(),pluginName,tenantContext,internalTenantContext);
        allResults.addAll(ImmutableList.<PaymentMethod>copyOf(paymentMethods));
      }
      firstSearch=false;
      totalNbRecords+=paymentMethods.getTotalNbRecords();
      maxNbRecords+=paymentMethods.getMaxNbRecords();
    }
 catch (    PaymentApiException e) {
      log.warn("Error while searching plugin " + pluginName,e);
    }
  }
  return new DefaultPagination<PaymentMethod>(offset,limit,totalNbRecords,maxNbRecords,allResults.iterator());
}
