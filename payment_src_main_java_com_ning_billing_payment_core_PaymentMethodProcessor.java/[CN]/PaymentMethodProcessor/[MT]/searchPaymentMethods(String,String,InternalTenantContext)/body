{
  final PaymentPluginApi pluginApi=getPaymentPluginApi(pluginName);
  final List<PaymentMethodPlugin> paymentMethods;
  try {
    paymentMethods=pluginApi.searchPaymentMethods(searchKey,buildTenantContext(internalTenantContext));
  }
 catch (  PaymentPluginApiException e) {
    throw new PaymentApiException(e,ErrorCode.PAYMENT_PLUGIN_SEARCH_PAYMENT_METHODS,pluginName,searchKey);
  }
  final List<PaymentMethod> results=new LinkedList<PaymentMethod>();
  for (  final PaymentMethodPlugin paymentMethodPlugin : paymentMethods) {
    if (paymentMethodPlugin.getKbPaymentMethodId() == null) {
      log.debug("Plugin {} returned a payment method without a kbPaymentMethodId for searchKey {}",pluginName,searchKey);
      continue;
    }
    final PaymentMethodModelDao paymentMethodModelDao=paymentDao.getPaymentMethodIncludedDeleted(paymentMethodPlugin.getKbPaymentMethodId(),internalTenantContext);
    if (paymentMethodModelDao == null) {
      log.warn("Unable to find payment method id " + paymentMethodPlugin.getKbPaymentMethodId() + " present in plugin "+ pluginName);
      continue;
    }
    results.add(new DefaultPaymentMethod(paymentMethodModelDao,paymentMethodPlugin));
  }
  return results;
}
