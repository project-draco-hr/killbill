{
  new WithAccountLock<Void>().processAccountWithLock(locker,account.getExternalKey(),new WithAccountLockCallback<Void>(){
    @Override public Void doOperation() throws PaymentApiException {
      PaymentMethodModelDao paymentMethodModel=paymentDao.getPaymentMethod(paymentMethodId);
      if (paymentMethodModel == null) {
        throw new PaymentApiException(ErrorCode.PAYMENT_NO_SUCH_PAYMENT_METHOD,account.getId(),paymentMethodId);
      }
      try {
        PaymentPluginApi pluginApi=getPluginApi(paymentMethodId,account.getId());
        pluginApi.setDefaultPaymentMethod(account.getExternalKey(),paymentMethodModel.getExternalId());
        MutableAccountData updateAccountData=new DefaultMutableAccountData(account);
        updateAccountData.setPaymentMethodId(paymentMethodId);
        accountUserApi.updateAccount(account.getId(),updateAccountData,context);
        return null;
      }
 catch (      PaymentPluginApiException e) {
        throw new PaymentApiException(ErrorCode.PAYMENT_UPD_PAYMENT_METHOD,account.getId(),e.getErrorMessage());
      }
catch (      AccountApiException e) {
        throw new PaymentApiException(e);
      }
    }
  }
);
}
