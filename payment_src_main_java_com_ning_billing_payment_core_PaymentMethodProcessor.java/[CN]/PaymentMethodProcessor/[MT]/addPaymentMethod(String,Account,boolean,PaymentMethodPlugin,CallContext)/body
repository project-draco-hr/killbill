{
  PaymentMethod pm=null;
  PaymentPluginApi pluginApi=null;
  try {
    pluginApi=pluginRegistry.getPlugin(pluginName);
    pm=new DefaultPaymentMethod(account.getId(),pluginName,paymentMethodProps);
    String externalId=pluginApi.addPaymentMethod(account.getExternalKey(),paymentMethodProps,setDefault);
    PaymentMethodModelDao pmModel=new PaymentMethodModelDao(pm.getId(),pm.getAccountId(),pm.getPluginName(),pm.isActive(),externalId);
    paymentDao.insertPaymentMethod(pmModel,context);
    if (setDefault) {
      MutableAccountData updateAccountData=new DefaultMutableAccountData(account);
      updateAccountData.setPaymentMethodId(pm.getId());
      accountUserApi.updateAccount(account.getId(),updateAccountData,context);
    }
  }
 catch (  PaymentPluginApiException e) {
    throw new PaymentApiException(ErrorCode.PAYMENT_ADD_PAYMENT_METHOD,account.getId(),e.getErrorMessage());
  }
catch (  AccountApiException e) {
    throw new PaymentApiException(e);
  }
  return pm.getId();
}
