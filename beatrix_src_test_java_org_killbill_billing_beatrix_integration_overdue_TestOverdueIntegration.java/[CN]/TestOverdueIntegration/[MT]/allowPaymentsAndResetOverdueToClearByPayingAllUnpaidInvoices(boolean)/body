{
  paymentPlugin.makeAllInvoicesFailWithError(false);
  final List<Invoice> sortedInvoices=getUnpaidInvoicesOrderFromRecent();
  int remainingUnpaidInvoices=sortedInvoices.size();
  for (  final Invoice invoice : sortedInvoices) {
    if (invoice.getBalance().compareTo(BigDecimal.ZERO) > 0) {
      remainingUnpaidInvoices--;
      if (remainingUnpaidInvoices > 0) {
        createPaymentAndCheckForCompletion(account,invoice,NextEvent.PAYMENT,NextEvent.INVOICE_PAYMENT);
      }
 else {
        if (extraPayment) {
          createPaymentAndCheckForCompletion(account,invoice,NextEvent.BLOCK,NextEvent.TAG,NextEvent.INVOICE,NextEvent.PAYMENT,NextEvent.INVOICE_PAYMENT,NextEvent.PAYMENT,NextEvent.INVOICE_PAYMENT);
        }
 else {
          createPaymentAndCheckForCompletion(account,invoice,NextEvent.BLOCK,NextEvent.TAG,NextEvent.INVOICE,NextEvent.PAYMENT,NextEvent.INVOICE_PAYMENT);
        }
      }
    }
  }
  checkODState(DefaultBlockingState.CLEAR_STATE_NAME);
}
