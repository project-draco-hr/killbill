{
  final CatalogOverridePhaseDefinitionModelDao objWithNoNullPrices=new CatalogOverridePhaseDefinitionModelDao("p2","USD",BigDecimal.ZERO,new BigDecimal("12.453"),clock.getUTCNow());
  final CatalogOverridePhaseDefinitionModelDao objWithNullFixedPrice=new CatalogOverridePhaseDefinitionModelDao("p3","BTC",null,new BigDecimal("14.443"),clock.getUTCNow());
  final CatalogOverridePhaseDefinitionModelDao objWithNullRecurringPrice=new CatalogOverridePhaseDefinitionModelDao("p4","EUR",new BigDecimal("11.243"),null,clock.getUTCNow());
  performTestInTransaction(new WithCatalogOverridePhaseDefinitionSqlDaoTransaction<Void>(){
    @Override public Void doTransaction(    final CatalogOverridePhaseDefinitionSqlDao sqlDao){
      sqlDao.create(objWithNoNullPrices,internalCallContext);
      checkRehydrated(objWithNoNullPrices,sqlDao);
      sqlDao.create(objWithNullFixedPrice,internalCallContext);
      checkRehydrated(objWithNullFixedPrice,sqlDao);
      sqlDao.create(objWithNullRecurringPrice,internalCallContext);
      checkRehydrated(objWithNullRecurringPrice,sqlDao);
      return null;
    }
    private void checkRehydrated(    final CatalogOverridePhaseDefinitionModelDao obj,    final CatalogOverridePhaseDefinitionSqlDao sqlDao){
      final CatalogOverridePhaseDefinitionModelDao rehydrated=sqlDao.getByAttributes(obj.getParentPhaseName(),obj.getCurrency(),obj.getFixedPrice(),obj.getRecurringPrice(),internalCallContext);
      assertEquals(rehydrated.getParentPhaseName(),obj.getParentPhaseName());
      if (obj.getFixedPrice() != null) {
        assertEquals(rehydrated.getFixedPrice().compareTo(obj.getFixedPrice()),0);
      }
 else {
        assertNull(rehydrated.getFixedPrice());
      }
      if (obj.getRecurringPrice() != null) {
        assertEquals(rehydrated.getRecurringPrice().compareTo(obj.getRecurringPrice()),0);
      }
 else {
        assertNull(rehydrated.getRecurringPrice());
      }
      assertEquals(rehydrated.getCurrency(),obj.getCurrency());
    }
  }
);
}
