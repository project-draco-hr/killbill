{
  final CatalogOverridePhaseDefinitionModelDao obj1=new CatalogOverridePhaseDefinitionModelDao("p2","USD",null,new BigDecimal("54.21"),clock.getUTCNow());
  performTestInTransaction(new WithCatalogOverridePhaseDefinitionSqlDaoTransaction<Void>(){
    @Override public Void doTransaction(    final CatalogOverridePhaseDefinitionSqlDao sqlDao){
      sqlDao.create(obj1,internalCallContext);
      final Long lastInserted=sqlDao.getLastInsertId();
      final CatalogOverridePhaseDefinitionModelDao rehydrated=sqlDao.getByRecordId(lastInserted,internalCallContext);
      assertEquals(rehydrated.getParentPhaseName(),obj1.getParentPhaseName());
      assertNull(rehydrated.getFixedPrice());
      assertEquals(rehydrated.getRecurringPrice().compareTo(obj1.getRecurringPrice()),0);
      assertEquals(rehydrated.getCurrency(),obj1.getCurrency());
      return null;
    }
  }
);
}
