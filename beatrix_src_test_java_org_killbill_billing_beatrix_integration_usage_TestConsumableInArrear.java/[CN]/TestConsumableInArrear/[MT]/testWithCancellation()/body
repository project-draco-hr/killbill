{
  final AccountData accountData=getAccountData(1);
  final Account account=createAccountWithNonOsgiPaymentMethod(accountData);
  accountChecker.checkAccount(account.getId(),accountData,callContext);
  clock.setDay(new LocalDate(2012,4,1));
  final DefaultEntitlement bpSubscription=createBaseEntitlementAndCheckForCompletion(account.getId(),"bundleKey","Shotgun",ProductCategory.BASE,BillingPeriod.ANNUAL,NextEvent.CREATE,NextEvent.INVOICE);
  subscriptionChecker.checkSubscriptionCreated(bpSubscription.getId(),internalCallContext);
  invoiceChecker.checkInvoice(account.getId(),1,callContext,new ExpectedInvoiceItemCheck(new LocalDate(2012,4,1),null,InvoiceItemType.FIXED,new BigDecimal("0")));
  final DefaultEntitlement aoSubscription=addAOEntitlementAndCheckForCompletion(bpSubscription.getBundleId(),"Bullets",ProductCategory.ADD_ON,BillingPeriod.NO_BILLING_PERIOD,NextEvent.CREATE);
  setUsage(aoSubscription.getId(),"bullets",new LocalDate(2012,4,1),99L,callContext);
  setUsage(aoSubscription.getId(),"bullets",new LocalDate(2012,4,15),100L,callContext);
  busHandler.pushExpectedEvents(NextEvent.PHASE,NextEvent.INVOICE,NextEvent.PAYMENT,NextEvent.INVOICE_PAYMENT);
  clock.addDays(30);
  assertListenerStatus();
  invoiceChecker.checkInvoice(account.getId(),2,callContext,new ExpectedInvoiceItemCheck(new LocalDate(2012,5,1),new LocalDate(2013,5,1),InvoiceItemType.RECURRING,new BigDecimal("2399.95")),new ExpectedInvoiceItemCheck(new LocalDate(2012,4,1),new LocalDate(2012,5,1),InvoiceItemType.USAGE,new BigDecimal("5.90")));
  setUsage(aoSubscription.getId(),"bullets",new LocalDate(2012,5,3),99L,callContext);
  setUsage(aoSubscription.getId(),"bullets",new LocalDate(2012,5,5),100L,callContext);
  setUsage(aoSubscription.getId(),"bullets",new LocalDate(2012,5,29),100L,callContext);
  clock.addDays(27);
  busHandler.pushExpectedEvents(NextEvent.BLOCK,NextEvent.CANCEL,NextEvent.INVOICE,NextEvent.PAYMENT,NextEvent.INVOICE_PAYMENT);
  aoSubscription.cancelEntitlementWithDateOverrideBillingPolicy(new LocalDate(2012,5,28),BillingActionPolicy.IMMEDIATE,ImmutableList.<PluginProperty>of(),callContext);
  assertListenerStatus();
  invoiceChecker.checkInvoice(account.getId(),3,callContext,new ExpectedInvoiceItemCheck(new LocalDate(2012,5,1),new LocalDate(2012,5,28),InvoiceItemType.USAGE,new BigDecimal("5.90")));
  clock.addDays(4);
  Thread.sleep(1000);
}
