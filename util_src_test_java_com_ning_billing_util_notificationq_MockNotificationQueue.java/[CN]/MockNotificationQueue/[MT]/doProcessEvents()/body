{
  final int result;
  final List<Notification> processedNotifications=new ArrayList<Notification>();
  final List<Notification> oldNotifications=new ArrayList<Notification>();
  final List<Notification> readyNotifications=new ArrayList<Notification>();
synchronized (notifications) {
    for (    final Notification cur : notifications) {
      if (cur.isAvailableForProcessing(getClock().getUTCNow())) {
        readyNotifications.add(cur);
      }
    }
  }
  result=readyNotifications.size();
  for (  final Notification cur : readyNotifications) {
    final NotificationKey key=deserializeEvent(cur.getNotificationKeyClass(),cur.getNotificationKey());
    getHandler().handleReadyNotification(key,cur.getEffectiveDate(),cur.getAccountRecordId(),cur.getTenantRecordId());
    final DefaultNotification processedNotification=new DefaultNotification(-1L,cur.getId(),getHostname(),getHostname(),"MockQueue",getClock().getUTCNow().plus(CLAIM_TIME_MS),PersistentQueueEntryLifecycleState.PROCESSED,cur.getNotificationKeyClass(),cur.getNotificationKey(),cur.getAccountId(),cur.getEffectiveDate(),cur.getAccountRecordId(),cur.getTenantRecordId());
    oldNotifications.add(cur);
    processedNotifications.add(processedNotification);
  }
synchronized (notifications) {
    if (oldNotifications.size() > 0) {
      notifications.removeAll(oldNotifications);
    }
    if (processedNotifications.size() > 0) {
      notifications.addAll(processedNotifications);
    }
  }
  return result;
}
