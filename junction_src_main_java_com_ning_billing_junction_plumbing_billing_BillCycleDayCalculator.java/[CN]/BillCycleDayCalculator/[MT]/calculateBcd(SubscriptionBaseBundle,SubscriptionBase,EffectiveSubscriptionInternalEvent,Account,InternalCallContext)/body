{
  final Catalog catalog=catalogService.getFullCatalog();
  final Plan prevPlan=(transition.getPreviousPlan() != null) ? catalog.findPlan(transition.getPreviousPlan(),transition.getEffectiveTransitionTime(),transition.getSubscriptionStartDate()) : null;
  final Plan nextPlan=(transition.getNextPlan() != null) ? catalog.findPlan(transition.getNextPlan(),transition.getEffectiveTransitionTime(),transition.getSubscriptionStartDate()) : null;
  final Plan plan=(transition.getTransitionType() != SubscriptionBaseTransitionType.CANCEL) ? nextPlan : prevPlan;
  final Product product=plan.getProduct();
  final PlanPhase prevPhase=(transition.getPreviousPhase() != null) ? catalog.findPhase(transition.getPreviousPhase(),transition.getEffectiveTransitionTime(),transition.getSubscriptionStartDate()) : null;
  final PlanPhase nextPhase=(transition.getNextPhase() != null) ? catalog.findPhase(transition.getNextPhase(),transition.getEffectiveTransitionTime(),transition.getSubscriptionStartDate()) : null;
  final PlanPhase phase=(transition.getTransitionType() != SubscriptionBaseTransitionType.CANCEL) ? nextPhase : prevPhase;
  final BillingAlignment alignment=catalog.billingAlignment(new PlanPhaseSpecifier(product.getName(),product.getCategory(),phase.getBillingPeriod(),transition.getNextPriceList(),phase.getPhaseType()),transition.getRequestedTransitionTime());
  return calculateBcdForAlignment(alignment,bundle,subscription,account,catalog,plan,context);
}
