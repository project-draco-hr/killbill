{
  new WithAccountLock<Void>().processAccountWithLock(locker,account.getExternalKey(),new WithAccountLockCallback<Void>(){
    @Override public Void doOperation() throws PaymentApiException {
      try {
        final RefundModelDao refund=paymentDao.getRefund(refundId,context);
        if (refund == null) {
          throw new PaymentApiException(ErrorCode.PAYMENT_NO_SUCH_REFUND,refundId);
        }
        if (refund.getRefundStatus() != RefundStatus.PENDING) {
          throw new PaymentApiException(ErrorCode.PAYMENT_NOT_PENDING,refundId);
        }
        invoiceApi.createRefund(refund.getPaymentId(),refund.getAmount(),refund.isAdjusted(),Collections.<UUID,BigDecimal>emptyMap(),refund.getId(),context);
        paymentDao.updateRefundStatus(refund.getId(),RefundStatus.COMPLETED,refund.getAmount(),refund.getCurrency(),context);
      }
 catch (      InvoiceApiException e) {
      }
      return null;
    }
  }
);
}
