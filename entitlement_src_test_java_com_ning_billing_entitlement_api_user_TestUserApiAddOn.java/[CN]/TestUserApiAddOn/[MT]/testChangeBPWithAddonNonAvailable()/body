{
  try {
    final String baseProduct="Shotgun";
    final BillingPeriod baseTerm=BillingPeriod.MONTHLY;
    final String basePriceList=PriceListSet.DEFAULT_PRICELIST_NAME;
    SubscriptionData baseSubscription=createSubscription(baseProduct,baseTerm,basePriceList);
    final String aoProduct="Telescopic-Scope";
    final BillingPeriod aoTerm=BillingPeriod.MONTHLY;
    final String aoPriceList=PriceListSet.DEFAULT_PRICELIST_NAME;
    SubscriptionData aoSubscription=createSubscription(aoProduct,aoTerm,aoPriceList);
    testListener.reset();
    testListener.pushExpectedEvent(NextEvent.PHASE);
    testListener.pushExpectedEvent(NextEvent.PHASE);
    Interval it=new Interval(clock.getUTCNow(),clock.getUTCNow().plusMonths(2));
    clock.addDeltaFromReality(it.toDurationMillis());
    assertTrue(testListener.isCompleted(5000));
    final DateTime now=clock.getUTCNow();
    final Duration ctd=getDurationMonth(1);
    final DateTime newChargedThroughDate=DefaultClock.addDuration(now,ctd);
    billingApi.setChargedThroughDate(baseSubscription.getId(),newChargedThroughDate,context);
    baseSubscription=(SubscriptionData)entitlementApi.getSubscriptionFromId(baseSubscription.getId());
    final String newBaseProduct="Pistol";
    final BillingPeriod newBaseTerm=BillingPeriod.MONTHLY;
    final String newBasePriceList=PriceListSet.DEFAULT_PRICELIST_NAME;
    final List<SubscriptionStatusDryRun> aoStatus=entitlementApi.getDryRunChangePlanStatus(baseSubscription.getId(),newBaseProduct,now);
    assertEquals(aoStatus.size(),1);
    assertEquals(aoStatus.get(0).getId(),aoSubscription.getId());
    assertEquals(aoStatus.get(0).getProductName(),aoProduct);
    assertEquals(aoStatus.get(0).getBillingPeriod(),aoTerm);
    assertEquals(aoStatus.get(0).getPhaseType(),aoSubscription.getCurrentPhase().getPhaseType());
    assertEquals(aoStatus.get(0).getPriceList(),aoSubscription.getCurrentPriceList().getName());
    assertEquals(aoStatus.get(0).getReason(),DryRunChangeReason.AO_NOT_AVAILABLE_IN_NEW_PLAN);
    baseSubscription.changePlan(newBaseProduct,newBaseTerm,newBasePriceList,now,context);
    aoSubscription=(SubscriptionData)entitlementApi.getSubscriptionFromId(aoSubscription.getId());
    assertEquals(aoSubscription.getState(),SubscriptionState.ACTIVE);
    assertTrue(aoSubscription.isSubscriptionFutureCancelled());
    testListener.reset();
    testListener.pushExpectedEvent(NextEvent.CHANGE);
    testListener.pushExpectedEvent(NextEvent.CANCEL);
    it=new Interval(clock.getUTCNow(),clock.getUTCNow().plusMonths(1));
    clock.addDeltaFromReality(it.toDurationMillis());
    assertTrue(testListener.isCompleted(5000));
    aoSubscription=(SubscriptionData)entitlementApi.getSubscriptionFromId(aoSubscription.getId());
    assertEquals(aoSubscription.getState(),SubscriptionState.CANCELLED);
    assertListenerStatus();
  }
 catch (  Exception e) {
    Assert.fail(e.getMessage());
  }
}
