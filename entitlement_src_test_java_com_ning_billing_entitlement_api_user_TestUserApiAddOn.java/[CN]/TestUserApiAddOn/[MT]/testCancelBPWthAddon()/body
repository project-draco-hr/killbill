{
  try {
    String baseProduct="Shotgun";
    BillingPeriod baseTerm=BillingPeriod.MONTHLY;
    String basePriceList=PriceListSet.DEFAULT_PRICELIST_NAME;
    SubscriptionData baseSubscription=createSubscription(baseProduct,baseTerm,basePriceList);
    String aoProduct="Telescopic-Scope";
    BillingPeriod aoTerm=BillingPeriod.MONTHLY;
    String aoPriceList=PriceListSet.DEFAULT_PRICELIST_NAME;
    SubscriptionData aoSubscription=createSubscription(aoProduct,aoTerm,aoPriceList);
    testListener.reset();
    testListener.pushNextApiExpectedEvent(NextEvent.PHASE);
    testListener.pushNextApiExpectedEvent(NextEvent.PHASE);
    Duration twoMonths=getDurationMonth(2);
    clock.setDeltaFromReality(twoMonths,DAY_IN_MS);
    assertTrue(testListener.isApiCompleted(5000));
    DateTime now=clock.getUTCNow();
    Duration ctd=getDurationMonth(1);
    DateTime newChargedThroughDate=DefaultClock.addDuration(now,ctd);
    billingApi.setChargedThroughDate(baseSubscription.getId(),newChargedThroughDate,context);
    baseSubscription=(SubscriptionData)entitlementApi.getSubscriptionFromId(baseSubscription.getId());
    baseSubscription.cancel(now,false,context);
    aoSubscription=(SubscriptionData)entitlementApi.getSubscriptionFromId(aoSubscription.getId());
    assertEquals(aoSubscription.getState(),SubscriptionState.ACTIVE);
    assertTrue(aoSubscription.isSubscriptionFutureCancelled());
    testListener.reset();
    testListener.pushNextApiExpectedEvent(NextEvent.CANCEL);
    testListener.pushNextApiExpectedEvent(NextEvent.CANCEL);
    clock.addDeltaFromReality(ctd);
    assertTrue(testListener.isApiCompleted(5000));
    aoSubscription=(SubscriptionData)entitlementApi.getSubscriptionFromId(aoSubscription.getId());
    assertEquals(aoSubscription.getState(),SubscriptionState.CANCELLED);
  }
 catch (  Exception e) {
    Assert.fail(e.getMessage());
  }
}
