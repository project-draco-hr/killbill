{
  final String authDirectTransactionExternalKey=UUID.randomUUID().toString();
  final DirectTransaction authTransaction=new DirectTransaction();
  authTransaction.setAmount(BigDecimal.TEN);
  authTransaction.setCurrency(account.getCurrency());
  authTransaction.setDirectPaymentExternalKey(directPaymentExternalKey);
  authTransaction.setDirectTransactionExternalKey(authDirectTransactionExternalKey);
  authTransaction.setTransactionType("AUTHORIZE");
  final DirectPayment authDirectPayment=killBillClient.createDirectPayment(account.getAccountId(),paymentMethodId,authTransaction,createdBy,reason,comment);
  verifyDirectPayment(account,paymentMethodId,authDirectPayment,directPaymentExternalKey,authDirectTransactionExternalKey,BigDecimal.TEN,BigDecimal.ZERO,BigDecimal.ZERO,1,directPaymentNb);
  final String capture1DirectTransactionExternalKey=UUID.randomUUID().toString();
  final DirectTransaction captureTransaction=new DirectTransaction();
  captureTransaction.setDirectPaymentId(authDirectPayment.getDirectPaymentId());
  captureTransaction.setAmount(BigDecimal.ONE);
  captureTransaction.setCurrency(account.getCurrency());
  captureTransaction.setDirectPaymentExternalKey(directPaymentExternalKey);
  captureTransaction.setDirectTransactionExternalKey(capture1DirectTransactionExternalKey);
  final DirectPayment capturedDirectPayment1=killBillClient.captureAuthorization(captureTransaction,createdBy,reason,comment);
  verifyDirectPayment(account,paymentMethodId,capturedDirectPayment1,directPaymentExternalKey,authDirectTransactionExternalKey,BigDecimal.TEN,BigDecimal.ONE,BigDecimal.ZERO,2,directPaymentNb);
  verifyDirectPaymentTransaction(authDirectPayment.getDirectPaymentId(),capturedDirectPayment1.getTransactions().get(1),directPaymentExternalKey,capture1DirectTransactionExternalKey,account,captureTransaction.getAmount(),"CAPTURE");
  final String capture2DirectTransactionExternalKey=UUID.randomUUID().toString();
  captureTransaction.setDirectTransactionExternalKey(capture2DirectTransactionExternalKey);
  final DirectPayment capturedDirectPayment2=killBillClient.captureAuthorization(captureTransaction,createdBy,reason,comment);
  verifyDirectPayment(account,paymentMethodId,capturedDirectPayment2,directPaymentExternalKey,authDirectTransactionExternalKey,BigDecimal.TEN,new BigDecimal("2"),BigDecimal.ZERO,3,directPaymentNb);
  verifyDirectPaymentTransaction(authDirectPayment.getDirectPaymentId(),capturedDirectPayment2.getTransactions().get(2),directPaymentExternalKey,capture2DirectTransactionExternalKey,account,captureTransaction.getAmount(),"CAPTURE");
  final String refundDirectTransactionExternalKey=UUID.randomUUID().toString();
  final DirectTransaction refundTransaction=new DirectTransaction();
  refundTransaction.setDirectPaymentId(authDirectPayment.getDirectPaymentId());
  refundTransaction.setAmount(new BigDecimal("2"));
  refundTransaction.setCurrency(account.getCurrency());
  refundTransaction.setDirectPaymentExternalKey(directPaymentExternalKey);
  refundTransaction.setDirectTransactionExternalKey(refundDirectTransactionExternalKey);
  final DirectPayment refundDirectPayment=killBillClient.refundPayment(refundTransaction,createdBy,reason,comment);
  verifyDirectPayment(account,paymentMethodId,refundDirectPayment,directPaymentExternalKey,authDirectTransactionExternalKey,BigDecimal.TEN,new BigDecimal("2"),new BigDecimal("2"),4,directPaymentNb);
  verifyDirectPaymentTransaction(authDirectPayment.getDirectPaymentId(),refundDirectPayment.getTransactions().get(3),directPaymentExternalKey,refundDirectTransactionExternalKey,account,refundTransaction.getAmount(),"REFUND");
}
