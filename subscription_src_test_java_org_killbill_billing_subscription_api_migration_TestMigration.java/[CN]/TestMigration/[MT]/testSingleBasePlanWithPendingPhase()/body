{
  final DateTime trialDate=clock.getUTCNow().minusDays(10);
  final AccountMigration toBeMigrated=testUtil.createAccountForMigrationFuturePendingPhase(trialDate);
  testListener.pushExpectedEvent(NextEvent.MIGRATE_ENTITLEMENT);
  migrationApi.migrate(toBeMigrated,callContext);
  assertListenerStatus();
  final List<SubscriptionBaseBundle> bundles=subscriptionInternalApi.getBundlesForAccount(toBeMigrated.getAccountKey(),internalCallContext);
  assertEquals(bundles.size(),1);
  final SubscriptionBaseBundle bundle=bundles.get(0);
  final List<SubscriptionBase> subscriptions=subscriptionInternalApi.getSubscriptionsForBundle(bundle.getId(),null,internalCallContext);
  assertEquals(subscriptions.size(),1);
  final SubscriptionBase subscription=subscriptions.get(0);
  assertEquals(subscription.getStartDate(),trialDate);
  assertEquals(subscription.getEndDate(),null);
  assertEquals(subscription.getCurrentPriceList().getName(),PriceListSet.DEFAULT_PRICELIST_NAME);
  assertEquals(subscription.getCurrentPhase().getPhaseType(),PhaseType.TRIAL);
  assertEquals(subscription.getState(),EntitlementState.ACTIVE);
  assertEquals(subscription.getCurrentPlan().getName(),"assault-rifle-monthly");
  assertEquals(subscription.getChargedThroughDate(),trialDate.plusDays(30));
  testListener.pushExpectedEvent(NextEvent.PHASE);
  testListener.pushExpectedEvent(NextEvent.MIGRATE_BILLING);
  final Interval it=new Interval(clock.getUTCNow(),clock.getUTCNow().plusDays(30));
  clock.addDeltaFromReality(it.toDurationMillis());
  assertListenerStatus();
  assertEquals(subscription.getStartDate(),trialDate);
  assertEquals(subscription.getEndDate(),null);
  assertEquals(subscription.getCurrentPriceList().getName(),PriceListSet.DEFAULT_PRICELIST_NAME);
  assertEquals(subscription.getCurrentPhase().getPhaseType(),PhaseType.EVERGREEN);
  assertEquals(subscription.getState(),EntitlementState.ACTIVE);
  assertEquals(subscription.getCurrentPlan().getName(),"assault-rifle-monthly");
  assertEquals(subscription.getCurrentPhase().getName(),"assault-rifle-monthly-evergreen");
  assertListenerStatus();
}
