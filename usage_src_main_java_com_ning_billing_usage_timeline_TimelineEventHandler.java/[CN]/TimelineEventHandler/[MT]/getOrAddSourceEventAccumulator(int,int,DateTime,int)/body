{
  SourceAccumulatorsAndUpdateDate sourceAccumulatorsAndUpdateDate=accumulators.get(sourceId);
  if (sourceAccumulatorsAndUpdateDate == null) {
    addedSourceEventAccumulatorMapCount.incrementAndGet();
    sourceAccumulatorsAndUpdateDate=new SourceAccumulatorsAndUpdateDate(new HashMap<Integer,TimelineSourceEventAccumulator>(),new DateTime());
    accumulators.put(sourceId,sourceAccumulatorsAndUpdateDate);
  }
  sourceAccumulatorsAndUpdateDate.markUpdated();
  final Map<Integer,TimelineSourceEventAccumulator> hostCategoryAccumulators=sourceAccumulatorsAndUpdateDate.getCategoryAccumulators();
  TimelineSourceEventAccumulator accumulator=hostCategoryAccumulators.get(categoryId);
  if (accumulator == null) {
    addedSourceEventAccumulatorCount.incrementAndGet();
    accumulator=new TimelineSourceEventAccumulator(timelineDAO,timelineCoder,sampleCoder,backgroundWriter,sourceId,categoryId,firstSampleTime,timelineLengthMillis);
    hostCategoryAccumulators.put(categoryId,accumulator);
    log.debug("Created new Timeline for sourceId [{}] and category [{}]",sourceId,categoryId);
  }
  return accumulator;
}
