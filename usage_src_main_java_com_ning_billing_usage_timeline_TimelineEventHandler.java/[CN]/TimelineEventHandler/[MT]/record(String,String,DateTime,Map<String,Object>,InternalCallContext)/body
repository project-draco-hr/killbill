{
  if (shuttingDown.get()) {
    eventsReceivedAfterShuttingDown.incrementAndGet();
    return;
  }
  try {
    handledEventCount.incrementAndGet();
    final int sourceId=timelineDAO.getOrAddSource(sourceName,context);
    final Map<Integer,ScalarSample> scalarSamples=new LinkedHashMap<Integer,ScalarSample>();
    convertSamplesToScalarSamples(sourceId,eventType,samples,scalarSamples,context);
    if (scalarSamples.isEmpty()) {
      eventsDiscarded.incrementAndGet();
      return;
    }
    final SourceSamplesForTimestamp sourceSamples=new SourceSamplesForTimestamp(sourceId,eventType,eventTimestamp,scalarSamples);
    if (!replaying.get()) {
      backingBuffer.append(sourceSamples);
    }
    processSamples(sourceSamples,context);
  }
 catch (  Exception e) {
    throw new RuntimeException(e);
  }
}
