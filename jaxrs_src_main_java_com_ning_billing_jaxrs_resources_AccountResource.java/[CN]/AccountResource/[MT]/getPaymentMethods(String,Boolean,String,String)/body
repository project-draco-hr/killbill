{
  try {
    final Account account=accountApi.getAccountById(UUID.fromString(accountId));
    final List<PaymentMethod> methods=paymentApi.getPaymentMethods(account,withPluginInfo);
    final List<PaymentMethodJson> json=new ArrayList<PaymentMethodJson>(Collections2.transform(methods,new Function<PaymentMethod,PaymentMethodJson>(){
      @Override public PaymentMethodJson apply(      final PaymentMethod input){
        return PaymentMethodJson.toPaymentMethodJson(account,input);
      }
    }
));
    return Response.status(Status.OK).entity(json).build();
  }
 catch (  PaymentApiException e) {
    return Response.status(Status.NOT_FOUND).build();
  }
catch (  AccountApiException e) {
    if (e.getCode() == ErrorCode.ACCOUNT_DOES_NOT_EXIST_FOR_ID.getCode()) {
      return Response.status(Status.NO_CONTENT).build();
    }
 else {
      return Response.status(Status.BAD_REQUEST).build();
    }
  }
}
