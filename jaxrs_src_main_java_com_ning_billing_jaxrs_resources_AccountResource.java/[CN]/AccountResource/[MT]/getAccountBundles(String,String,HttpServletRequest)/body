{
  final TenantContext tenantContext=context.createContext(request);
  final UUID uuid=UUID.fromString(accountId);
  accountUserApi.getAccountById(uuid,tenantContext);
  final List<SubscriptionBundle> bundles=(externalKey != null) ? subscriptionApi.getSubscriptionBundlesForAccountIdAndExternalKey(uuid,externalKey,tenantContext) : subscriptionApi.getSubscriptionBundlesForAccountId(uuid,tenantContext);
  final Collection<BundleJson> result=Collections2.transform(bundles,new Function<SubscriptionBundle,BundleJson>(){
    @Override public BundleJson apply(    final SubscriptionBundle input){
      return new BundleJson(input,null);
    }
  }
);
  return Response.status(Status.OK).entity(result).build();
}
