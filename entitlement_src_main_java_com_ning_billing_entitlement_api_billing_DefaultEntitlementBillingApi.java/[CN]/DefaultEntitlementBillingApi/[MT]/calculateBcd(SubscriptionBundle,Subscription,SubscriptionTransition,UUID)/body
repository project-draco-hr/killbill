{
  Catalog catalog=catalogService.getFullCatalog();
  Plan plan=(transition.getTransitionType() != SubscriptionTransitionType.CANCEL) ? transition.getNextPlan() : transition.getPreviousPlan();
  Product product=plan.getProduct();
  PlanPhase phase=(transition.getTransitionType() != SubscriptionTransitionType.CANCEL) ? transition.getNextPhase() : transition.getPreviousPhase();
  BillingAlignment alignment=catalog.billingAlignment(new PlanPhaseSpecifier(product.getName(),product.getCategory(),phase.getBillingPeriod(),transition.getNextPriceList(),phase.getPhaseType()),transition.getRequestedTransitionTime());
  int result=-1;
  Account account=accountApi.getAccountById(accountId);
switch (alignment) {
case ACCOUNT:
    result=account.getBillCycleDay();
  if (result == 0) {
    result=calculateBcdFromSubscription(subscription,plan,account);
  }
break;
case BUNDLE:
result=bundle.getStartDate().toDateTime(account.getTimeZone()).getDayOfMonth();
break;
case SUBSCRIPTION:
result=subscription.getStartDate().toDateTime(account.getTimeZone()).getDayOfMonth();
break;
}
if (result == -1) {
throw new CatalogApiException(ErrorCode.CAT_INVALID_BILLING_ALIGNMENT,alignment.toString());
}
return result;
}
