{
  now=new LocalDate();
  final Collection<Invoice> invoices=new ArrayList<Invoice>();
  invoices.add(createInvoice(now,BigDecimal.ZERO,null));
  invoices.add(createInvoice(now.plusDays(1),BigDecimal.TEN,null));
  invoices.add(createInvoice(now.plusDays(2),new BigDecimal("100.0"),null));
  Mockito.when(invoiceApi.getUnpaidInvoicesByAccountId(Mockito.<UUID>any(),Mockito.<LocalDate>any(),Mockito.<InternalTenantContext>any())).thenReturn(invoices);
  return new BillingStateCalculator(invoiceApi,clock){
    @Override public BillingState calculateBillingState(    final Account overdueable,    final InternalTenantContext context){
      return null;
    }
  }
;
}
