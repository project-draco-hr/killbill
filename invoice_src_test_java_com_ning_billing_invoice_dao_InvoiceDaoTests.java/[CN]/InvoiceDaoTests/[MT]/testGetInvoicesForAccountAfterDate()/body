{
  UUID accountId=UUID.randomUUID();
  DateTime targetDate1=new DateTime(2011,10,6,0,0,0,0);
  Invoice invoice1=new DefaultInvoice(accountId,targetDate1,Currency.USD);
  invoiceDao.create(invoice1);
  DateTime targetDate2=new DateTime(2011,12,6,0,0,0,0);
  Invoice invoice2=new DefaultInvoice(accountId,targetDate2,Currency.USD);
  invoiceDao.create(invoice2);
  List<Invoice> invoices;
  invoices=invoiceDao.getInvoicesByAccount(accountId,new DateTime(2011,1,1,0,0,0,0));
  assertEquals(invoices.size(),2);
  invoices=invoiceDao.getInvoicesByAccount(accountId,new DateTime(2011,10,6,0,0,0,0));
  assertEquals(invoices.size(),2);
  invoices=invoiceDao.getInvoicesByAccount(accountId,new DateTime(2011,10,11,0,0,0,0));
  assertEquals(invoices.size(),1);
  invoices=invoiceDao.getInvoicesByAccount(accountId,new DateTime(2011,12,6,0,0,0,0));
  assertEquals(invoices.size(),1);
  invoices=invoiceDao.getInvoicesByAccount(accountId,new DateTime(2012,1,1,0,0,0,0));
  assertEquals(invoices.size(),0);
}
