{
  Subscription subscription=getZombieSubscription();
  Plan plan=BrainDeadProxyFactory.createBrainDeadProxyFor(Plan.class);
  ((ZombieControl)plan).addResult("getName","plan");
  PlanPhase phase1=BrainDeadProxyFactory.createBrainDeadProxyFor(PlanPhase.class);
  ((ZombieControl)phase1).addResult("getName","plan-phase1");
  DateTime targetDate1=clock.getUTCNow();
  Currency currency=Currency.USD;
  BillingEvent event1=createMockBillingEvent(null,subscription,targetDate1,plan,phase1,null,TEN,currency,BillingPeriod.MONTHLY,31,BillingModeType.IN_ADVANCE,"testEvent1",1L,SubscriptionTransitionType.CHANGE);
  BillingEventSet events=new MockBillingEventSet();
  events.add(event1);
  Invoice invoice=generator.generateInvoice(UUID.randomUUID(),events,null,targetDate1,Currency.USD);
  invoiceDao.create(invoice,context);
  invoiceDao.setWrittenOff(invoice.getId(),context);
  TagDao tagDao=new AuditedTagDao(dbi,tagEventBuilder,bus);
  Map<String,Tag> tags=tagDao.loadEntities(invoice.getId(),ObjectType.INVOICE);
  assertEquals(tags.size(),1);
  assertTrue(tags.containsKey(ControlTagType.WRITTEN_OFF.toString()));
}
