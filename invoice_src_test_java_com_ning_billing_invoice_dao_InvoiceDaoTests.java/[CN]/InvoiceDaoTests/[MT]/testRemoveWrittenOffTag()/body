{
  Subscription subscription=BrainDeadProxyFactory.createBrainDeadProxyFor(Subscription.class);
  ((ZombieControl)subscription).addResult("getId",UUID.randomUUID());
  Plan plan=BrainDeadProxyFactory.createBrainDeadProxyFor(Plan.class);
  ((ZombieControl)plan).addResult("getName","plan");
  PlanPhase phase1=BrainDeadProxyFactory.createBrainDeadProxyFor(PlanPhase.class);
  ((ZombieControl)phase1).addResult("getName","plan-phase1");
  DateTime targetDate1=clock.getUTCNow();
  Currency currency=Currency.USD;
  BillingEvent event1=new DefaultBillingEvent(subscription,targetDate1,plan,phase1,null,TEN,currency,BillingPeriod.MONTHLY,31,BillingModeType.IN_ADVANCE,"testEvent1",1L,SubscriptionTransitionType.CHANGE);
  BillingEventSet events=new BillingEventSet();
  events.add(event1);
  Invoice invoice=generator.generateInvoice(UUID.randomUUID(),events,null,targetDate1,Currency.USD);
  invoiceDao.create(invoice,context);
  invoiceDao.addControlTag(ControlTagType.WRITTEN_OFF,invoice.getId(),context);
  Invoice savedInvoice=invoiceDao.getById(invoice.getId());
  assertTrue(savedInvoice.hasTag(ControlTagType.WRITTEN_OFF.toString()));
  invoiceDao.removeControlTag(ControlTagType.WRITTEN_OFF,invoice.getId(),context);
  savedInvoice=invoiceDao.getById(invoice.getId());
  assertFalse(savedInvoice.hasTag(ControlTagType.WRITTEN_OFF.toString()));
}
