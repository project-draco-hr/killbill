{
  log.info("Starting testChangeIMMCancelUncancelChangeEOT");
  try {
    SubscriptionData subscription=createSubscription("Assault-Rifle",BillingPeriod.MONTHLY,"gunclubDiscount");
    PlanPhase trialPhase=subscription.getCurrentPhase();
    assertEquals(trialPhase.getPhaseType(),PhaseType.TRIAL);
    testListener.pushExpectedEvent(NextEvent.CHANGE);
    subscription.changePlan("Pistol",BillingPeriod.ANNUAL,"gunclubDiscount",clock.getUTCNow(),context);
    testListener.isCompleted(5000);
    testListener.pushExpectedEvent(NextEvent.PHASE);
    clock.setDeltaFromReality(trialPhase.getDuration(),DAY_IN_MS);
    assertTrue(testListener.isCompleted(5000));
    Duration ctd=getDurationMonth(1);
    DateTime expectedPhaseTrialChange=DefaultClock.addDuration(subscription.getStartDate(),trialPhase.getDuration());
    DateTime newChargedThroughDate=DefaultClock.addDuration(expectedPhaseTrialChange,ctd);
    billingApi.setChargedThroughDate(subscription.getId(),newChargedThroughDate,context);
    subscription=(SubscriptionData)entitlementApi.getSubscriptionFromId(subscription.getId());
    testListener.setNonExpectedMode();
    testListener.pushExpectedEvent(NextEvent.CANCEL);
    subscription.cancel(clock.getUTCNow(),false,context);
    assertFalse(testListener.isCompleted(5000));
    testListener.reset();
    subscription.uncancel(context);
    testListener.setNonExpectedMode();
    testListener.pushExpectedEvent(NextEvent.CHANGE);
    subscription.changePlan("Pistol",BillingPeriod.MONTHLY,"gunclubDiscount",clock.getUTCNow(),context);
    assertFalse(testListener.isCompleted(5000));
    testListener.reset();
    testListener.pushExpectedEvent(NextEvent.CHANGE);
    clock.addDeltaFromReality(ctd);
    assertTrue(testListener.isCompleted(5000));
    assertListenerStatus();
  }
 catch (  EntitlementUserApiException e) {
    Assert.fail(e.getMessage());
  }
}
