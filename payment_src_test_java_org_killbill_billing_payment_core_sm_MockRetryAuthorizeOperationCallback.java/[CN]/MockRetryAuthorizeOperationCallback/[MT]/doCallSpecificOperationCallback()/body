{
  if (exception != null) {
    if (exception instanceof PaymentApiException) {
      throw (PaymentApiException)exception;
    }
 else     if (exception instanceof RuntimeException) {
      throw (RuntimeException)exception;
    }
 else {
      throw new RuntimeException(exception);
    }
  }
  final PaymentModelDao payment=new PaymentModelDao(clock.getUTCNow(),clock.getUTCNow(),paymentStateContext.getAccount().getId(),paymentStateContext.getPaymentMethodId(),paymentStateContext.getPaymentExternalKey());
  final PaymentTransactionModelDao transaction=new PaymentTransactionModelDao(clock.getUTCNow(),clock.getUTCNow(),paymentStateContext.getAttemptId(),paymentStateContext.getPaymentTransactionExternalKey(),paymentStateContext.getPaymentId(),paymentStateContext.getTransactionType(),clock.getUTCNow(),TransactionStatus.SUCCESS,paymentStateContext.getAmount(),paymentStateContext.getCurrency(),"","");
  final PaymentModelDao paymentModelDao=paymentDao.insertPaymentWithFirstTransaction(payment,transaction,paymentStateContext.getInternalCallContext());
  final PaymentTransaction convertedTransaction=new DefaultPaymentTransaction(transaction.getId(),paymentStateContext.getAttemptId(),transaction.getTransactionExternalKey(),transaction.getCreatedDate(),transaction.getUpdatedDate(),transaction.getPaymentId(),transaction.getTransactionType(),transaction.getEffectiveDate(),transaction.getTransactionStatus(),transaction.getAmount(),transaction.getCurrency(),transaction.getProcessedAmount(),transaction.getProcessedCurrency(),transaction.getGatewayErrorCode(),transaction.getGatewayErrorMsg(),null);
  return new DefaultPayment(paymentModelDao.getId(),paymentModelDao.getCreatedDate(),paymentModelDao.getUpdatedDate(),paymentModelDao.getAccountId(),paymentModelDao.getPaymentMethodId(),paymentModelDao.getPaymentNumber(),paymentModelDao.getExternalKey(),Collections.singletonList(convertedTransaction));
}
