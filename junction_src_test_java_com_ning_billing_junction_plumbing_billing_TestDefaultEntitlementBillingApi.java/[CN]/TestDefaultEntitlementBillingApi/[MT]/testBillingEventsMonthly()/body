{
  DateTime now=clock.getUTCNow();
  DateTime then=now.minusDays(1);
  Plan nextPlan=catalogService.getFullCatalog().findPlan("PickupTrialEvergreen10USD",now);
  PlanPhase nextPhase=nextPlan.getAllPhases()[1];
  PriceList nextPriceList=catalogService.getFullCatalog().findPriceList(PriceListSet.DEFAULT_PRICELIST_NAME,now);
  SubscriptionEvent t=new MockSubscriptionEvent(eventId,subId,bunId,then,now,null,null,null,null,SubscriptionState.ACTIVE,nextPlan.getName(),nextPhase.getName(),nextPriceList.getName(),1L,null,SubscriptionTransitionType.CREATE,0,null);
  subscriptionTransitions.add(t);
  AccountUserApi accountApi=BrainDeadProxyFactory.createBrainDeadProxyFor(AccountUserApi.class);
  Account account=BrainDeadProxyFactory.createBrainDeadProxyFor(Account.class);
  ((ZombieControl)account).addResult("getBillCycleDay",32);
  ((ZombieControl)account).addResult("getCurrency",Currency.USD);
  ((ZombieControl)accountApi).addResult("getAccountById",account);
  ((MockCatalog)catalogService.getFullCatalog()).setBillingAlignment(BillingAlignment.ACCOUNT);
  BillCycleDayCalculator bcdCalculator=new BillCycleDayCalculator(catalogService,entitlementApi);
  CallContextFactory factory=new DefaultCallContextFactory(clock);
  BillingApi api=new DefaultBillingApi(null,factory,accountApi,bcdCalculator,entitlementApi,blockCalculator,catalogService);
  SortedSet<BillingEvent> events=api.getBillingEventsForAccountAndUpdateAccountBCD(new UUID(0L,0L));
  checkFirstEvent(events,nextPlan,32,subId,now,nextPhase,SubscriptionTransitionType.CREATE.toString());
}
