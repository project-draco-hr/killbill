{
  final DefaultInvoice invoice=new DefaultInvoice(account.getId(),clock.getUTCNow(),clock.getUTCNow(),ACCOUNT_CURRENCY);
  final FixedPriceInvoiceItem invoiceItem=new FixedPriceInvoiceItem(UUID.randomUUID(),invoice.getId(),account.getId(),UUID.randomUUID(),UUID.randomUUID(),"somePlan","somePhase",clock.getUTCNow(),clock.getUTCNow().plusDays(1),INVOICE_AMOUNT,ACCOUNT_CURRENCY);
  invoice.addInvoiceItem(invoiceItem);
  invoiceDao.create(invoice,invoice.getTargetDate().getDayOfMonth(),context);
  final List<Invoice> invoices=invoiceDao.getInvoicesByAccount(account.getId());
  Assert.assertEquals(invoices.size(),1);
  Assert.assertEquals(invoices.get(0).getInvoiceItems().size(),1);
  invoiceCreationNotification=new DefaultInvoiceCreationEvent(invoice.getId(),account.getId(),INVOICE_AMOUNT,ACCOUNT_CURRENCY,clock.getUTCNow(),null);
  paymentInfoNotification=new DefaultPaymentInfoEvent(account.getId(),invoices.get(0).getId(),null,invoices.get(0).getBalance(),-1,PaymentStatus.UNKNOWN,null,null,new DateTime());
}
