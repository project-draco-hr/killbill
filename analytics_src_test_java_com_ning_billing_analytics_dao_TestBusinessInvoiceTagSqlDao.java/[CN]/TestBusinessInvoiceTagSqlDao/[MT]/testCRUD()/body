{
  final String invoiceId=UUID.randomUUID().toString();
  final String name=UUID.randomUUID().toString().substring(0,20);
  Assert.assertEquals(invoiceTagSqlDao.getTagsForInvoice(invoiceId,internalCallContext).size(),0);
  Assert.assertEquals(invoiceTagSqlDao.removeTag(invoiceId,name,internalCallContext),0);
  Assert.assertEquals(invoiceTagSqlDao.addTag(invoiceId,name,internalCallContext),1);
  final List<BusinessInvoiceTag> tagsForInvoice=invoiceTagSqlDao.getTagsForInvoice(invoiceId,internalCallContext);
  Assert.assertEquals(tagsForInvoice.size(),1);
  final BusinessInvoiceTag invoiceTag=tagsForInvoice.get(0);
  Assert.assertEquals(invoiceTag.getInvoiceId().toString(),invoiceId);
  Assert.assertEquals(invoiceTag.getName(),name);
  Assert.assertEquals(invoiceTagSqlDao.removeTag(invoiceId,name,internalCallContext),1);
  Assert.assertEquals(invoiceTagSqlDao.getTagsForInvoice(invoiceId,internalCallContext).size(),0);
}
