{
  if (attempts == null || attempts.size() == 0) {
    return Collections.emptyList();
  }
  return new ArrayList<Payment.PaymentAttempt>(Collections2.transform(attempts,new Function<PaymentAttemptModelDao,PaymentAttempt>(){
    @Override public PaymentAttempt apply(    final PaymentAttemptModelDao input){
      return new PaymentAttempt(){
        @Override public PaymentStatus getPaymentStatus(){
          return input.getProcessingStatus();
        }
        @Override public DateTime getEffectiveDate(){
          return input.getEffectiveDate();
        }
        @Override public UUID getId(){
          return input.getId();
        }
        @Override public DateTime getCreatedDate(){
          throw new UnsupportedOperationException();
        }
        @Override public DateTime getUpdatedDate(){
          throw new UnsupportedOperationException();
        }
        @Override public String getGatewayErrorCode(){
          return input.getGatewayErrorCode();
        }
        @Override public String getGatewayErrorMsg(){
          return input.getGatewayErrorMsg();
        }
      }
;
    }
  }
));
}
