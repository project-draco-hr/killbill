{
  final String key=account.getExternalKey();
  try {
    accountSqlDao.inTransaction(new Transaction<Void,AccountSqlDao>(){
      @Override public Void inTransaction(      final AccountSqlDao transactionalDao,      final TransactionStatus status) throws AccountApiException, Bus.EventBusException {
        Account currentAccount=transactionalDao.getAccountByKey(key);
        if (currentAccount != null) {
          throw new AccountApiException(ErrorCode.ACCOUNT_ALREADY_EXISTS,key);
        }
        transactionalDao.create(account);
        saveTagsFromWithinTransaction(account,transactionalDao,true);
        saveCustomFieldsFromWithinTransaction(account,transactionalDao,true);
        AccountCreationNotification creationEvent=new DefaultAccountCreationEvent(account);
        eventBus.post(creationEvent);
        return null;
      }
    }
);
  }
 catch (  RuntimeException re) {
    if (re.getCause() instanceof AccountApiException) {
      throw (AccountApiException)re.getCause();
    }
 else     if (re.getCause() instanceof DataTruncation) {
      throw new AccountApiException(ErrorCode.DATA_TRUNCATION,re.getCause().getMessage());
    }
 else {
      throw re;
    }
  }
}
