{
  final String accountId=account.getId().toString();
  final String objectType=DefaultAccount.OBJECT_TYPE;
  accountDao.inTransaction(new Transaction<Void,AccountSqlDao>(){
    @Override public Void inTransaction(    AccountSqlDao accountDao,    TransactionStatus status) throws Exception {
      Account currentAccount=accountDao.getById(accountId);
      accountDao.update(account);
      FieldStoreDao fieldStoreDao=accountDao.become(FieldStoreDao.class);
      fieldStoreDao.clear(accountId,objectType);
      fieldStoreDao.save(accountId,objectType,account.getFieldList());
      TagStoreDao tagStoreDao=fieldStoreDao.become(TagStoreDao.class);
      tagStoreDao.clear(accountId,objectType);
      tagStoreDao.save(accountId,objectType,account.getTagList());
      AccountChangeNotification changeEvent=new DefaultAccountChangeNotification(account.getId(),currentAccount,account);
      if (changeEvent.hasChanges()) {
        eventBus.post(changeEvent);
      }
      return null;
    }
  }
);
}
