{
  return Iterators.<AuditLogModelDao,AuditLog>transform(auditLogsForAccountRecordId,new Function<AuditLogModelDao,AuditLog>(){
    @Override public AuditLog apply(    final AuditLogModelDao input){
      final TableName originalTableNameForHistoryTableName=findTableNameForHistoryTableName(input.getTableName());
      final ObjectType objectType;
      final UUID auditedEntityId;
      if (originalTableNameForHistoryTableName != null) {
        objectType=originalTableNameForHistoryTableName.getObjectType();
        auditedEntityId=nonEntitySqlDao.getIdFromHistoryRecordId(input.getTargetRecordId(),originalTableNameForHistoryTableName.getTableName(),input.getTableName().getTableName());
      }
 else {
        objectType=input.getTableName().getObjectType();
        auditedEntityId=nonEntitySqlDao.getIdFromObject(input.getTargetRecordId(),input.getTableName().getTableName());
      }
      return new DefaultAuditLog(input,objectType,auditedEntityId);
    }
    private TableName findTableNameForHistoryTableName(    final TableName historyTableName){
      for (      final TableName tableName : TableName.values()) {
        if (historyTableName.equals(tableName.getHistoryTableName())) {
          return tableName;
        }
      }
      return null;
    }
  }
);
}
