{
  final Account account=Mockito.mock(Account.class);
  final UUID accountId=UUID.randomUUID();
  Mockito.when(account.getId()).thenReturn(accountId);
  Mockito.when(account.getExternalKey()).thenReturn(accountId.toString());
  final PaymentMethodPlugin paymentMethodPlugin=Mockito.mock(PaymentMethodPlugin.class);
  final Iterable<PluginProperty> properties=ImmutableList.<PluginProperty>of();
  final UUID paymentMethodId2=paymentMethodProcessor.addPaymentMethod(null,"__EXTERNAL_PAYMENT__",account,false,paymentMethodPlugin,properties,callContext,internalCallContext);
  final PaymentMethod paymentMethod2=paymentMethodProcessor.getPaymentMethodById(paymentMethodId2,false,false,properties,callContext,internalCallContext);
  Assert.assertEquals(paymentMethod2.getExternalKey(),"unknown");
}
