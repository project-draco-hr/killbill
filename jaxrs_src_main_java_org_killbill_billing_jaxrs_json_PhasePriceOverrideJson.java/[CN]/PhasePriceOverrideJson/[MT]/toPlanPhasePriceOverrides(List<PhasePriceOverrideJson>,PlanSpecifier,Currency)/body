{
  if (input == null || input.isEmpty()) {
    return ImmutableList.<PlanPhasePriceOverride>of();
  }
  return ImmutableList.copyOf(Iterables.transform(input,new Function<PhasePriceOverrideJson,PlanPhasePriceOverride>(){
    @Nullable @Override public PlanPhasePriceOverride apply(    @Nullable final PhasePriceOverrideJson input){
      final PhaseType phaseType=input.getPhaseType() != null ? PhaseType.valueOf(input.getPhaseType()) : null;
      if (input.getPhaseName() != null) {
        return new DefaultPlanPhasePriceOverride(input.getPhaseName(),currency,input.getFixedPrice(),input.getRecurringPrice());
      }
 else {
        final PlanPhaseSpecifier planPhaseSpecifier=new PlanPhaseSpecifier(spec.getProductName(),spec.getProductCategory(),spec.getBillingPeriod(),spec.getPriceListName(),phaseType);
        return new DefaultPlanPhasePriceOverride(planPhaseSpecifier,currency,input.getFixedPrice(),input.getRecurringPrice());
      }
    }
  }
));
}
