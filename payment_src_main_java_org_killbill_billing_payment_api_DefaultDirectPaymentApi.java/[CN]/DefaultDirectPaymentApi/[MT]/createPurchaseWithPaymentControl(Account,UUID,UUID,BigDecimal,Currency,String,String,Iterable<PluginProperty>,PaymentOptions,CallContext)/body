{
  checkNullParameter(account,"account");
  checkNullParameter(amount,"amount");
  checkNullParameter(currency,"currency");
  checkNullParameter(directPaymentExternalKey,"paymentExternalKey");
  checkNullParameter(directPaymentTransactionExternalKey,"paymentTransactionExternalKey");
  checkNullParameter(properties,"plugin properties");
  checkPositiveAmount(amount);
  if (paymentMethodId == null && paymentOptions.isExternalPayment()) {
    throw new PaymentApiException(ErrorCode.PAYMENT_INVALID_PARAMETER,"paymentMethodId","should not be null");
  }
  final InternalCallContext internalCallContext=internalCallContextFactory.createInternalCallContext(account.getId(),callContext);
  final UUID nonNulPaymentMethodId=(paymentMethodId != null) ? paymentMethodId : paymentMethodProcessor.createOrGetExternalPaymentMethod(UUID.randomUUID().toString(),account,properties,callContext,internalCallContext);
  return pluginControlledPaymentProcessor.createPurchase(true,account,nonNulPaymentMethodId,directPaymentId,amount,currency,directPaymentExternalKey,directPaymentTransactionExternalKey,properties,paymentOptions.getPaymentControlPluginName(),callContext,internalCallContext);
}
