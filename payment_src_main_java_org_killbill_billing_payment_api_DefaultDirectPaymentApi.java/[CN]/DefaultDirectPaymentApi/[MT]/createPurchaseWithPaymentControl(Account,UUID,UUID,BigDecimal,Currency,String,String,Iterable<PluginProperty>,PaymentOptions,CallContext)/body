{
  checkNotNullArgumentList(account,amount,currency,directPaymentExternalKey,directPaymentTransactionExternalKey,properties,callContext);
  Preconditions.checkArgument(amount.compareTo(BigDecimal.ZERO) > 0,"Amount should be positive");
  Preconditions.checkArgument(paymentMethodId != null || paymentOptions.isExternalPayment(),"Payment methodId should be specified for non regular payments");
  final InternalCallContext internalCallContext=internalCallContextFactory.createInternalCallContext(account.getId(),callContext);
  final UUID nonNulPaymentMethodId=(paymentMethodId != null) ? paymentMethodId : paymentMethodProcessor.createOrGetExternalPaymentMethod(UUID.randomUUID().toString(),account,properties,callContext,internalCallContext);
  return pluginControlledPaymentProcessor.createPurchase(true,account,nonNulPaymentMethodId,directPaymentId,amount,currency,directPaymentExternalKey,directPaymentTransactionExternalKey,properties,paymentOptions.getPaymentControlPluginName(),callContext,internalCallContext);
}
