{
  final TenantBroadcastModelDao model=new TenantBroadcastModelDao(0L,"foo",UUID.randomUUID());
  internalCallContext.setTenantRecordId(79L);
  tenantBroadcastDao.create(model,internalCallContext);
  final TenantBroadcastModelDao result1=tenantBroadcastDao.getById(model.getId(),internalCallContext);
  Assert.assertEquals(result1.getTenantRecordId(),new Long(79L));
  Assert.assertEquals(result1.getType(),"foo");
  internalCallContext.reset();
  final TenantBroadcastModelDao resultNull=tenantBroadcastDao.getById(model.getId(),internalCallContext);
  Assert.assertNull(resultNull);
  final TenantBroadcastModelDao result2=noCachingTenantBroadcastDao.getLatestEntry();
  Assert.assertEquals(result2.getTenantRecordId(),new Long(79L));
  Assert.assertEquals(result2.getType(),"foo");
}
