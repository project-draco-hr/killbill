{
  loginAs("pierre","password");
  final Response firstResponse=doGet(JaxrsResource.SECURITY_PATH + "/permissions",DEFAULT_EMPTY_QUERY,DEFAULT_HTTP_TIMEOUT_SEC);
  Assert.assertEquals(firstResponse.getStatusCode(),Status.OK.getStatusCode());
  Assert.assertEquals(((List)mapper.readValue(firstResponse.getResponseBody(),new TypeReference<List<String>>(){
  }
)).size(),2);
  final Cookie session=Iterables.find(firstResponse.getCookies(),new Predicate<Cookie>(){
    @Override public boolean apply(    @Nullable final Cookie cookie){
      return ShiroHttpSession.DEFAULT_SESSION_ID_NAME.equals(cookie.getName());
    }
  }
);
  logout();
  final String url=String.format("http://%s:%d%s",config.getServerHost(),config.getServerPort(),JaxrsResource.SECURITY_PATH + "/permissions");
  final BoundRequestBuilder builder=getBuilderWithHeaderAndQuery("GET",url,DEFAULT_EMPTY_QUERY);
  builder.addCookie(session);
  final Response secondResponse=executeAndWait(builder,DEFAULT_HTTP_TIMEOUT_SEC,false);
  Assert.assertEquals(secondResponse.getStatusCode(),Status.OK.getStatusCode());
  Assert.assertEquals(((List)mapper.readValue(firstResponse.getResponseBody(),new TypeReference<List<String>>(){
  }
)).size(),2);
}
