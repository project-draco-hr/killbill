{
  try {
    final PaymentAttemptModelDao attempt=paymentDao.getPaymentAttempt(attemptId,internalCallContext);
    final PaymentModelDao payment=paymentDao.getPaymentByExternalKey(attempt.getPaymentExternalKey(),internalCallContext);
    final UUID paymentId=payment != null ? payment.getId() : null;
    final Iterable<PluginProperty> pluginProperties=PluginPropertySerializer.deserialize(attempt.getPluginProperties());
    final Account account=accountInternalApi.getAccountById(attempt.getAccountId(),internalCallContext);
    final CallContext callContext=buildCallContext(internalCallContext);
    final State state=paymentControlStateMachineHelper.getState(attempt.getStateName());
    log.debug("Retrying attemptId={}, paymentExternalKey={}, transactionExternalKey={}. paymentControlPluginNames={}, now={}",attemptId,attempt.getPaymentExternalKey(),attempt.getTransactionExternalKey(),paymentControlPluginNames,clock.getUTCNow());
    pluginControlledPaymentAutomatonRunner.run(state,false,attempt.getTransactionType(),account,attempt.getPaymentMethodId(),paymentId,attempt.getPaymentExternalKey(),attempt.getTransactionExternalKey(),attempt.getAmount(),attempt.getCurrency(),pluginProperties,paymentControlPluginNames,callContext,internalCallContext);
  }
 catch (  final AccountApiException e) {
    log.warn(String.format("Failed to retry attemptId='%s', paymentControlPlugins='%s'",attemptId,toPluginNamesOnError(paymentControlPluginNames)),e);
  }
catch (  final PaymentApiException e) {
    log.warn(String.format("Failed to retry attemptId='%s', paymentControlPlugins='%s'",attemptId,toPluginNamesOnError(paymentControlPluginNames)),e);
  }
catch (  final PluginPropertySerializerException e) {
    log.warn(String.format("Failed to retry attemptId='%s', paymentControlPlugins='%s'",attemptId,toPluginNamesOnError(paymentControlPluginNames)),e);
  }
catch (  final MissingEntryException e) {
    log.warn(String.format("Failed to retry attemptId='%s', paymentControlPlugins='%s'",attemptId,toPluginNamesOnError(paymentControlPluginNames)),e);
  }
}
