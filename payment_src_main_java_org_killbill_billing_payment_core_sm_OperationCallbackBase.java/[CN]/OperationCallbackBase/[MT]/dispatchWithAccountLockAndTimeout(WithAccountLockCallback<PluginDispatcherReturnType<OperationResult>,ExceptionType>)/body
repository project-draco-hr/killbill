{
  final Account account=paymentStateContext.getAccount();
  logger.debug("Dispatching plugin call for account {}",account.getExternalKey());
  try {
    final Callable<PluginDispatcherReturnType<OperationResult>> task=new CallableWithAccountLock<OperationResult,ExceptionType>(locker,account.getExternalKey(),callback);
    final OperationResult operationResult=paymentPluginDispatcher.dispatchWithTimeout(task);
    logger.debug("Successful plugin call for account {} with result {}",account.getExternalKey(),operationResult);
    return operationResult;
  }
 catch (  final ExecutionException e) {
    throw unwrapExceptionFromDispatchedTask(paymentStateContext,e);
  }
catch (  final TimeoutException e) {
    throw unwrapExceptionFromDispatchedTask(paymentStateContext,e);
  }
catch (  final InterruptedException e) {
    Thread.currentThread().interrupt();
    throw unwrapExceptionFromDispatchedTask(paymentStateContext,e);
  }
}
