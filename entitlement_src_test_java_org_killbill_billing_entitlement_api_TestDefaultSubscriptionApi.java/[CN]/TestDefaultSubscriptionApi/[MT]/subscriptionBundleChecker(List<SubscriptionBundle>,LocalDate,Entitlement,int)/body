{
  Assert.assertEquals(bundles.get(idx).getId(),entitlement.getBundleId());
  Assert.assertEquals(bundles.get(idx).getSubscriptions().size(),1);
  Assert.assertEquals(bundles.get(idx).getSubscriptions().get(0).getId(),entitlement.getId());
  Assert.assertEquals(bundles.get(idx).getTimeline().getSubscriptionEvents().size(),4);
  Assert.assertEquals(bundles.get(idx).getTimeline().getSubscriptionEvents().get(0).getEffectiveDate(),initialDate);
  Assert.assertEquals(bundles.get(idx).getTimeline().getSubscriptionEvents().get(0).getSubscriptionEventType(),SubscriptionEventType.START_ENTITLEMENT);
  Assert.assertEquals(bundles.get(idx).getTimeline().getSubscriptionEvents().get(1).getEffectiveDate(),initialDate);
  Assert.assertEquals(bundles.get(idx).getTimeline().getSubscriptionEvents().get(1).getSubscriptionEventType(),SubscriptionEventType.START_BILLING);
  Assert.assertEquals(bundles.get(idx).getTimeline().getSubscriptionEvents().get(2).getEffectiveDate(),initialDate);
  Assert.assertEquals(bundles.get(idx).getTimeline().getSubscriptionEvents().get(2).getSubscriptionEventType(),SubscriptionEventType.SERVICE_STATE_CHANGE);
  Assert.assertEquals(bundles.get(idx).getTimeline().getSubscriptionEvents().get(2).getServiceName(),"service");
  Assert.assertEquals(bundles.get(idx).getTimeline().getSubscriptionEvents().get(2).getServiceStateName(),"stateName");
  Assert.assertEquals(bundles.get(idx).getTimeline().getSubscriptionEvents().get(3).getEffectiveDate(),new LocalDate(2013,9,6));
  Assert.assertEquals(bundles.get(idx).getTimeline().getSubscriptionEvents().get(3).getSubscriptionEventType(),SubscriptionEventType.PHASE);
}
