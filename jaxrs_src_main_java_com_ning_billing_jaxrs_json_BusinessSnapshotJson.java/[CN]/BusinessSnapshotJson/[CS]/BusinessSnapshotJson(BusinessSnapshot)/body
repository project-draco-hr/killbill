{
  final Map<UUID,Integer> invoiceIdToNumber=new HashMap<UUID,Integer>();
  this.businessAccount=new BusinessAccountJson(businessSnapshot.getBusinessAccount());
  this.businessSubscriptionTransitions=ImmutableList.<BusinessSubscriptionTransitionJson>copyOf(Collections2.transform(businessSnapshot.getBusinessSubscriptionTransitions(),new Function<BusinessSubscriptionTransition,BusinessSubscriptionTransitionJson>(){
    @Override public BusinessSubscriptionTransitionJson apply(    @Nullable final BusinessSubscriptionTransition input){
      return new BusinessSubscriptionTransitionJson(input);
    }
  }
));
  this.businessInvoices=ImmutableList.<BusinessInvoiceJson>copyOf(Collections2.transform(businessSnapshot.getBusinessInvoices(),new Function<BusinessInvoice,BusinessInvoiceJson>(){
    @Override public BusinessInvoiceJson apply(    final BusinessInvoice input){
      invoiceIdToNumber.put(input.getInvoiceId(),input.getInvoiceNumber());
      return new BusinessInvoiceJson(input);
    }
  }
));
  this.businessInvoicePayments=ImmutableList.<BusinessInvoicePaymentJson>copyOf(Collections2.transform(businessSnapshot.getBusinessInvoicePayments(),new Function<BusinessInvoicePayment,BusinessInvoicePaymentJson>(){
    @Override public BusinessInvoicePaymentJson apply(    final BusinessInvoicePayment input){
      return new BusinessInvoicePaymentJson(input,invoiceIdToNumber.get(input.getInvoiceId()));
    }
  }
));
  this.businessOverdueStatuses=ImmutableList.<BusinessOverdueStatusJson>copyOf(Collections2.transform(businessSnapshot.getBusinessOverdueStatuses(),new Function<BusinessOverdueStatus,BusinessOverdueStatusJson>(){
    @Override public BusinessOverdueStatusJson apply(    @Nullable final BusinessOverdueStatus input){
      return new BusinessOverdueStatusJson(input);
    }
  }
));
  this.businessTags=ImmutableList.<BusinessTagJson>copyOf(Collections2.transform(businessSnapshot.getBusinessTags(),new Function<BusinessTag,BusinessTagJson>(){
    @Override public BusinessTagJson apply(    @Nullable final BusinessTag input){
      return new BusinessTagJson(input);
    }
  }
));
  this.businessFields=ImmutableList.<BusinessFieldJson>copyOf(Collections2.transform(businessSnapshot.getBusinessFields(),new Function<BusinessField,BusinessFieldJson>(){
    @Override public BusinessFieldJson apply(    @Nullable final BusinessField input){
      return new BusinessFieldJson(input);
    }
  }
));
}
