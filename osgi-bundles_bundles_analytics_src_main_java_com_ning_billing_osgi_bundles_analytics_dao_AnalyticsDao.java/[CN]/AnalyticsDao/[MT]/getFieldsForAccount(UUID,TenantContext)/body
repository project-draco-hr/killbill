{
  final Long accountRecordId=getAccountRecordId(accountId,context);
  final Long tenantRecordId=getTenantRecordId(context);
  final List<BusinessFieldModelDao> businessFieldModelDaos=new LinkedList<BusinessFieldModelDao>();
  businessFieldModelDaos.addAll(sqlDao.getAccountFieldsByAccountRecordId(accountRecordId,tenantRecordId,context));
  businessFieldModelDaos.addAll(sqlDao.getInvoiceFieldsByAccountRecordId(accountRecordId,tenantRecordId,context));
  businessFieldModelDaos.addAll(sqlDao.getInvoicePaymentFieldsByAccountRecordId(accountRecordId,tenantRecordId,context));
  return Lists.transform(businessFieldModelDaos,new Function<BusinessFieldModelDao,BusinessField>(){
    @Override public BusinessField apply(    final BusinessFieldModelDao input){
      return BusinessField.create(input);
    }
  }
);
}
