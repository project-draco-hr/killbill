{
  final Long accountRecordId=getAccountRecordId(accountId,context);
  final Long tenantRecordId=getTenantRecordId(context);
  final List<BusinessInvoicePaymentBaseModelDao> businessInvoicePaymentModelDaos=new ArrayList<BusinessInvoicePaymentBaseModelDao>();
  businessInvoicePaymentModelDaos.addAll(sqlDao.getInvoicePaymentsByAccountRecordId(accountRecordId,tenantRecordId,context));
  businessInvoicePaymentModelDaos.addAll(sqlDao.getInvoicePaymentRefundsByAccountRecordId(accountRecordId,tenantRecordId,context));
  businessInvoicePaymentModelDaos.addAll(sqlDao.getInvoicePaymentChargebacksByAccountRecordId(accountRecordId,tenantRecordId,context));
  return Lists.transform(businessInvoicePaymentModelDaos,new Function<BusinessInvoicePaymentBaseModelDao,BusinessInvoicePayment>(){
    @Override public BusinessInvoicePayment apply(    final BusinessInvoicePaymentBaseModelDao input){
      return new BusinessInvoicePayment(input);
    }
  }
);
}
