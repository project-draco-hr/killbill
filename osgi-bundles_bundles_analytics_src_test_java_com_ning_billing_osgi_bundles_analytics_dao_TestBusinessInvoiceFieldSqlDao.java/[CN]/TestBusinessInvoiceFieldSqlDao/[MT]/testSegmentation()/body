{
  final String invoiceId1=UUID.randomUUID().toString();
  final String name1=UUID.randomUUID().toString().substring(0,30);
  final String invoiceId2=UUID.randomUUID().toString();
  final String name2=UUID.randomUUID().toString().substring(0,30);
  Assert.assertEquals(invoiceFieldSqlDao.addField(invoiceId1,name1,UUID.randomUUID().toString(),internalCallContext),1);
  Assert.assertEquals(invoiceFieldSqlDao.addField(invoiceId2,name2,UUID.randomUUID().toString(),internalCallContext),1);
  Assert.assertEquals(invoiceFieldSqlDao.getFieldsForInvoice(invoiceId1,internalCallContext).size(),1);
  Assert.assertEquals(invoiceFieldSqlDao.getFieldsForInvoice(invoiceId2,internalCallContext).size(),1);
  Assert.assertEquals(invoiceFieldSqlDao.removeField(invoiceId1,name1,internalCallContext),1);
  Assert.assertEquals(invoiceFieldSqlDao.getFieldsForInvoice(invoiceId1,internalCallContext).size(),0);
  Assert.assertEquals(invoiceFieldSqlDao.getFieldsForInvoice(invoiceId2,internalCallContext).size(),1);
}
