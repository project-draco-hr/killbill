{
  final List<SubscriptionNewEventJson> newEvents=new LinkedList<SubscriptionNewEventJson>();
  final String eventId1=UUID.randomUUID().toString();
  final String productName1="gold";
  final String billingPeriod1="monthly";
  final DateTime requestedDate1=new DateTime();
  final DateTime effectiveDate1=requestedDate1;
  final String priceList1="default";
  final String eventType1="CREATE";
  final String phase1="TRIAL";
  SubscriptionNewEventJson ev1=new SubscriptionNewEventJson(billingPeriod1,requestedDate1,productName1,priceList1,eventType1,phase1);
  newEvents.add(ev1);
  final List<SubscriptionDeletedEventJson> deletedEvents=new LinkedList<SubscriptionDeletedEventJson>();
  final String eventId2=UUID.randomUUID().toString();
  final String productName2="gold";
  final String billingPeriod2="monthly";
  final DateTime requestedDate2=new DateTime();
  final DateTime effectiveDate2=requestedDate2;
  final String priceList2="default";
  final String eventType2="PHASE";
  final String phase2="EVERGREEN";
  SubscriptionDeletedEventJson ev2=new SubscriptionDeletedEventJson(eventId2,billingPeriod2,requestedDate2,effectiveDate2,productName2,priceList2,eventType2,phase2);
  deletedEvents.add(ev2);
  final String subscriptionId=UUID.randomUUID().toString();
  final String bundleId=UUID.randomUUID().toString();
  final String productName=productName2;
  final String productCategory="classic";
  final String billingPeriod=billingPeriod2;
  final String priceList=priceList2;
  SubscriptionJson obj=new SubscriptionJson(subscriptionId,bundleId,productName,productCategory,billingPeriod,priceList,null,newEvents,deletedEvents);
  return obj;
}
