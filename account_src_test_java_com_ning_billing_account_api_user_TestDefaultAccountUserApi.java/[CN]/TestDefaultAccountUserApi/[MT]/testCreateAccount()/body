{
  final UUID id=UUID.randomUUID();
  final String externalKey=UUID.randomUUID().toString();
  final String email=UUID.randomUUID().toString();
  final String name=UUID.randomUUID().toString();
  final int firstNameLength=Integer.MAX_VALUE;
  final Currency currency=Currency.BRL;
  final int billCycleDay=Integer.MIN_VALUE;
  final UUID paymentMethodId=UUID.randomUUID();
  final DateTimeZone timeZone=DateTimeZone.UTC;
  final String locale=UUID.randomUUID().toString();
  final String address1=UUID.randomUUID().toString();
  final String address2=UUID.randomUUID().toString();
  final String companyName=UUID.randomUUID().toString();
  final String city=UUID.randomUUID().toString();
  final String stateOrProvince=UUID.randomUUID().toString();
  final String country=UUID.randomUUID().toString();
  final String postalCode=UUID.randomUUID().toString();
  final String phone=UUID.randomUUID().toString();
  final boolean isMigrated=true;
  final boolean isNotifiedForInvoices=false;
  final AccountData data=new DefaultAccount(id,externalKey,email,name,firstNameLength,currency,billCycleDay,paymentMethodId,timeZone,locale,address1,address2,companyName,city,stateOrProvince,country,postalCode,phone,isMigrated,isNotifiedForInvoices);
  accountUserApi.createAccount(data,callContext);
  final Account account=accountDao.getAccountByKey(externalKey);
  Assert.assertEquals(account.getExternalKey(),externalKey);
  Assert.assertEquals(account.getEmail(),email);
  Assert.assertEquals(account.getName(),name);
  Assert.assertEquals(account.getFirstNameLength(),firstNameLength);
  Assert.assertEquals(account.getCurrency(),currency);
  Assert.assertEquals(account.getBillCycleDay(),billCycleDay);
  Assert.assertEquals(account.getPaymentMethodId(),paymentMethodId);
  Assert.assertEquals(account.getTimeZone(),timeZone);
  Assert.assertEquals(account.getLocale(),locale);
  Assert.assertEquals(account.getAddress1(),address1);
  Assert.assertEquals(account.getAddress2(),address2);
  Assert.assertEquals(account.getCompanyName(),companyName);
  Assert.assertEquals(account.getCity(),city);
  Assert.assertEquals(account.getStateOrProvince(),stateOrProvince);
  Assert.assertEquals(account.getCountry(),country);
  Assert.assertEquals(account.getPostalCode(),postalCode);
  Assert.assertEquals(account.getPhone(),phone);
  Assert.assertEquals(account.isMigrated(),isMigrated);
  Assert.assertEquals(account.isNotifiedForInvoices(),isNotifiedForInvoices);
}
