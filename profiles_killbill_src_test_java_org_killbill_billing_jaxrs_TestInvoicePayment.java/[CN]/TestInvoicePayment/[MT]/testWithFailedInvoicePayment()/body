{
  mockPaymentProviderPlugin.makeNextPaymentFailWithError();
  final DateTime initialDate=new DateTime(2012,4,25,0,3,42,0);
  clock.setDeltaFromReality(initialDate.getMillis() - clock.getUTCNow().getMillis());
  final Account accountJson=createAccountWithPMBundleAndSubscriptionAndWaitForFirstInvoice();
  InvoicePayments invoicePayments=killBillClient.getInvoicePaymentsForAccount(accountJson.getAccountId(),basicRequestOptions());
  assertEquals(invoicePayments.size(),1);
  final InvoicePayment invoicePayment=invoicePayments.get(0);
  assertNotNull(invoicePayment.getTargetInvoiceId());
  final Invoices invoices=killBillClient.getInvoicesForAccount(accountJson.getAccountId(),basicRequestOptions());
  assertEquals(invoices.size(),2);
  final Invoice invoice=invoices.get(1);
  assertEquals(invoicePayment.getTargetInvoiceId(),invoice.getInvoiceId());
  killBillClient.payAllInvoices(accountJson.getAccountId(),false,null,basicRequestOptions());
  invoicePayments=killBillClient.getInvoicePaymentsForAccount(accountJson.getAccountId(),basicRequestOptions());
  assertEquals(invoicePayments.size(),2);
  for (  final InvoicePayment cur : invoicePayments) {
    assertEquals(cur.getTargetInvoiceId(),invoice.getInvoiceId());
  }
}
