{
  return transactionalSqlDao.execute(new EntitySqlDaoTransactionWrapper<List<EntitlementEvent>>(){
    @Override public List<EntitlementEvent> inTransaction(    final EntitySqlDaoWrapperFactory<EntitySqlDao> entitySqlDaoWrapperFactory) throws Exception {
      final List<EntitlementEventModelDao> models=entitySqlDaoWrapperFactory.become(EntitlementEventSqlDao.class).getEventsForSubscription(subscriptionId.toString(),context);
      final Collection<EntitlementEventModelDao> filteredModels=Collections2.filter(models,new Predicate<EntitlementEventModelDao>(){
        @Override public boolean apply(        @Nullable final EntitlementEventModelDao input){
          return input.getUserType() != ApiEventType.UNCANCEL;
        }
      }
);
      return new ArrayList<EntitlementEvent>(Collections2.transform(filteredModels,new Function<EntitlementEventModelDao,EntitlementEvent>(){
        @Override public EntitlementEvent apply(        @Nullable final EntitlementEventModelDao input){
          return EntitlementEventModelDao.toEntitlementEvent(input);
        }
      }
));
    }
  }
);
}
