{
  log.debug("OverdueStateApplicator:clear : time = " + clock.getUTCNow() + ", previousState = "+ previousOverdueState.getName());
  storeNewState(account,clearState,context);
  clearFutureNotification(account,context);
  try {
    avoid_extra_credit_by_toggling_AUTO_INVOICE_OFF(account,previousOverdueState,clearState,context);
  }
 catch (  final OverdueApiException e) {
    throw new OverdueException(e);
  }
  final OverdueChangeInternalEvent event;
  try {
    event=createOverdueEvent(account,previousOverdueState.getName(),clearState.getName(),isBlockBillingTransition(previousOverdueState,clearState),isUnblockBillingTransition(previousOverdueState,clearState),context);
  }
 catch (  final BlockingApiException e) {
    log.warn("Failed to create OverdueChangeInternalEvent for accountId='{}'",account.getId(),e);
    return;
  }
  try {
    bus.post(event);
  }
 catch (  final Exception e) {
    log.warn("Failed to post event {}",event,e);
  }
}
