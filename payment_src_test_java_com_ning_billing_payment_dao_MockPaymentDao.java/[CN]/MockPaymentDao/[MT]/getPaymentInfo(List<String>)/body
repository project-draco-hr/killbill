{
  List<PaymentAttempt> attempts=getPaymentAttemptsForInvoiceIds(invoiceIds);
  List<PaymentInfo> paymentsToReturn=new ArrayList<PaymentInfo>(invoiceIds.size());
  for (  final PaymentAttempt attempt : attempts) {
    paymentsToReturn.addAll(Collections2.filter(payments.values(),new Predicate<PaymentInfo>(){
      @Override public boolean apply(      PaymentInfo input){
        return input.getPaymentId().equals(attempt.getPaymentId());
      }
    }
));
  }
  return paymentsToReturn;
}
