{
  final Invoice invoice=new MockInvoice(account.getId(),clock.getUTCToday(),targetDate,currency);
  for (  final InvoiceItem item : items) {
    if (item instanceof MockRecurringInvoiceItem) {
      final MockRecurringInvoiceItem recurringInvoiceItem=(MockRecurringInvoiceItem)item;
      invoice.addInvoiceItem(new MockRecurringInvoiceItem(invoice.getId(),account.getId(),recurringInvoiceItem.getBundleId(),recurringInvoiceItem.getSubscriptionId(),recurringInvoiceItem.getPlanName(),recurringInvoiceItem.getPhaseName(),null,recurringInvoiceItem.getStartDate(),recurringInvoiceItem.getEndDate(),recurringInvoiceItem.getAmount(),recurringInvoiceItem.getRate(),recurringInvoiceItem.getCurrency()));
    }
  }
  Mockito.when(invoiceApi.getInvoiceById(Mockito.eq(invoice.getId()),Mockito.<InternalTenantContext>any())).thenReturn(invoice);
  final InvoiceCreationInternalEvent event=new MockInvoiceCreationEvent(invoice.getId(),invoice.getAccountId(),invoice.getBalance(),invoice.getCurrency(),invoice.getInvoiceDate(),1L,2L,null);
  eventBus.post(event);
  return invoice;
}
