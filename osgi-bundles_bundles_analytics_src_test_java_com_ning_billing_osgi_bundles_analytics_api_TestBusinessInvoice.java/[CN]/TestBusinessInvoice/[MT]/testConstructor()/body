{
  final BusinessInvoiceModelDao invoiceModelDao=new BusinessInvoiceModelDao(account,invoice,auditLog);
  final BusinessInvoiceItemBaseModelDao invoiceItemBaseModelDao=BusinessInvoiceItemBaseModelDao.create(account,invoice,invoiceItem,bundle,plan,phase,auditLog);
  final BusinessInvoice businessInvoice=new BusinessInvoice(invoiceModelDao,ImmutableList.<BusinessInvoiceItemBaseModelDao>of(invoiceItemBaseModelDao));
  verifyBusinessEntityBase(businessInvoice);
  Assert.assertEquals(businessInvoice.getInvoiceId(),invoiceModelDao.getInvoiceId());
  Assert.assertEquals(businessInvoice.getInvoiceNumber(),invoiceModelDao.getInvoiceNumber());
  Assert.assertEquals(businessInvoice.getInvoiceDate(),invoiceModelDao.getInvoiceDate());
  Assert.assertEquals(businessInvoice.getTargetDate(),invoiceModelDao.getTargetDate());
  Assert.assertEquals(businessInvoice.getCurrency(),invoiceModelDao.getCurrency());
  Assert.assertEquals(businessInvoice.getBalance(),invoiceModelDao.getBalance());
  Assert.assertEquals(businessInvoice.getAmountPaid(),invoiceModelDao.getAmountPaid());
  Assert.assertEquals(businessInvoice.getAmountCharged(),invoiceModelDao.getAmountCharged());
  Assert.assertEquals(businessInvoice.getOriginalAmountCharged(),invoiceModelDao.getOriginalAmountCharged());
  Assert.assertEquals(businessInvoice.getAmountCredited(),invoiceModelDao.getAmountCredited());
  Assert.assertEquals(businessInvoice.getInvoiceItems().size(),1);
  final BusinessInvoiceItem businessInvoiceItem=businessInvoice.getInvoiceItems().get(0);
  verifyBusinessEntityBase(businessInvoiceItem);
  Assert.assertEquals(businessInvoiceItem.getItemId(),invoiceItemBaseModelDao.getItemId());
  Assert.assertEquals(businessInvoiceItem.getInvoiceId(),invoiceItemBaseModelDao.getInvoiceId());
  Assert.assertEquals(businessInvoiceItem.getInvoiceNumber(),invoiceItemBaseModelDao.getInvoiceNumber());
  Assert.assertEquals(businessInvoiceItem.getInvoiceCreatedDate(),invoiceItemBaseModelDao.getInvoiceCreatedDate());
  Assert.assertEquals(businessInvoiceItem.getInvoiceDate(),invoiceItemBaseModelDao.getInvoiceDate());
  Assert.assertEquals(businessInvoiceItem.getInvoiceTargetDate(),invoiceItemBaseModelDao.getInvoiceTargetDate());
  Assert.assertEquals(businessInvoiceItem.getInvoiceCurrency(),invoiceItemBaseModelDao.getInvoiceCurrency());
  Assert.assertEquals(businessInvoiceItem.getInvoiceBalance(),invoiceItemBaseModelDao.getInvoiceBalance());
  Assert.assertEquals(businessInvoiceItem.getInvoiceAmountPaid(),invoiceItemBaseModelDao.getInvoiceAmountPaid());
  Assert.assertEquals(businessInvoiceItem.getInvoiceAmountCharged(),invoiceItemBaseModelDao.getInvoiceAmountCharged());
  Assert.assertEquals(businessInvoiceItem.getInvoiceOriginalAmountCharged(),invoiceItemBaseModelDao.getInvoiceOriginalAmountCharged());
  Assert.assertEquals(businessInvoiceItem.getInvoiceAmountCredited(),invoiceItemBaseModelDao.getInvoiceAmountCredited());
  Assert.assertEquals(businessInvoiceItem.getItemType(),invoiceItemBaseModelDao.getItemType());
  Assert.assertEquals(businessInvoiceItem.getRecognizable(),invoiceItemBaseModelDao.getRevenueRecognizable());
  Assert.assertEquals(businessInvoiceItem.getBundleExternalKey(),invoiceItemBaseModelDao.getBundleExternalKey());
  Assert.assertEquals(businessInvoiceItem.getProductName(),invoiceItemBaseModelDao.getProductName());
  Assert.assertEquals(businessInvoiceItem.getProductType(),invoiceItemBaseModelDao.getProductType());
  Assert.assertEquals(businessInvoiceItem.getProductCategory(),invoiceItemBaseModelDao.getProductCategory());
  Assert.assertEquals(businessInvoiceItem.getSlug(),invoiceItemBaseModelDao.getSlug());
  Assert.assertEquals(businessInvoiceItem.getPhase(),invoiceItemBaseModelDao.getPhase());
  Assert.assertEquals(businessInvoiceItem.getBillingPeriod(),invoiceItemBaseModelDao.getBillingPeriod());
  Assert.assertEquals(businessInvoiceItem.getStartDate(),invoiceItemBaseModelDao.getStartDate());
  Assert.assertEquals(businessInvoiceItem.getEndDate(),invoiceItemBaseModelDao.getEndDate());
  Assert.assertEquals(businessInvoiceItem.getAmount(),invoiceItemBaseModelDao.getAmount());
  Assert.assertEquals(businessInvoiceItem.getCurrency(),invoiceItemBaseModelDao.getCurrency());
  Assert.assertEquals(businessInvoiceItem.getLinkedItemId(),invoiceItemBaseModelDao.getLinkedItemId());
}
