{
  verifyNonNullOrEmpty(json,"InvoiceItemJson body should be specified");
  verifyNonNullOrEmpty(json.getAccountId(),"InvoiceItemJson accountId needs to be set",json.getInvoiceItemId(),"InvoiceItemJson invoiceItemId needs to be set");
  final CallContext callContext=context.createContext(createdBy,reason,comment,request);
  final UUID accountId=UUID.fromString(json.getAccountId());
  final LocalDate requestedDate=toLocalDate(accountId,requestedDateTimeString,callContext);
  final InvoiceItem adjustmentItem;
  if (json.getAmount() == null) {
    adjustmentItem=invoiceApi.insertInvoiceItemAdjustment(accountId,UUID.fromString(invoiceId),UUID.fromString(json.getInvoiceItemId()),requestedDate,callContext);
  }
 else {
    adjustmentItem=invoiceApi.insertInvoiceItemAdjustment(accountId,UUID.fromString(invoiceId),UUID.fromString(json.getInvoiceItemId()),requestedDate,json.getAmount(),json.getCurrency(),callContext);
  }
  return uriBuilder.buildResponse(uriInfo,InvoiceResource.class,"getInvoice",adjustmentItem.getInvoiceId(),jaxrsConfig.getJaxrsReturnPathLikeUrl());
}
