{
  final TenantContext tenantContext=context.createContext(request);
  final Invoice invoice=invoiceApi.getInvoice(UUID.fromString(invoiceId),tenantContext);
  final List<DirectPayment> payments=new ArrayList<DirectPayment>();
  for (  InvoicePayment cur : invoice.getPayments()) {
    final DirectPayment payment=paymentApi.getPayment(cur.getId(),withPluginInfo,ImmutableList.<PluginProperty>of(),tenantContext);
    payments.add(payment);
  }
  final List<PaymentJson> result=new ArrayList<PaymentJson>(payments.size());
  if (payments.isEmpty()) {
    return Response.status(Status.OK).entity(result).build();
  }
  final AccountAuditLogsForObjectType auditLogsForPayments=auditUserApi.getAccountAuditLogs(payments.get(0).getAccountId(),ObjectType.PAYMENT,auditMode.getLevel(),tenantContext);
  for (  final DirectPayment cur : payments) {
    result.add(new PaymentJson(cur,auditLogsForPayments.getAuditLogs(cur.getId())));
  }
  return Response.status(Status.OK).entity(result).build();
}
