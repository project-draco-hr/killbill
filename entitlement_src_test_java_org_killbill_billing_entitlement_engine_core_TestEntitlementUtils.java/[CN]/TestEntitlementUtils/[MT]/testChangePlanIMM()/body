{
  final DateTime changeDateTime=clock.getUTCNow();
  final LocalDate changeDate=clock.getUTCToday();
  testListener.pushExpectedEvents(NextEvent.CHANGE,NextEvent.CANCEL,NextEvent.BLOCK);
  final DefaultEntitlement changedBaseEntitlement=(DefaultEntitlement)baseEntitlement.changePlan("Assault-Rifle",BillingPeriod.MONTHLY,PriceListSet.DEFAULT_PRICELIST_NAME,callContext);
  assertListenerStatus();
  final DefaultEntitlement cancelledAddOnEntitlement=(DefaultEntitlement)entitlementApi.getEntitlementForId(addOnEntitlement.getId(),callContext);
  checkFutureBlockingStatesToCancel(changedBaseEntitlement,null,null);
  checkFutureBlockingStatesToCancel(cancelledAddOnEntitlement,null,null);
  checkFutureBlockingStatesToCancel(changedBaseEntitlement,cancelledAddOnEntitlement,null);
  checkActualBlockingStatesToCancel(changedBaseEntitlement,cancelledAddOnEntitlement,changeDateTime,true);
  checkBlockingStatesDAO(changedBaseEntitlement,cancelledAddOnEntitlement,changeDate,false);
  clock.addDays(30);
  assertListenerStatus();
  checkFutureBlockingStatesToCancel(changedBaseEntitlement,null,null);
  checkFutureBlockingStatesToCancel(cancelledAddOnEntitlement,null,null);
  checkFutureBlockingStatesToCancel(changedBaseEntitlement,cancelledAddOnEntitlement,null);
  checkActualBlockingStatesToCancel(changedBaseEntitlement,cancelledAddOnEntitlement,changeDateTime,true);
  checkBlockingStatesDAO(changedBaseEntitlement,cancelledAddOnEntitlement,changeDate,false);
}
