{
  final DefaultEntitlement cancelledBaseEntitlement=(DefaultEntitlement)baseEntitlement.cancelEntitlementWithPolicyOverrideBillingPolicy(EntitlementActionPolicy.END_OF_TERM,BillingActionPolicy.END_OF_TERM,ImmutableList.<PluginProperty>of(),callContext);
  assertListenerStatus();
  testListener.pushExpectedEvents(NextEvent.CANCEL,NextEvent.BLOCK);
  final DefaultEntitlement cancelledAddOnEntitlement=(DefaultEntitlement)addOnEntitlement.cancelEntitlementWithPolicyOverrideBillingPolicy(EntitlementActionPolicy.IMMEDIATE,BillingActionPolicy.IMMEDIATE,ImmutableList.<PluginProperty>of(),callContext);
  assertListenerStatus();
  checkBlockingStatesDAO(cancelledBaseEntitlement,cancelledAddOnEntitlement,baseEffectiveCancellationOrChangeDate,clock.getUTCToday(),true);
}
