{
  final AccountJson accountJson=createAccountNoPMBundleAndSubscriptionAndWaitForFirstInvoice();
  final List<InvoiceJsonWithItems> invoices=getInvoicesWithItemsForAccount(accountJson.getAccountId());
  assertEquals(invoices.size(),2);
  final InvoiceJsonWithItems invoice=invoices.get(1);
  assertEquals(invoice.getAmount().compareTo(BigDecimal.ZERO),1);
  final InvoiceItemJsonSimple invoiceItem=invoice.getItems().get(0);
  assertEquals(invoiceItem.getAmount().compareTo(BigDecimal.ZERO),1);
  adjustInvoiceItem(accountJson.getAccountId(),invoice.getInvoiceId(),invoiceItem.getInvoiceItemId(),null,null,null);
  final InvoiceJsonWithItems adjustedInvoice=getInvoiceWithItemsWithAudits(invoice.getInvoiceId(),AuditLevel.FULL);
  assertEquals(adjustedInvoice.getAmount().compareTo(BigDecimal.ZERO),0);
  Assert.assertEquals(adjustedInvoice.getAuditLogs().size(),1);
  final AuditLogJson invoiceAuditLogJson=adjustedInvoice.getAuditLogs().get(0);
  Assert.assertEquals(invoiceAuditLogJson.getChangeType(),"INSERT");
  Assert.assertEquals(invoiceAuditLogJson.getChangedBy(),"SubscriptionBaseTransition");
  Assert.assertNotNull(invoiceAuditLogJson.getChangeDate());
  Assert.assertNotNull(invoiceAuditLogJson.getUserToken());
  Assert.assertNull(invoiceAuditLogJson.getReasonCode());
  Assert.assertNull(invoiceAuditLogJson.getComments());
  Assert.assertEquals(adjustedInvoice.getItems().size(),2);
  Assert.assertEquals(adjustedInvoice.getItems().get(0).getAuditLogs().size(),1);
  final AuditLogJson itemAuditLogJson=adjustedInvoice.getItems().get(0).getAuditLogs().get(0);
  Assert.assertEquals(itemAuditLogJson.getChangeType(),"INSERT");
  Assert.assertEquals(itemAuditLogJson.getChangedBy(),"SubscriptionBaseTransition");
  Assert.assertNotNull(itemAuditLogJson.getChangeDate());
  Assert.assertNotNull(itemAuditLogJson.getUserToken());
  Assert.assertNull(itemAuditLogJson.getReasonCode());
  Assert.assertNull(itemAuditLogJson.getComments());
  Assert.assertEquals(adjustedInvoice.getItems().get(1).getAuditLogs().size(),1);
  final AuditLogJson adjustedItemAuditLogJson=adjustedInvoice.getItems().get(1).getAuditLogs().get(0);
  Assert.assertEquals(adjustedItemAuditLogJson.getChangeType(),"INSERT");
  Assert.assertEquals(adjustedItemAuditLogJson.getChangedBy(),createdBy);
  Assert.assertEquals(adjustedItemAuditLogJson.getReasonCode(),reason);
  Assert.assertEquals(adjustedItemAuditLogJson.getComments(),comment);
  Assert.assertNotNull(adjustedItemAuditLogJson.getChangeDate());
  Assert.assertNotNull(adjustedItemAuditLogJson.getUserToken());
}
