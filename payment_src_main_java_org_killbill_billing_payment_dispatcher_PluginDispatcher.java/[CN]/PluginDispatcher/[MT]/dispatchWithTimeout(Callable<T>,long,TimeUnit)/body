{
  try {
    final Future<T> future=executor.submit(task);
    return future.get(timeout,unit);
  }
 catch (  final ExecutionException e) {
    if (e.getCause() instanceof PaymentApiException) {
      throw (PaymentApiException)e.getCause();
    }
 else {
      throw new PaymentApiException(ErrorCode.PAYMENT_INTERNAL_ERROR,e.getMessage());
    }
  }
catch (  final InterruptedException e) {
    Thread.currentThread().interrupt();
    throw new PaymentApiException(ErrorCode.PAYMENT_INTERNAL_ERROR,e.getMessage());
  }
}
