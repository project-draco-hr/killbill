{
  final ServerModuleBuilder builder=new ServerModuleBuilder().addConfig(KillbillServerConfig.class).addHealthCheck(KillbillHealthcheck.class).addJMXExport(KillbillHealthcheck.class).addModule(getModule()).addJerseyResource("com.ning.billing.jaxrs.resources");
  guiceModule=builder.build();
  super.contextInitialized(event);
  logger.info("KillbillLifecycleListener : contextInitialized");
  final Injector theInjector=injector(event);
  killbillLifecycle=theInjector.getInstance(DefaultLifecycle.class);
  killbillBusService=theInjector.getInstance(BusService.class);
  killbilleventHandler=theInjector.getInstance(KillbillEventHandler.class);
  killbillLifecycle.fireStartupSequencePriorEventRegistration();
  try {
    killbillBusService.getBus().register(killbilleventHandler);
  }
 catch (  Bus.EventBusException e) {
    logger.error("Failed to register for event notifications, this is bad exiting!",e);
    System.exit(1);
  }
  killbillLifecycle.fireStartupSequencePostEventRegistration();
}
