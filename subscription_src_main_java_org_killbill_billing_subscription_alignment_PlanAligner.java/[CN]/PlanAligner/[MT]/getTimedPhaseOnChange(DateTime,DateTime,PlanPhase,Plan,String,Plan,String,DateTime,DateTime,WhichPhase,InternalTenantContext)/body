{
  final Catalog catalog=catalogService.getFullCatalog(context);
  final ProductCategory currentCategory=currentPlan.getProduct().getCategory();
  final PlanPhaseSpecifier fromPlanPhaseSpecifier=new PlanPhaseSpecifier(currentPlan.getProduct().getName(),currentCategory,currentPlan.getRecurringBillingPeriod(),currentPriceList,currentPhase.getPhaseType());
  final PlanSpecifier toPlanSpecifier=new PlanSpecifier(nextPlan.getProduct().getName(),nextPlan.getProduct().getCategory(),nextPlan.getRecurringBillingPeriod(),priceList);
  final DateTime planStartDate;
  final PlanAlignmentChange alignment=catalog.planChangeAlignment(fromPlanPhaseSpecifier,toPlanSpecifier,effectiveDate);
switch (alignment) {
case START_OF_SUBSCRIPTION:
    planStartDate=subscriptionStartDate;
  break;
case START_OF_BUNDLE:
planStartDate=bundleStartDate;
break;
case CHANGE_OF_PLAN:
planStartDate=lastOrCurrentChangeEffectiveDate;
break;
case CHANGE_OF_PRICELIST:
throw new SubscriptionBaseError(String.format("Not implemented yet %s",alignment));
default :
throw new SubscriptionBaseError(String.format("Unknown PlanAlignmentChange %s",alignment));
}
final List<TimedPhase> timedPhases=getPhaseAlignments(nextPlan,null,planStartDate);
return getTimedPhase(timedPhases,effectiveDate,which);
}
