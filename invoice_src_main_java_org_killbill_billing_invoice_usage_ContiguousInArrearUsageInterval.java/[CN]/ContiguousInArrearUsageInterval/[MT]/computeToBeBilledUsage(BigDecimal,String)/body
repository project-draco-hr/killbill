{
  BigDecimal result=BigDecimal.ZERO;
  final List<TieredBlock> tieredBlocks=getTieredBlocks(usage,unitType);
  int remainingUnits=nbUnits.intValue();
  for (  TieredBlock tieredBlock : tieredBlocks) {
    final int blockTierSize=tieredBlock.getSize().intValue();
    final int tmp=remainingUnits / blockTierSize + (remainingUnits % blockTierSize == 0 ? 0 : 1);
    final int nbUsedTierBlocks;
    if (tmp > tieredBlock.getMax()) {
      nbUsedTierBlocks=tieredBlock.getMax().intValue();
      remainingUnits-=tieredBlock.getMax() * blockTierSize;
    }
 else {
      nbUsedTierBlocks=tmp;
      remainingUnits=0;
    }
    result.add(tieredBlock.getPrice().getPrice(getCurrency()).multiply(new BigDecimal(nbUsedTierBlocks)));
  }
  return result;
}
