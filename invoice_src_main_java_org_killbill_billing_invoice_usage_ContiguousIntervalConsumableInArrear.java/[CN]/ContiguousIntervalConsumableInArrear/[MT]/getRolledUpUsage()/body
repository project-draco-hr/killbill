{
  if (transitionTimes.size() <= 1) {
    return Collections.emptyList();
  }
  final Iterable<DateTime> transitions=Iterables.transform(transitionTimes,new Function<LocalDate,DateTime>(){
    @Override public DateTime apply(    final LocalDate input){
      return localDateToEndOfDayInAccountTimezone(input,getAccountTimeZone());
    }
  }
);
  return usageApi.getAllUsageForSubscription(getSubscriptionId(),unitTypes,ImmutableList.copyOf(transitions),context);
}
