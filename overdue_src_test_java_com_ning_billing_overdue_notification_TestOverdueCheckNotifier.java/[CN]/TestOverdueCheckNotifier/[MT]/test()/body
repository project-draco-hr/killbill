{
  final UUID subscriptionId=new UUID(0L,1L);
  final Blockable blockable=Mockito.mock(Subscription.class);
  Mockito.when(blockable.getId()).thenReturn(subscriptionId);
  final DateTime now=new DateTime();
  final DateTime readyTime=now.plusMillis(2000);
  final OverdueCheckPoster poster=new DefaultOverdueCheckPoster(notificationQueueService);
  poster.insertOverdueCheckNotification(blockable,readyTime);
  ((ClockMock)clock).setDeltaFromReality(3000);
  await().atMost(1,MINUTES).until(new Callable<Boolean>(){
    @Override public Boolean call() throws Exception {
      return listener.getEventCount() == 1;
    }
  }
);
  Assert.assertEquals(listener.getEventCount(),1);
  Assert.assertEquals(listener.getLatestSubscriptionId(),subscriptionId);
}
