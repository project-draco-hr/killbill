{
  final Account account=createTestAccount();
  accountDao.create(account,context);
  final MutableAccountData mutableAccountData=new DefaultMutableAccountData(null,null,null,0,null,null,null,null,null,null,null,null,null,null,null,null,null,null,false,false);
  final String newAddress1=UUID.randomUUID().toString();
  mutableAccountData.setAddress1(newAddress1);
  final DefaultAccount newAccount=new DefaultAccount(account.getId(),mutableAccountData);
  accountDao.update(newAccount,context);
  Assert.assertEquals(accountDao.getById(account.getId()).getAddress1(),newAddress1);
  Assert.assertEquals(accountDao.getById(account.getId()).getAddress2(),account.getAddress2());
  Assert.assertEquals(accountDao.getById(account.getId()).getCurrency(),account.getCurrency());
  Assert.assertEquals(accountDao.getById(account.getId()).getExternalKey(),account.getExternalKey());
  Assert.assertEquals(accountDao.getById(account.getId()).getBillCycleDay(),account.getBillCycleDay());
}
