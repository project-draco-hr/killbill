{
  final UUID accountId=UUID.randomUUID();
  final DefaultAccount account=new DefaultAccount(accountId,"extKey123456","myemail123456@glam.com","John Smith",4,Currency.USD,new DefaultBillCycleDay(15),null,DateTimeZone.forID("America/Cambridge_Bay"),"EN-CA",null,null,null,null,null,null,null,null,false,false);
  accountDao.create(account,context);
  final String address1="123 address 1";
  final String address2="456 address 2";
  final String companyName="Some Company";
  final String city="Cambridge Bay";
  final String stateOrProvince="Nunavut";
  final String country="Canada";
  final String postalCode="X0B 0C0";
  final String phone="18001112222";
  final DefaultAccount updatedAccount=new DefaultAccount(accountId,"extKey123456","myemail123456@glam.com","John Smith",4,Currency.USD,new DefaultBillCycleDay(15),null,DateTimeZone.forID("America/Cambridge_Bay"),"EN-CA",address1,address2,companyName,city,stateOrProvince,country,postalCode,phone,false,false);
  accountDao.update(updatedAccount,context);
  final Account savedAccount=accountDao.getById(accountId);
  assertNotNull(savedAccount);
  assertEquals(savedAccount.getId(),accountId);
  assertEquals(savedAccount.getAddress1(),address1);
  assertEquals(savedAccount.getAddress2(),address2);
  assertEquals(savedAccount.getCompanyName(),companyName);
  assertEquals(savedAccount.getCity(),city);
  assertEquals(savedAccount.getStateOrProvince(),stateOrProvince);
  assertEquals(savedAccount.getCity(),city);
  assertEquals(savedAccount.getPostalCode(),postalCode);
  assertEquals(savedAccount.getPhone(),phone);
}
