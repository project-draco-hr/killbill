{
  final UUID accountId=UUID.randomUUID();
  final AccountEmail email=new DefaultAccountEmail(accountId,"test@gmail.com");
  Assert.assertEquals(accountEmailDao.getByAccountId(accountId,internalCallContext).size(),0);
  final AccountEmailModelDao accountEmailModelDao=new AccountEmailModelDao(email);
  accountEmailDao.create(accountEmailModelDao,internalCallContext);
  Assert.assertEquals(accountEmailDao.getByAccountId(accountId,internalCallContext).size(),1);
  try {
    accountEmailDao.create(accountEmailModelDao,internalCallContext);
    Assert.fail();
  }
 catch (  TransactionFailedException e) {
    Assert.assertTrue(e.getCause() instanceof AccountApiException);
    Assert.assertEquals(((AccountApiException)e.getCause()).getCode(),ErrorCode.ACCOUNT_EMAIL_ALREADY_EXISTS.getCode());
  }
}
