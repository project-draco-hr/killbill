{
  final String productName="Shotgun";
  final BillingPeriod term=BillingPeriod.MONTHLY;
  final String planSetName=PriceListSet.DEFAULT_PRICELIST_NAME;
  final PlanPhaseSpecifier phaseSpecifier=new PlanPhaseSpecifier(productName,ProductCategory.BASE,term,planSetName,null);
  final Subscription subscription=entitlementUserApi.createSubscription(bundle.getId(),phaseSpecifier,null,callContext);
  subscriptionPlan=subscription.getCurrentPlan();
  waitALittle();
  verifyBSTWithTrialAndEvergreenPhases(account,bundle,subscription);
  final BusinessAccount businessAccount=analyticsUserApi.getAccountByKey(account.getExternalKey(),callContext);
  Assert.assertEquals(businessAccount.getBalance().doubleValue(),Rounder.round(BigDecimal.ZERO));
  Assert.assertEquals(businessAccount.getTotalInvoiceBalance().doubleValue(),Rounder.round(BigDecimal.ZERO));
  final List<BusinessInvoice> invoices=analyticsUserApi.getInvoicesForAccount(account.getExternalKey(),callContext);
  Assert.assertEquals(invoices.size(),1);
  final BusinessInvoice invoice=invoices.get(0);
  Assert.assertEquals(invoice.getBalance().doubleValue(),0.0);
  Assert.assertEquals(invoice.getAmountCharged().doubleValue(),0.0);
  Assert.assertEquals(invoice.getAmountCredited().doubleValue(),0.0);
  Assert.assertEquals(invoice.getAmountPaid().doubleValue(),0.0);
  Assert.assertEquals(invoice.getCurrency(),account.getCurrency());
  final List<BusinessInvoiceItem> invoiceItems=analyticsUserApi.getInvoiceItemsForInvoice(invoice.getInvoiceId(),callContext);
  Assert.assertEquals(invoiceItems.size(),1);
  final BusinessInvoiceItem invoiceItem=invoiceItems.get(0);
  Assert.assertEquals(invoiceItem.getAmount().doubleValue(),0.0);
  Assert.assertEquals(invoiceItem.getBillingPeriod(),subscription.getCurrentPhase().getBillingPeriod().toString());
  Assert.assertEquals(invoiceItem.getCurrency(),account.getCurrency());
  Assert.assertEquals(invoiceItem.getEndDate(),invoiceItem.getStartDate().plusDays(30));
  Assert.assertEquals(invoiceItem.getExternalKey(),bundle.getKey());
  Assert.assertEquals(invoiceItem.getInvoiceId(),invoice.getInvoiceId());
  Assert.assertEquals(invoiceItem.getItemType(),"FIXED");
  Assert.assertEquals(invoiceItem.getPhase(),subscription.getCurrentPhase().getPhaseType().toString());
  Assert.assertEquals(invoiceItem.getProductCategory(),subscription.getCurrentPlan().getProduct().getCategory().toString());
  Assert.assertEquals(invoiceItem.getProductName(),subscription.getCurrentPlan().getProduct().getName());
  Assert.assertEquals(invoiceItem.getProductType(),subscription.getCurrentPlan().getProduct().getCatalogName());
  Assert.assertEquals(invoiceItem.getSlug(),subscription.getCurrentPhase().getName());
  final DateTime subscriptionStartDate=subscription.getStartDate();
  Assert.assertEquals(invoiceItem.getStartDate(),new LocalDate(subscriptionStartDate.getYear(),subscriptionStartDate.getMonthOfYear(),subscriptionStartDate.getDayOfMonth()));
  return subscription;
}
