{
  final Product currentProduct=subscriptionPlan.getProduct();
  final List<BusinessSubscriptionTransition> transitions=analyticsUserApi.getTransitionsForBundle(bundle.getExternalKey(),callContext);
  final BusinessSubscriptionTransition initialTransition=transitions.get(0);
  Assert.assertEquals(initialTransition.getBundleId(),bundle.getId());
  Assert.assertEquals(initialTransition.getExternalKey(),bundle.getExternalKey());
  Assert.assertEquals(initialTransition.getAccountId(),account.getId());
  Assert.assertEquals(initialTransition.getAccountKey(),account.getExternalKey());
  Assert.assertEquals(initialTransition.getSubscriptionId(),subscription.getId());
  Assert.assertEquals(initialTransition.getCategory(),currentProduct.getCategory().toString());
  Assert.assertEquals(initialTransition.getEventType(),BusinessSubscriptionEvent.EventType.ADD.toString());
  Assert.assertNull(initialTransition.getPrevSlug());
  Assert.assertEquals(initialTransition.getNextBillingPeriod(),BillingPeriod.NO_BILLING_PERIOD.toString());
  Assert.assertEquals(initialTransition.getNextCurrency(),account.getCurrency().toString());
  Assert.assertEquals(initialTransition.getNextPhase(),PhaseType.TRIAL.toString());
  Assert.assertEquals(initialTransition.getNextPrice().doubleValue(),(double)0);
  Assert.assertEquals(initialTransition.getNextPriceList(),subscription.getCurrentPriceList().getName());
  Assert.assertEquals(initialTransition.getNextProductCategory(),currentProduct.getCategory().toString());
  Assert.assertEquals(initialTransition.getNextProductName(),currentProduct.getName());
  Assert.assertEquals(initialTransition.getNextProductType(),currentProduct.getCatalogName());
  Assert.assertEquals(initialTransition.getNextSlug(),currentProduct.getName().toLowerCase() + "-monthly-trial");
  Assert.assertEquals(initialTransition.getNextStartDate(),subscription.getStartDate());
  Assert.assertEquals(initialTransition.getNextState(),Subscription.SubscriptionState.ACTIVE.toString());
  final BusinessSubscriptionTransition futureTransition=transitions.get(1);
  Assert.assertEquals(futureTransition.getExternalKey(),bundle.getExternalKey());
  Assert.assertEquals(futureTransition.getAccountKey(),account.getExternalKey());
  Assert.assertEquals(futureTransition.getCategory(),currentProduct.getCategory().toString());
  Assert.assertEquals(futureTransition.getEventType(),BusinessSubscriptionEvent.EventType.SYSTEM_CHANGE.toString());
  Assert.assertEquals(futureTransition.getNextBillingPeriod(),BillingPeriod.MONTHLY.toString());
  Assert.assertEquals(initialTransition.getNextCurrency(),account.getCurrency().toString());
  Assert.assertEquals(futureTransition.getNextPhase(),PhaseType.EVERGREEN.toString());
  Assert.assertTrue(futureTransition.getNextPrice().doubleValue() > 0);
  Assert.assertEquals(futureTransition.getNextPriceList(),subscription.getCurrentPriceList().getName());
  Assert.assertEquals(futureTransition.getNextProductCategory(),currentProduct.getCategory().toString());
  Assert.assertEquals(futureTransition.getNextProductName(),currentProduct.getName());
  Assert.assertEquals(futureTransition.getNextProductType(),currentProduct.getCatalogName());
  Assert.assertEquals(futureTransition.getNextSlug(),currentProduct.getName().toLowerCase() + "-monthly-evergreen");
  Assert.assertEquals(futureTransition.getNextStartDate(),subscription.getStartDate().plusDays(30));
  Assert.assertEquals(futureTransition.getNextState(),Subscription.SubscriptionState.ACTIVE.toString());
}
