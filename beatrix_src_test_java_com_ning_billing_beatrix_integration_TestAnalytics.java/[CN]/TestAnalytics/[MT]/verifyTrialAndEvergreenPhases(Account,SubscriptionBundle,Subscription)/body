{
  final Product currentProduct=subscriptionPlan.getProduct();
  final List<BusinessSubscriptionTransitionModelDao> transitions=analyticsUserApi.getTransitionsForBundle(bundle.getKey(),callContext);
  final BusinessSubscriptionTransitionModelDao initialTransition=transitions.get(0);
  Assert.assertEquals(initialTransition.getBundleId(),bundle.getId());
  Assert.assertEquals(initialTransition.getExternalKey(),bundle.getKey());
  Assert.assertEquals(initialTransition.getAccountId(),account.getId());
  Assert.assertEquals(initialTransition.getAccountKey(),account.getExternalKey());
  Assert.assertEquals(initialTransition.getSubscriptionId(),subscription.getId());
  Assert.assertEquals(initialTransition.getEvent().getCategory(),currentProduct.getCategory());
  Assert.assertEquals(initialTransition.getEvent().getEventType(),BusinessSubscriptionEvent.EventType.ADD);
  Assert.assertNull(initialTransition.getPreviousSubscription());
  Assert.assertEquals(initialTransition.getNextSubscription().getBillingPeriod(),BillingPeriod.NO_BILLING_PERIOD.toString());
  Assert.assertEquals(initialTransition.getNextSubscription().getCurrency(),account.getCurrency().toString());
  Assert.assertEquals(initialTransition.getNextSubscription().getPhase(),PhaseType.TRIAL.toString());
  Assert.assertEquals(initialTransition.getNextSubscription().getPrice().doubleValue(),(double)0);
  Assert.assertEquals(initialTransition.getNextSubscription().getPriceList(),subscription.getCurrentPriceList().getName());
  Assert.assertEquals(initialTransition.getNextSubscription().getProductCategory(),currentProduct.getCategory());
  Assert.assertEquals(initialTransition.getNextSubscription().getProductName(),currentProduct.getName());
  Assert.assertEquals(initialTransition.getNextSubscription().getProductType(),currentProduct.getCatalogName());
  Assert.assertEquals(initialTransition.getNextSubscription().getSlug(),currentProduct.getName().toLowerCase() + "-monthly-trial");
  Assert.assertEquals(initialTransition.getNextSubscription().getStartDate(),subscription.getStartDate());
  Assert.assertEquals(initialTransition.getNextSubscription().getState(),Subscription.SubscriptionState.ACTIVE);
  final BusinessSubscriptionTransitionModelDao futureTransition=transitions.get(1);
  Assert.assertEquals(futureTransition.getExternalKey(),bundle.getKey());
  Assert.assertEquals(futureTransition.getAccountKey(),account.getExternalKey());
  Assert.assertEquals(futureTransition.getEvent().getCategory(),currentProduct.getCategory());
  Assert.assertEquals(futureTransition.getEvent().getEventType(),BusinessSubscriptionEvent.EventType.SYSTEM_CHANGE);
  Assert.assertEquals(futureTransition.getPreviousSubscription(),initialTransition.getNextSubscription());
  Assert.assertEquals(futureTransition.getNextSubscription().getBillingPeriod(),BillingPeriod.MONTHLY.toString());
  Assert.assertEquals(initialTransition.getNextSubscription().getCurrency(),account.getCurrency().toString());
  Assert.assertEquals(futureTransition.getNextSubscription().getPhase(),PhaseType.EVERGREEN.toString());
  Assert.assertTrue(futureTransition.getNextSubscription().getPrice().doubleValue() > 0);
  Assert.assertEquals(futureTransition.getNextSubscription().getPriceList(),subscription.getCurrentPriceList().getName());
  Assert.assertEquals(futureTransition.getNextSubscription().getProductCategory(),currentProduct.getCategory());
  Assert.assertEquals(futureTransition.getNextSubscription().getProductName(),currentProduct.getName());
  Assert.assertEquals(futureTransition.getNextSubscription().getProductType(),currentProduct.getCatalogName());
  Assert.assertEquals(futureTransition.getNextSubscription().getSlug(),currentProduct.getName().toLowerCase() + "-monthly-evergreen");
  Assert.assertEquals(futureTransition.getNextSubscription().getStartDate(),subscription.getStartDate().plusDays(30));
  Assert.assertEquals(futureTransition.getNextSubscription().getState(),Subscription.SubscriptionState.ACTIVE);
}
