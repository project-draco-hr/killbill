{
  final MutableAccountData mutableAccountData=account.toMutableAccountData();
  mutableAccountData.setName(UUID.randomUUID().toString().substring(0,20));
  try {
    accountUserApi.updateAccount(account.getId(),mutableAccountData,context);
  }
 catch (  AccountApiException e) {
    Assert.fail("Unable to update account",e);
  }
  waitALittle();
  final BusinessAccount businessAccount=analyticsUserApi.getAccountByKey(mutableAccountData.getExternalKey());
  Assert.assertNotNull(businessAccount);
  Assert.assertEquals(businessAccount.getBalance().doubleValue(),Rounder.round(BigDecimal.ZERO));
  Assert.assertEquals(businessAccount.getKey(),mutableAccountData.getExternalKey());
  Assert.assertNull(businessAccount.getLastInvoiceDate());
  Assert.assertNull(businessAccount.getLastPaymentStatus());
  Assert.assertEquals(businessAccount.getName(),mutableAccountData.getName());
  Assert.assertEquals(businessAccount.getTotalInvoiceBalance().doubleValue(),Rounder.round(BigDecimal.ZERO));
  Assert.assertEquals(analyticsUserApi.getInvoicesForAccount(account.getExternalKey()).size(),0);
}
