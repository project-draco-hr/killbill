{
  Assert.assertEquals(directPayment.getAccountId(),account.getAccountId());
  Assert.assertNotNull(directPayment.getDirectPaymentId());
  Assert.assertNotNull(directPayment.getPaymentNumber());
  Assert.assertEquals(directPayment.getAuthAmount().compareTo(authAmount),0);
  Assert.assertEquals(directPayment.getCapturedAmount().compareTo(capturedAmount),0);
  Assert.assertEquals(directPayment.getRefundedAmount().compareTo(refundedAmount),0);
  Assert.assertEquals(directPayment.getCurrency(),account.getCurrency());
  Assert.assertEquals(directPayment.getPaymentMethodId(),account.getPaymentMethodId());
  Assert.assertEquals(directPayment.getTransactions().size(),nbTransactions);
  verifyDirectPaymentTransaction(directPayment.getDirectPaymentId(),directPayment.getTransactions().get(0),account,authAmount,"AUTHORIZE");
  final DirectPayments directPayments=killBillClient.getDirectPayments();
  Assert.assertEquals(directPayments.size(),1);
  Assert.assertEquals(directPayments.get(0),directPayment);
  final DirectPayment retrievedDirectPayment=killBillClient.getDirectPayment(directPayment.getDirectPaymentId());
  Assert.assertEquals(retrievedDirectPayment,directPayment);
  final DirectPayments directPaymentsForAccount=killBillClient.getDirectPaymentsForAccount(account.getAccountId());
  Assert.assertEquals(directPaymentsForAccount.size(),1);
  Assert.assertEquals(directPaymentsForAccount.get(0),directPayment);
}
