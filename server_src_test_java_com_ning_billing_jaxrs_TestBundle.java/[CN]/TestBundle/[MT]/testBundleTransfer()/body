{
  final DateTime initialDate=new DateTime(2012,4,25,0,3,42,0);
  clock.setDeltaFromReality(initialDate.getMillis() - clock.getUTCNow().getMillis());
  final AccountJson accountJson=createAccountWithDefaultPaymentMethod("src","src","src@yahoo.com");
  final String productName="Shotgun";
  final BillingPeriod term=BillingPeriod.MONTHLY;
  final SubscriptionJson entitlementJsonNoEvents=createEntitlement(accountJson.getAccountId(),"93199",productName,ProductCategory.BASE.toString(),term.toString(),true);
  Map<String,String> queryParams=new HashMap<String,String>();
  queryParams.put(JaxrsResource.QUERY_EXTERNAL_KEY,"93199");
  String uri=JaxrsResource.BUNDLES_PATH;
  Response response=doGet(uri,queryParams,DEFAULT_HTTP_TIMEOUT_SEC);
  Assert.assertEquals(response.getStatusCode(),Status.OK.getStatusCode());
  final BundleJson originalBundle=mapper.readValue(response.getResponseBody(),BundleJson.class);
  assertEquals(originalBundle.getAccountId(),accountJson.getAccountId());
  assertEquals(originalBundle.getExternalKey(),"93199");
  final AccountJson newAccount=createAccountWithDefaultPaymentMethod("dst","dst","dst@yahoo.com");
  final BundleJson newBundleInput=new BundleJson(null,newAccount.getAccountId(),null,null,null);
  final String newBundleInputJson=mapper.writeValueAsString(newBundleInput);
  uri=JaxrsResource.BUNDLES_PATH + "/" + entitlementJsonNoEvents.getBundleId();
  response=doPut(uri,newBundleInputJson,DEFAULT_EMPTY_QUERY,DEFAULT_HTTP_TIMEOUT_SEC);
  Assert.assertEquals(response.getStatusCode(),Status.CREATED.getStatusCode());
  final String locationCC=response.getHeader("Location");
  Assert.assertNotNull(locationCC);
  response=doGetWithUrl(locationCC,DEFAULT_EMPTY_QUERY,DEFAULT_HTTP_TIMEOUT_SEC);
  Assert.assertEquals(response.getStatusCode(),Status.OK.getStatusCode());
  queryParams=new HashMap<String,String>();
  queryParams.put(JaxrsResource.QUERY_EXTERNAL_KEY,"93199");
  uri=JaxrsResource.BUNDLES_PATH;
  response=doGet(uri,queryParams,DEFAULT_HTTP_TIMEOUT_SEC);
  Assert.assertEquals(response.getStatusCode(),Status.OK.getStatusCode());
  final BundleJson newBundle=mapper.readValue(response.getResponseBody(),BundleJson.class);
  assertNotEquals(newBundle.getBundleId(),originalBundle.getBundleId());
  assertEquals(newBundle.getExternalKey(),originalBundle.getExternalKey());
  assertEquals(newBundle.getAccountId(),newAccount.getAccountId());
}
