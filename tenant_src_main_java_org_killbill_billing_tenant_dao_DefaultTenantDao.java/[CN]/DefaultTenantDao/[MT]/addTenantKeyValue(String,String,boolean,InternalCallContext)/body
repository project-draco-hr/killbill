{
  transactionalSqlDao.execute(new EntitySqlDaoTransactionWrapper<Void>(){
    @Override public Void inTransaction(    final EntitySqlDaoWrapperFactory entitySqlDaoWrapperFactory) throws Exception {
      final TenantKVModelDao tenantKVModelDao=new TenantKVModelDao(UUID.randomUUID(),context.getCreatedDate(),context.getUpdatedDate(),key,value);
      final TenantKVSqlDao tenantKVSqlDao=entitySqlDaoWrapperFactory.become(TenantKVSqlDao.class);
      if (uniqueKey) {
        deleteFromTransaction(key,entitySqlDaoWrapperFactory,context);
      }
      tenantKVSqlDao.create(tenantKVModelDao,context);
      broadcastConfigurationChangeFromTransaction(key,entitySqlDaoWrapperFactory,context);
      return null;
    }
  }
);
}
