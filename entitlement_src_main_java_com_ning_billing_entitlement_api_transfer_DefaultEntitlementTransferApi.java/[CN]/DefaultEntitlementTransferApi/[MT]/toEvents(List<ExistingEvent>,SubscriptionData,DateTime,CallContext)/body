{
  try {
    final List<EntitlementEvent> result=new LinkedList<EntitlementEvent>();
    EntitlementEvent event=null;
    ExistingEvent prevEvent=null;
    boolean firstEvent=true;
    for (    ExistingEvent cur : existingEvents) {
      if (cur.getEffectiveDate().isBefore(transferDate)) {
        prevEvent=cur;
        continue;
      }
      if (prevEvent != null) {
        event=createEvent(firstEvent,prevEvent,subscription,transferDate,context);
        if (event != null) {
          result.add(event);
          firstEvent=false;
        }
        prevEvent=null;
      }
      event=createEvent(firstEvent,cur,subscription,transferDate,context);
      if (event != null) {
        result.add(event);
        firstEvent=false;
      }
    }
    if (prevEvent != null) {
      event=createEvent(firstEvent,prevEvent,subscription,transferDate,context);
      if (event != null) {
        result.add(event);
      }
      prevEvent=null;
    }
    return result;
  }
 catch (  CatalogApiException e) {
    throw new EntitlementTransferApiException(e);
  }
}
