{
  if ((existingInvoiceItems == null) || (existingInvoiceItems.size() == 0)) {
    return currentInvoiceItems;
  }
  InvoiceItemList currentItems=new InvoiceItemList();
  for (  final InvoiceItem item : currentInvoiceItems) {
    currentItems.add(new DefaultInvoiceItem(item,invoiceId));
  }
  InvoiceItemList existingItems=(InvoiceItemList)existingInvoiceItems.clone();
  Collections.sort(currentItems);
  Collections.sort(existingItems);
  for (  final InvoiceItem currentItem : currentItems) {
    Iterator<InvoiceItem> it=existingItems.iterator();
    while (it.hasNext()) {
      InvoiceItem existingItem=it.next();
      if (currentItem.duplicates(existingItem)) {
        currentItem.subtract(existingItem);
        it.remove();
      }
    }
  }
  existingItems.removeCancellingPairs();
  for (  final InvoiceItem existingItem : existingItems) {
    currentItems.add(existingItem.asCredit(existingItem.getInvoiceId()));
  }
  currentItems.cleanupDuplicatedItems();
  return currentItems;
}
