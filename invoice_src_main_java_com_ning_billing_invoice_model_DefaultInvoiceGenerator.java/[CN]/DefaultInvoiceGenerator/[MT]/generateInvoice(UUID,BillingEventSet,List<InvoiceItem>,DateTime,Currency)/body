{
  if ((events == null) || (events.size() == 0)) {
    return null;
  }
  Collections.sort(events);
  List<InvoiceItem> existingItems=new ArrayList<InvoiceItem>();
  if (items != null) {
    existingItems=new ArrayList<InvoiceItem>(items);
    Collections.sort(existingItems);
  }
  DefaultInvoice invoice=new DefaultInvoice(accountId,targetDate,targetCurrency);
  UUID invoiceId=invoice.getId();
  List<InvoiceItem> proposedItems=generateInvoiceItems(invoiceId,events,targetDate,targetCurrency);
  if (existingItems != null) {
    removeCancellingInvoiceItems(existingItems);
    removeDuplicatedInvoiceItems(proposedItems,existingItems);
    for (    InvoiceItem existingItem : existingItems) {
      if (existingItem instanceof RecurringInvoiceItem) {
        RecurringInvoiceItem recurringItem=(RecurringInvoiceItem)existingItem;
        proposedItems.add(recurringItem.asCredit());
      }
    }
  }
  if (proposedItems == null || proposedItems.size() == 0) {
    return null;
  }
 else {
    invoice.addInvoiceItems(proposedItems);
    return invoice;
  }
}
