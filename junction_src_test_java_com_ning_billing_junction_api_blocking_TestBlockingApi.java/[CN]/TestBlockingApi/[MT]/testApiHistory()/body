{
  UUID uuid=UUID.randomUUID();
  String overdueStateName="WayPassedItMan";
  String service="TEST";
  boolean blockChange=true;
  boolean blockEntitlement=false;
  boolean blockBilling=false;
  BlockingState state1=new DefaultBlockingState(uuid,overdueStateName,Blockable.Type.SUBSCRIPTION_BUNDLE,service,blockChange,blockEntitlement,blockBilling);
  api.setBlockingState(state1);
  clock.setDeltaFromReality(1000 * 3600 * 24);
  String overdueStateName2="NoReallyThisCantGoOn";
  BlockingState state2=new DefaultBlockingState(uuid,overdueStateName2,Blockable.Type.SUBSCRIPTION_BUNDLE,service,blockChange,blockEntitlement,blockBilling);
  api.setBlockingState(state2);
  SubscriptionBundle bundle=BrainDeadProxyFactory.createBrainDeadProxyFor(SubscriptionBundle.class);
  ((ZombieControl)bundle).addResult("getId",uuid);
  SortedSet<BlockingState> history1=api.getBlockingHistory(bundle);
  SortedSet<BlockingState> history2=api.getBlockingHistory(bundle.getId(),Blockable.Type.get(bundle));
  Assert.assertEquals(history1.size(),2);
  Assert.assertEquals(history1.first().getStateName(),overdueStateName);
  Assert.assertEquals(history1.last().getStateName(),overdueStateName2);
  Assert.assertEquals(history2.size(),2);
  Assert.assertEquals(history2.first().getStateName(),overdueStateName);
  Assert.assertEquals(history2.last().getStateName(),overdueStateName2);
}
