{
  final Map<UUID,List<AuditLog>> bundlesAuditLogs=new HashMap<UUID,List<AuditLog>>();
  final Map<UUID,List<AuditLog>> subscriptionsAuditLogs=new HashMap<UUID,List<AuditLog>>();
  final Map<UUID,List<AuditLog>> subscriptionEventsAuditLogs=new HashMap<UUID,List<AuditLog>>();
  for (  final BundleTimeline bundle : bundles) {
    bundlesAuditLogs.put(bundle.getId(),getAuditLogs(bundle.getId(),ObjectType.BUNDLE,auditLevel,context));
    for (    final SubscriptionTimeline subscriptionTimeline : bundle.getSubscriptions()) {
      subscriptionsAuditLogs.put(subscriptionTimeline.getId(),getAuditLogs(subscriptionTimeline.getId(),ObjectType.SUBSCRIPTION,auditLevel,context));
      for (      final ExistingEvent event : subscriptionTimeline.getExistingEvents()) {
        subscriptionEventsAuditLogs.put(event.getEventId(),getAuditLogs(event.getEventId(),ObjectType.SUBSCRIPTION_EVENT,auditLevel,context));
      }
    }
  }
  return new DefaultAuditLogsForBundles(bundlesAuditLogs,subscriptionsAuditLogs,subscriptionEventsAuditLogs);
}
