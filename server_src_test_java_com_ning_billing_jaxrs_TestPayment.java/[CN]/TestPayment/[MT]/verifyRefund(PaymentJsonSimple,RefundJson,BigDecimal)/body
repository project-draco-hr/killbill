{
  Assert.assertEquals(refundJsonCheck.getPaymentId(),paymentJsonSimple.getPaymentId());
  Assert.assertEquals(refundJsonCheck.getAmount().setScale(2,RoundingMode.HALF_UP),refundAmount.setScale(2,RoundingMode.HALF_UP));
  Assert.assertEquals(refundJsonCheck.getCurrency(),DEFAULT_CURRENCY);
  Assert.assertEquals(refundJsonCheck.getEffectiveDate().getYear(),clock.getUTCNow().getYear());
  Assert.assertEquals(refundJsonCheck.getEffectiveDate().getMonthOfYear(),clock.getUTCNow().getMonthOfYear());
  Assert.assertEquals(refundJsonCheck.getEffectiveDate().getDayOfMonth(),clock.getUTCNow().getDayOfMonth());
  Assert.assertEquals(refundJsonCheck.getRequestedDate().getYear(),clock.getUTCNow().getYear());
  Assert.assertEquals(refundJsonCheck.getRequestedDate().getMonthOfYear(),clock.getUTCNow().getMonthOfYear());
  Assert.assertEquals(refundJsonCheck.getRequestedDate().getDayOfMonth(),clock.getUTCNow().getDayOfMonth());
  final List<RefundJson> retrievedRefunds=getRefundsForPayment(paymentJsonSimple.getPaymentId());
  Assert.assertEquals(retrievedRefunds.size(),1);
  final PaymentJsonWithBundleKeys retrievedPaymentJsonWithBundleKeys=getPaymentWithRefundsAndChargebacks(paymentJsonSimple.getPaymentId());
  Assert.assertEquals(retrievedPaymentJsonWithBundleKeys.getPaymentId(),paymentJsonSimple.getPaymentId());
  Assert.assertEquals(retrievedPaymentJsonWithBundleKeys.getPaidAmount().setScale(2,RoundingMode.HALF_UP),paymentJsonSimple.getPaidAmount().add(refundAmount.negate()).setScale(2,RoundingMode.HALF_UP));
  Assert.assertEquals(retrievedPaymentJsonWithBundleKeys.getAmount().setScale(2,RoundingMode.HALF_UP),paymentJsonSimple.getAmount().setScale(2,RoundingMode.HALF_UP));
  Assert.assertEquals(retrievedPaymentJsonWithBundleKeys.getAccountId(),paymentJsonSimple.getAccountId());
  Assert.assertEquals(retrievedPaymentJsonWithBundleKeys.getInvoiceId(),paymentJsonSimple.getInvoiceId());
  Assert.assertEquals(retrievedPaymentJsonWithBundleKeys.getRequestedDate(),paymentJsonSimple.getRequestedDate());
  Assert.assertEquals(retrievedPaymentJsonWithBundleKeys.getEffectiveDate(),paymentJsonSimple.getEffectiveDate());
  Assert.assertEquals(retrievedPaymentJsonWithBundleKeys.getRetryCount(),paymentJsonSimple.getRetryCount());
  Assert.assertEquals(retrievedPaymentJsonWithBundleKeys.getCurrency(),paymentJsonSimple.getCurrency());
  Assert.assertEquals(retrievedPaymentJsonWithBundleKeys.getStatus(),paymentJsonSimple.getStatus());
  Assert.assertEquals(retrievedPaymentJsonWithBundleKeys.getGatewayErrorCode(),paymentJsonSimple.getGatewayErrorCode());
  Assert.assertEquals(retrievedPaymentJsonWithBundleKeys.getGatewayErrorMsg(),paymentJsonSimple.getGatewayErrorMsg());
  Assert.assertEquals(retrievedPaymentJsonWithBundleKeys.getPaymentMethodId(),paymentJsonSimple.getPaymentMethodId());
  Assert.assertEquals(retrievedPaymentJsonWithBundleKeys.getExtFirstPaymentIdRef(),paymentJsonSimple.getExtFirstPaymentIdRef());
  Assert.assertEquals(retrievedPaymentJsonWithBundleKeys.getExtSecondPaymentIdRef(),paymentJsonSimple.getExtSecondPaymentIdRef());
  Assert.assertEquals(retrievedPaymentJsonWithBundleKeys.getChargebacks().size(),0);
  Assert.assertEquals(retrievedPaymentJsonWithBundleKeys.getRefunds().size(),1);
  Assert.assertEquals(retrievedPaymentJsonWithBundleKeys.getRefunds().get(0),refundJsonCheck);
}
