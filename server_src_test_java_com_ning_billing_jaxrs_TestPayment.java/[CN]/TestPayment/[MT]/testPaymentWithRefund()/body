{
  final AccountJson accountJson=createAccountWithPMBundleAndSubscriptionAndWaitForFirstInvoice();
  final List<PaymentJsonSimple> firstPaymentForAccount=getPaymentsForAccount(accountJson.getAccountId());
  Assert.assertEquals(firstPaymentForAccount.size(),1);
  final String paymentId=firstPaymentForAccount.get(0).getPaymentId();
  final BigDecimal paymentAmount=firstPaymentForAccount.get(0).getAmount();
  final String paymentMethodId=firstPaymentForAccount.get(0).getPaymentMethodId();
  final PaymentMethodJson paymentMethodJson=getPaymentMethodWithPluginInfo(paymentMethodId);
  Assert.assertEquals(paymentMethodJson.getPaymentMethodId(),paymentMethodId);
  Assert.assertEquals(paymentMethodJson.getAccountId(),accountJson.getAccountId());
  Assert.assertNotNull(paymentMethodJson.getPluginInfo().getExternalPaymentId());
  final List<RefundJson> objRefundFromJson=getRefundsForPayment(paymentId);
  Assert.assertEquals(objRefundFromJson.size(),0);
  final RefundJson refundJsonCheck=createRefund(paymentId,paymentAmount);
  Assert.assertEquals(refundJsonCheck.getEffectiveDate().getYear(),clock.getUTCNow().getYear());
  Assert.assertEquals(refundJsonCheck.getEffectiveDate().getMonthOfYear(),clock.getUTCNow().getMonthOfYear());
  Assert.assertEquals(refundJsonCheck.getEffectiveDate().getDayOfMonth(),clock.getUTCNow().getDayOfMonth());
  Assert.assertEquals(refundJsonCheck.getRequestedDate().getYear(),clock.getUTCNow().getYear());
  Assert.assertEquals(refundJsonCheck.getRequestedDate().getMonthOfYear(),clock.getUTCNow().getMonthOfYear());
  Assert.assertEquals(refundJsonCheck.getRequestedDate().getDayOfMonth(),clock.getUTCNow().getDayOfMonth());
  final List<RefundJson> retrievedRefunds=getRefundsForPayment(paymentId);
  Assert.assertEquals(retrievedRefunds.size(),1);
}
