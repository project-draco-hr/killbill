{
  final PlanPhase prevPhase=prevPhaseName != null ? Mockito.mock(PlanPhase.class) : null;
  if (prevPhase != null) {
    Mockito.when(prevPhase.getName()).thenReturn(prevPhaseName);
  }
  final PlanPhase nextPhase=nextPhaseName != null ? Mockito.mock(PlanPhase.class) : null;
  if (nextPhase != null) {
    Mockito.when(nextPhase.getName()).thenReturn(nextPhaseName);
  }
  final Plan plan=Mockito.mock(Plan.class);
  Mockito.when(plan.getName()).thenReturn("plan");
  final Product product=Mockito.mock(Product.class);
  Mockito.when(product.getName()).thenReturn("product");
  final PriceList priceList=Mockito.mock(PriceList.class);
  Mockito.when(priceList.getName()).thenReturn("pricelist");
  final BillingPeriod billingPeriod=BillingPeriod.MONTHLY;
  final SubscriptionBaseTransition transition=new SubscriptionBaseTransitionData(UUID.randomUUID(),entitlementId,bundleId,eventType,apiEventType,requestedDate,effectiveDate,null,null,null,plan,prevPhase,priceList,null,null,null,plan,nextPhase,priceList,1L,createdDate,UUID.randomUUID(),true);
  return transition;
}
