{
  UUID subscriptionForNextNotification=null;
  boolean shouldBeNotified=false;
  for (  final InvoiceItem item : invoiceItems) {
    if (item.getInvoiceItemType() == InvoiceItemType.RECURRING) {
      final RecurringInvoiceItem recurringInvoiceItem=(RecurringInvoiceItem)item;
      if ((recurringInvoiceItem.getEndDate() != null) && (recurringInvoiceItem.getAmount() == null || recurringInvoiceItem.getAmount().compareTo(BigDecimal.ZERO) >= 0)) {
        subscriptionForNextNotification=recurringInvoiceItem.getSubscriptionId();
        shouldBeNotified=true;
        break;
      }
    }
  }
  if (shouldBeNotified) {
    final DateTime nextNotificationDateTime=InvoiceDateUtils.calculateBillingCycleDateAfter(clock.getUTCNow(),billCycleDayUTC);
    nextBillingDatePoster.insertNextBillingNotification(dao,accountId,subscriptionForNextNotification,nextNotificationDateTime);
  }
}
