{
  DateTime now=clock.getUTCNow();
  List<Subscription> subscriptions=dao.getSubscriptions(baseSubscription.getBundleId());
  Iterator<Subscription> it=subscriptions.iterator();
  while (it.hasNext()) {
    SubscriptionData cur=(SubscriptionData)it.next();
    if (cur.getState() == SubscriptionState.CANCELLED || cur.getCategory() != ProductCategory.ADD_ON) {
      continue;
    }
    Plan addonCurrentPlan=cur.getCurrentPlan();
    if (addonUtils.isAddonIncluded(baseSubscription,addonCurrentPlan) || !addonUtils.isAddonAvailable(baseSubscription,addonCurrentPlan)) {
      EntitlementEvent cancelEvent=new ApiEventCancel(new ApiEventBuilder().setSubscriptionId(cur.getId()).setActiveVersion(cur.getActiveVersion()).setProcessedDate(now).setEffectiveDate(event.getEffectiveDate()).setRequestedDate(now));
      dao.cancelSubscription(cur.getId(),cancelEvent);
    }
  }
}
