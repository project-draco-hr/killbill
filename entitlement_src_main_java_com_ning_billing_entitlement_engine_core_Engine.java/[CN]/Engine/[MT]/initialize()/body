{
  try {
    subscriptionEventQueue=notificationQueueService.createNotificationQueue(ENTITLEMENT_SERVICE_NAME,NOTIFICATION_QUEUE_NAME,new NotificationQueueHandler(){
      @Override public void handleReadyNotification(      String notificationKey,      DateTime eventDateTime){
        EntitlementEvent event=dao.getEventById(UUID.fromString(notificationKey));
        if (event == null) {
          log.warn("Failed to extract event for notification key {}",notificationKey);
        }
 else {
          final CallContext context=factory.createCallContext("SubscriptionEventQueue",CallOrigin.INTERNAL,UserType.SYSTEM);
          processEventReady(event,context);
        }
      }
    }
,new NotificationConfig(){
      @Override public boolean isNotificationProcessingOff(){
        return config.isNotificationProcessingOff();
      }
      @Override public long getNotificationSleepTimeMs(){
        return config.getNotificationSleepTimeMs();
      }
      @Override public int getDaoMaxReadyEvents(){
        return config.getDaoMaxReadyEvents();
      }
      @Override public long getDaoClaimTimeMs(){
        return config.getDaoClaimTimeMs();
      }
    }
);
  }
 catch (  NotificationQueueAlreadyExists e) {
    throw new RuntimeException(e);
  }
}
