{
  transactionalSqlDao.execute(new EntitySqlDaoTransactionWrapper<Void>(){
    @Override public Void inTransaction(    final EntitySqlDaoWrapperFactory<EntitySqlDao> entitySqlDaoWrapperFactory) throws Exception {
      final EntitlementEventSqlDao transactional=entitySqlDaoWrapperFactory.become(EntitlementEventSqlDao.class);
      final UUID subscriptionId=subscription.getId();
      cancelNextPhaseEventFromTransaction(subscriptionId,transactional,context);
      transactional.insertEvent(nextPhase,context);
      recordFutureNotificationFromTransaction(transactional,nextPhase.getEffectiveDate(),new EntitlementNotificationKey(nextPhase.getId()),context);
      notifyBusOfRequestedChange(transactional,subscription,nextPhase,context);
      return null;
    }
  }
);
}
