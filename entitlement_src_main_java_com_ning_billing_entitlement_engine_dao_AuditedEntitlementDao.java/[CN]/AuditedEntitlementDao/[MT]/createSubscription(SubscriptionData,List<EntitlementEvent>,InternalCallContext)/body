{
  transactionalSqlDao.execute(new EntitySqlDaoTransactionWrapper<Void>(){
    @Override public Void inTransaction(    final EntitySqlDaoWrapperFactory<EntitySqlDao> entitySqlDaoWrapperFactory) throws Exception {
      final SubscriptionSqlDao transactional=entitySqlDaoWrapperFactory.become(SubscriptionSqlDao.class);
      transactional.insertSubscription(subscription,context);
      final EntitlementEventSqlDao eventsDaoFromSameTransaction=entitySqlDaoWrapperFactory.become(EntitlementEventSqlDao.class);
      for (      final EntitlementEvent cur : initialEvents) {
        eventsDaoFromSameTransaction.insertEvent(cur,context);
        recordFutureNotificationFromTransaction(transactional,cur.getEffectiveDate(),new EntitlementNotificationKey(cur.getId()),context);
      }
      if (initialEvents.size() > 0) {
        notifyBusOfRequestedChange(eventsDaoFromSameTransaction,subscription,initialEvents.get(initialEvents.size() - 1),context);
      }
      return null;
    }
  }
);
}
