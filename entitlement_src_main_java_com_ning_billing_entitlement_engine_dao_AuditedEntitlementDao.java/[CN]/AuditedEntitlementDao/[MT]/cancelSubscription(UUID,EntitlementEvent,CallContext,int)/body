{
  eventsDao.inTransaction(new Transaction<Void,EntitlementEventSqlDao>(){
    @Override public Void inTransaction(    EntitlementEventSqlDao transactional,    TransactionStatus status) throws Exception {
      cancelNextCancelEventFromTransaction(subscriptionId,transactional,context);
      cancelNextChangeEventFromTransaction(subscriptionId,transactional,context);
      cancelNextPhaseEventFromTransaction(subscriptionId,transactional,context);
      transactional.insertEvent(cancelEvent,context);
      String cancelEventId=cancelEvent.getId().toString();
      Long recordId=transactional.getRecordId(cancelEventId);
      EntityAudit audit=new EntityAudit(TableName.ENTITLEMENT_EVENTS,recordId,ChangeType.INSERT);
      transactional.insertAuditFromTransaction(audit,context);
      recordFutureNotificationFromTransaction(transactional,cancelEvent.getEffectiveDate(),new EntitlementNotificationKey(cancelEvent.getId(),seqId));
      return null;
    }
  }
);
}
