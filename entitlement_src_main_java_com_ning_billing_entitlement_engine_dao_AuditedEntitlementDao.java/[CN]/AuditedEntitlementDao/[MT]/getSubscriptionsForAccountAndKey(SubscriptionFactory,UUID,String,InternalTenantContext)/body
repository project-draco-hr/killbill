{
  return transactionalSqlDao.execute(new EntitySqlDaoTransactionWrapper<List<Subscription>>(){
    @Override public List<Subscription> inTransaction(    final EntitySqlDaoWrapperFactory<EntitySqlDao> entitySqlDaoWrapperFactory) throws Exception {
      final SubscriptionBundleModelDao bundleModel=entitySqlDaoWrapperFactory.become(BundleSqlDao.class).getBundleFromAccountAndKey(accountId.toString(),bundleKey,context);
      if (bundleModel == null) {
        return Collections.emptyList();
      }
      return getSubscriptions(factory,bundleModel.getId(),context);
    }
  }
);
}
