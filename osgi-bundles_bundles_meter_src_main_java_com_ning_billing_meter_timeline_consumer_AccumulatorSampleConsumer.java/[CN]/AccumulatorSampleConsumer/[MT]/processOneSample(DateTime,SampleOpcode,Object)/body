{
  final long millis=time.toDateTime(DateTimeZone.UTC).getMillis();
  final DateTime roundedTime;
switch (timeAggregationMode) {
case SECONDS:
    roundedTime=new DateTime((millis / 1000) * 1000L,DateTimeZone.UTC);
  break;
case MINUTES:
roundedTime=new DateTime((millis / (60 * 1000)) * 60 * 1000L,DateTimeZone.UTC);
break;
case HOURS:
roundedTime=new DateTime((millis / (60 * 60 * 1000)) * 60 * 60* 1000L,DateTimeZone.UTC);
break;
case DAYS:
roundedTime=new DateTime((millis / (24 * 60 * 60* 1000)) * 24 * 60* 60* 1000L,DateTimeZone.UTC);
break;
case MONTHS:
roundedTime=new DateTime(time.getYear(),time.getMonthOfYear(),1,0,0,0,0,DateTimeZone.UTC);
break;
case YEARS:
roundedTime=new DateTime(time.getYear(),1,1,0,0,0,0,DateTimeZone.UTC);
break;
default :
roundedTime=time;
break;
}
final double doubleValue=ScalarSample.getDoubleValue(opcode,value);
if (lastRoundedTime != null && !lastRoundedTime.equals(roundedTime)) {
outputAndResetAccumulators();
}
if (accumulators.get(opcode) == null) {
accumulators.put(opcode,Double.valueOf("0"));
}
accumulators.put(opcode,accumulators.get(opcode) + doubleValue);
lastRoundedTime=roundedTime;
}
