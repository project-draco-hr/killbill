{
  final MockAccountBuilder accountBuilder=new MockAccountBuilder();
  accountBuilder.address1(UUID.randomUUID().toString());
  accountBuilder.address2(UUID.randomUUID().toString());
  final int bcd=4;
  accountBuilder.billingCycleDayLocal(bcd);
  accountBuilder.city(UUID.randomUUID().toString());
  accountBuilder.companyName(UUID.randomUUID().toString());
  accountBuilder.country(UUID.randomUUID().toString());
  accountBuilder.currency(Currency.GBP);
  accountBuilder.email(UUID.randomUUID().toString());
  accountBuilder.externalKey(UUID.randomUUID().toString());
  accountBuilder.firstNameLength(12);
  accountBuilder.isNotifiedForInvoices(true);
  accountBuilder.locale(UUID.randomUUID().toString());
  accountBuilder.migrated(true);
  accountBuilder.name(UUID.randomUUID().toString());
  accountBuilder.paymentMethodId(UUID.randomUUID());
  accountBuilder.phone(UUID.randomUUID().toString());
  accountBuilder.postalCode(UUID.randomUUID().toString());
  accountBuilder.stateOrProvince(UUID.randomUUID().toString());
  accountBuilder.timeZone(DateTimeZone.UTC);
  final Account account=accountBuilder.build();
  final AccountJson accountJson=new AccountJson(account,null,null,null);
  Assert.assertEquals(accountJson.getAddress1(),account.getAddress1());
  Assert.assertEquals(accountJson.getAddress2(),account.getAddress2());
  Assert.assertEquals(accountJson.getBillCycleDayLocal(),(Integer)bcd);
  Assert.assertEquals(accountJson.getCountry(),account.getCountry());
  Assert.assertEquals(accountJson.getLocale(),account.getLocale());
  Assert.assertEquals(accountJson.getCompany(),account.getCompanyName());
  Assert.assertEquals(accountJson.getCity(),account.getCity());
  Assert.assertEquals(accountJson.getCurrency(),account.getCurrency().toString());
  Assert.assertEquals(accountJson.getEmail(),account.getEmail());
  Assert.assertEquals(accountJson.getExternalKey(),account.getExternalKey());
  Assert.assertEquals(accountJson.getName(),account.getName());
  Assert.assertEquals(accountJson.getPaymentMethodId(),account.getPaymentMethodId().toString());
  Assert.assertEquals(accountJson.getPhone(),account.getPhone());
  Assert.assertEquals(accountJson.isMigrated(),account.isMigrated());
  Assert.assertEquals(accountJson.isNotifiedForInvoices(),account.isNotifiedForInvoices());
  Assert.assertEquals(accountJson.getState(),account.getStateOrProvince());
  Assert.assertEquals(accountJson.getTimeZone(),account.getTimeZone().toString());
}
