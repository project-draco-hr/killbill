{
  final String accountId=UUID.randomUUID().toString();
  final String name=UUID.randomUUID().toString();
  final Integer length=12;
  final String externalKey=UUID.randomUUID().toString();
  final String email=UUID.randomUUID().toString();
  final Integer billCycleDay=6;
  final String currency=UUID.randomUUID().toString();
  final String paymentMethodId=UUID.randomUUID().toString();
  final String timeZone=UUID.randomUUID().toString();
  final String address1=UUID.randomUUID().toString();
  final String address2=UUID.randomUUID().toString();
  final String company=UUID.randomUUID().toString();
  final String state=UUID.randomUUID().toString();
  final String country=UUID.randomUUID().toString();
  final String phone=UUID.randomUUID().toString();
  final AccountJson accountJson=new AccountJson(accountId,name,length,externalKey,email,billCycleDay,currency,paymentMethodId,timeZone,address1,address2,company,state,country,phone);
  Assert.assertEquals(accountJson.getAccountId(),accountId);
  Assert.assertEquals(accountJson.getName(),name);
  Assert.assertEquals(accountJson.getLength(),length);
  Assert.assertEquals(accountJson.getExternalKey(),externalKey);
  Assert.assertEquals(accountJson.getEmail(),email);
  Assert.assertEquals(accountJson.getBillCycleDay(),billCycleDay);
  Assert.assertEquals(accountJson.getCurrency(),currency);
  Assert.assertEquals(accountJson.getPaymentMethodId(),paymentMethodId);
  Assert.assertEquals(accountJson.getTimeZone(),timeZone);
  Assert.assertEquals(accountJson.getAddress1(),address1);
  Assert.assertEquals(accountJson.getAddress2(),address2);
  Assert.assertEquals(accountJson.getCompany(),company);
  Assert.assertEquals(accountJson.getState(),state);
  Assert.assertEquals(accountJson.getCountry(),country);
  Assert.assertEquals(accountJson.getPhone(),phone);
  final String asJson=mapper.writeValueAsString(accountJson);
  Assert.assertEquals(asJson,"{\"accountId\":\"" + accountJson.getAccountId() + "\",\"name\":\""+ accountJson.getName()+ "\","+ "\"externalKey\":\""+ accountJson.getExternalKey()+ "\",\"email\":\""+ accountJson.getEmail()+ "\","+ "\"currency\":\""+ accountJson.getCurrency()+ "\",\"paymentMethodId\":\""+ accountJson.getPaymentMethodId()+ "\","+ "\"address1\":\""+ accountJson.getAddress1()+ "\",\"address2\":\""+ accountJson.getAddress2()+ "\","+ "\"company\":\""+ accountJson.getCompany()+ "\",\"state\":\""+ accountJson.getState()+ "\","+ "\"country\":\""+ accountJson.getCountry()+ "\",\"phone\":\""+ accountJson.getPhone()+ "\","+ "\"length\":"+ accountJson.getLength()+ ",\"billCycleDay\":"+ accountJson.getBillCycleDay()+ ","+ "\"timeZone\":\""+ accountJson.getTimeZone()+ "\"}");
  final AccountJson fromJson=mapper.readValue(asJson,AccountJson.class);
  Assert.assertEquals(fromJson,accountJson);
}
