{
  final String accountId=UUID.randomUUID().toString();
  final String name=UUID.randomUUID().toString();
  final Integer length=12;
  final String externalKey=UUID.randomUUID().toString();
  final String email=UUID.randomUUID().toString();
  final Integer billCycleDayLocal=6;
  final String currency=UUID.randomUUID().toString();
  final String paymentMethodId=UUID.randomUUID().toString();
  final String timeZone=UUID.randomUUID().toString();
  final String address1=UUID.randomUUID().toString();
  final String address2=UUID.randomUUID().toString();
  final String postalCode=UUID.randomUUID().toString();
  final String company=UUID.randomUUID().toString();
  final String city=UUID.randomUUID().toString();
  final String state=UUID.randomUUID().toString();
  final String country=UUID.randomUUID().toString();
  final String locale=UUID.randomUUID().toString();
  final String phone=UUID.randomUUID().toString();
  final Boolean isMigrated=true;
  final Boolean isNotifiedForInvoice=false;
  final AccountJson accountJson=new AccountJson(accountId,name,length,externalKey,email,billCycleDayLocal,currency,paymentMethodId,timeZone,address1,address2,postalCode,company,city,state,country,locale,phone,isMigrated,isNotifiedForInvoice);
  Assert.assertEquals(accountJson.getAccountId(),accountId);
  Assert.assertEquals(accountJson.getName(),name);
  Assert.assertEquals(accountJson.getFirstNameLength(),length);
  Assert.assertEquals(accountJson.getExternalKey(),externalKey);
  Assert.assertEquals(accountJson.getEmail(),email);
  Assert.assertEquals(accountJson.getBillCycleDayLocal(),billCycleDayLocal);
  Assert.assertEquals(accountJson.getCurrency(),currency);
  Assert.assertEquals(accountJson.getPaymentMethodId(),paymentMethodId);
  Assert.assertEquals(accountJson.getTimeZone(),timeZone);
  Assert.assertEquals(accountJson.getAddress1(),address1);
  Assert.assertEquals(accountJson.getAddress2(),address2);
  Assert.assertEquals(accountJson.getPostalCode(),postalCode);
  Assert.assertEquals(accountJson.getCompany(),company);
  Assert.assertEquals(accountJson.getCity(),city);
  Assert.assertEquals(accountJson.getState(),state);
  Assert.assertEquals(accountJson.getCountry(),country);
  Assert.assertEquals(accountJson.getLocale(),locale);
  Assert.assertEquals(accountJson.getPhone(),phone);
  Assert.assertEquals(accountJson.isMigrated(),isMigrated);
  Assert.assertEquals(accountJson.isNotifiedForInvoices(),isNotifiedForInvoice);
  final String asJson=mapper.writeValueAsString(accountJson);
  final AccountJson fromJson=mapper.readValue(asJson,AccountJson.class);
  Assert.assertEquals(fromJson,accountJson);
}
