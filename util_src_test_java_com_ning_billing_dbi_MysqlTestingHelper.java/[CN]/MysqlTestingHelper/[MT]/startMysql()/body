{
  if (isUsingLocalInstance()) {
    return;
  }
  dbDir=File.createTempFile("mysqldb","");
  Assert.assertTrue(dbDir.delete());
  Assert.assertTrue(dbDir.mkdir());
  dataDir=File.createTempFile("mysqldata","");
  Assert.assertTrue(dataDir.delete());
  Assert.assertTrue(dataDir.mkdir());
  final PrintStream out=new PrintStream(new LoggingOutputStream(log),true);
  mysqldResource=new MysqldResource(dbDir,dataDir,null,out,out);
  final Map<String,String> dbOpts=new HashMap<String,String>();
  dbOpts.put(MysqldResourceI.PORT,Integer.toString(port));
  dbOpts.put(MysqldResourceI.INITIALIZE_USER,"true");
  dbOpts.put(MysqldResourceI.INITIALIZE_PASSWORD,PASSWORD);
  dbOpts.put(MysqldResourceI.INITIALIZE_USER_NAME,USERNAME);
  dbOpts.put("default-time-zone","+00:00");
  mysqldResource.start("test-mysqld-thread",dbOpts);
  if (!mysqldResource.isRunning()) {
    throw new IllegalStateException("MySQL did not start.");
  }
 else {
    log.info("MySQL running on port " + mysqldResource.getPort());
    log.info(String.format("To connect to it: mysql -u%s -p%s -P%s -S%s/mysql.sock %s",USERNAME,PASSWORD,port,dataDir,DB_NAME));
  }
}
