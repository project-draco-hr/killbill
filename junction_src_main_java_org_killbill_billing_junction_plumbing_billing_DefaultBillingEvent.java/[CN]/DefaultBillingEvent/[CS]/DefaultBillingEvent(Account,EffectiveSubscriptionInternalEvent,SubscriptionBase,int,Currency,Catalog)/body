{
  this.account=account;
  this.billCycleDayLocal=billCycleDayLocal;
  this.subscription=subscription;
  effectiveDate=transition.getEffectiveTransitionTime();
  final String planPhaseName=(transition.getTransitionType() != SubscriptionBaseTransitionType.CANCEL) ? transition.getNextPhase() : transition.getPreviousPhase();
  planPhase=(planPhaseName != null) ? catalog.findPhase(planPhaseName,transition.getEffectiveTransitionTime(),transition.getSubscriptionStartDate()) : null;
  final String planName=(transition.getTransitionType() != SubscriptionBaseTransitionType.CANCEL) ? transition.getNextPlan() : transition.getPreviousPlan();
  plan=(planName != null) ? catalog.findPlan(planName,transition.getEffectiveTransitionTime(),transition.getSubscriptionStartDate()) : null;
  final String nextPhaseName=transition.getNextPhase();
  final PlanPhase nextPhase=(nextPhaseName != null) ? catalog.findPhase(nextPhaseName,transition.getEffectiveTransitionTime(),transition.getSubscriptionStartDate()) : null;
  final String prevPhaseName=transition.getPreviousPhase();
  final PlanPhase prevPhase=(prevPhaseName != null) ? catalog.findPhase(prevPhaseName,transition.getEffectiveTransitionTime(),transition.getSubscriptionStartDate()) : null;
  fixedPrice=getFixedPrice(nextPhase,currency);
  recurringPrice=getRecurringPrice(nextPhase,currency);
  this.currency=currency;
  description=transition.getTransitionType().toString();
  billingModeType=BillingModeType.IN_ADVANCE;
  billingPeriod=getRecurringBillingPeriod((transition.getTransitionType() != SubscriptionBaseTransitionType.CANCEL) ? nextPhase : prevPhase);
  type=transition.getTransitionType();
  totalOrdering=transition.getTotalOrdering();
  timeZone=account.getTimeZone();
}
