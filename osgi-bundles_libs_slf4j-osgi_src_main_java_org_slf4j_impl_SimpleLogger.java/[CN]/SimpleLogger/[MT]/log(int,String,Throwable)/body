{
  if (!isLevelEnabled(level)) {
    return;
  }
  StringBuffer buf=new StringBuffer(32);
  if (SHOW_DATE_TIME) {
    if (DATE_FORMATTER != null) {
      buf.append(getFormattedDate());
      buf.append(' ');
    }
 else {
      buf.append(System.currentTimeMillis() - START_TIME);
      buf.append(' ');
    }
  }
  if (SHOW_THREAD_NAME) {
    buf.append('[');
    buf.append(Thread.currentThread().getName());
    buf.append("] ");
  }
  if (LEVEL_IN_BRACKETS)   buf.append('[');
switch (level) {
case LOG_LEVEL_TRACE:
    buf.append("TRACE");
  break;
case LOG_LEVEL_DEBUG:
buf.append("DEBUG");
break;
case LOG_LEVEL_INFO:
buf.append("INFO");
break;
case LOG_LEVEL_WARN:
buf.append(WARN_LEVEL_STRING);
break;
case LOG_LEVEL_ERROR:
buf.append("ERROR");
break;
}
if (LEVEL_IN_BRACKETS) buf.append(']');
buf.append(' ');
if (SHOW_SHORT_LOG_NAME) {
if (shortLogName == null) shortLogName=computeShortName();
buf.append(String.valueOf(shortLogName)).append(" - ");
}
 else if (SHOW_LOG_NAME) {
buf.append(String.valueOf(name)).append(" - ");
}
buf.append(message);
write(buf,t);
}
