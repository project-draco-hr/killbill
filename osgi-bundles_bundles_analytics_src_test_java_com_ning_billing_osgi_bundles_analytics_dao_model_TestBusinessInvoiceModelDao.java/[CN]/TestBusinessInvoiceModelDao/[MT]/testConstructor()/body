{
  final BigDecimal balance=BigDecimal.ONE;
  final BigDecimal amountCharged=BigDecimal.ZERO;
  final BigDecimal originalAmountCharged=BigDecimal.ONE;
  final BigDecimal amountCredited=BigDecimal.TEN;
  final BusinessInvoiceModelDao invoiceModelDao=new BusinessInvoiceModelDao(account,accountRecordId,invoice,amountCharged,originalAmountCharged,amountCredited,invoiceRecordId,auditLog,tenantRecordId,reportGroup);
  verifyBusinessModelDaoBase(invoiceModelDao,accountRecordId,tenantRecordId);
  Assert.assertEquals(invoiceModelDao.getCreatedDate(),invoice.getCreatedDate());
  Assert.assertEquals(invoiceModelDao.getInvoiceRecordId(),invoiceRecordId);
  Assert.assertEquals(invoiceModelDao.getInvoiceId(),invoice.getId());
  Assert.assertEquals(invoiceModelDao.getInvoiceNumber(),invoice.getInvoiceNumber());
  Assert.assertEquals(invoiceModelDao.getInvoiceDate(),invoice.getInvoiceDate());
  Assert.assertEquals(invoiceModelDao.getTargetDate(),invoice.getTargetDate());
  Assert.assertEquals(invoiceModelDao.getCurrency(),invoice.getCurrency().toString());
  Assert.assertEquals(invoiceModelDao.getAmountCharged(),amountCharged);
  Assert.assertEquals(invoiceModelDao.getOriginalAmountCharged(),originalAmountCharged);
  Assert.assertEquals(invoiceModelDao.getAmountCredited(),amountCredited);
  Assert.assertNull(invoiceModelDao.getBalance());
  Assert.assertNull(invoiceModelDao.getAmountPaid());
  Assert.assertNull(invoiceModelDao.getAmountRefunded());
}
