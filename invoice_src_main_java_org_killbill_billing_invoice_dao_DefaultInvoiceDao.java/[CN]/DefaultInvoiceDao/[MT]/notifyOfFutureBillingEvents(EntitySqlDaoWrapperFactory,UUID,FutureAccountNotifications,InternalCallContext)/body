{
  final long dryRunNotificationTime=invoiceConfig.getDryRunNotificationSchedule().getMillis();
  final boolean isInvoiceNotificationEnabled=dryRunNotificationTime > 0;
  for (  final UUID subscriptionId : callbackDateTimePerSubscriptions.getNotifications().keySet()) {
    final List<DateTime> callbackDateTimeUTC=callbackDateTimePerSubscriptions.getNotifications().get(subscriptionId);
    for (    final DateTime cur : callbackDateTimeUTC) {
      if (isInvoiceNotificationEnabled) {
        final DateTime curDryRunNotificationTime=cur.minus(dryRunNotificationTime);
        final DateTime effectiveCurDryRunNotificationTime=(curDryRunNotificationTime.isAfter(clock.getUTCNow())) ? curDryRunNotificationTime : clock.getUTCNow();
        nextBillingDatePoster.insertNextBillingDryRunNotificationFromTransaction(entitySqlDaoWrapperFactory,accountId,subscriptionId,effectiveCurDryRunNotificationTime,cur,callbackDateTimePerSubscriptions.getAccountDateAndTimeZoneContext(),internalCallContext);
      }
      nextBillingDatePoster.insertNextBillingNotificationFromTransaction(entitySqlDaoWrapperFactory,accountId,subscriptionId,cur,callbackDateTimePerSubscriptions.getAccountDateAndTimeZoneContext(),internalCallContext);
    }
  }
}
