{
  logger.debug("Leaving state {}",oldState.getName());
  try {
    if (paymentStateContext.getPaymentMethodId() == null) {
      throw new PaymentApiException(ErrorCode.PAYMENT_NO_DEFAULT_PAYMENT_METHOD,paymentStateContext.getAccount().getId());
    }
    final List<PaymentTransactionModelDao> existingPaymentTransactions;
    if (paymentStateContext.getTransactionId() != null) {
      final PaymentTransactionModelDao transactionModelDao=daoHelper.getPaymentDao().getPaymentTransaction(paymentStateContext.getTransactionId(),paymentStateContext.getInternalCallContext());
      existingPaymentTransactions=ImmutableList.of(transactionModelDao);
    }
 else     if (paymentStateContext.getPaymentTransactionExternalKey() != null) {
      existingPaymentTransactions=daoHelper.getPaymentDao().getPaymentTransactionsByExternalKey(paymentStateContext.getPaymentTransactionExternalKey(),paymentStateContext.getInternalCallContext());
    }
 else {
      existingPaymentTransactions=ImmutableList.of();
    }
    validatePaymentId(existingPaymentTransactions);
    validateUniqueTransactionExternalKey(existingPaymentTransactions);
    final PaymentTransactionModelDao pendingPaymentTransaction=getPendingPaymentTransaction(existingPaymentTransactions);
    if (pendingPaymentTransaction != null) {
      paymentStateContext.setPaymentTransactionModelDao(pendingPaymentTransaction);
      return;
    }
    daoHelper.createNewPaymentTransaction();
  }
 catch (  PaymentApiException e) {
    throw new OperationException(e);
  }
}
