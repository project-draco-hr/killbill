{
  final InternalTenantContext contextWithValidAccountRecordId=internalCallContextFactory.createInternalTenantContext(bundle.getAccountId(),tenantContext);
  final Account account;
  try {
    account=accountInternalApi.getAccountById(bundle.getAccountId(),contextWithValidAccountRecordId);
  }
 catch (  AccountApiException e) {
    throw new EntitlementApiException(e);
  }
  final List<BlockingState> subscriptionEntitlementStates=blockingStateDao.getBlockingHistoryForService(subscription.getId(),EntitlementService.ENTITLEMENT_SERVICE_NAME,contextWithValidAccountRecordId);
  final List<BlockingState> bundleEntitlementStates=blockingStateDao.getBlockingHistoryForService(bundle.getId(),EntitlementService.ENTITLEMENT_SERVICE_NAME,contextWithValidAccountRecordId);
  final List<BlockingState> accountEntitlementStates=blockingStateDao.getBlockingHistoryForService(account.getId(),EntitlementService.ENTITLEMENT_SERVICE_NAME,contextWithValidAccountRecordId);
  final BlockingAggregator blockingAggregator;
  try {
    blockingAggregator=checker.getBlockedStatus(subscription,contextWithValidAccountRecordId);
  }
 catch (  BlockingApiException e) {
    throw new EntitlementApiException(e);
  }
  return new EventsStream(account,bundle,subscriptionEntitlementStates,bundleEntitlementStates,accountEntitlementStates,blockingAggregator,subscription,contextWithValidAccountRecordId,clock.getUTCNow());
}
