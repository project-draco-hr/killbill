{
  final StringBuilder sb=new StringBuilder("BusinessInvoicePaymentBaseModelDao{");
  sb.append("invoicePaymentRecordId=").append(invoicePaymentRecordId);
  sb.append(", invoicePaymentId=").append(invoicePaymentId);
  sb.append(", invoiceId=").append(invoiceId);
  sb.append(", invoiceNumber=").append(invoiceNumber);
  sb.append(", invoiceCreatedDate=").append(invoiceCreatedDate);
  sb.append(", invoiceDate=").append(invoiceDate);
  sb.append(", invoiceTargetDate=").append(invoiceTargetDate);
  sb.append(", invoiceCurrency='").append(invoiceCurrency).append('\'');
  sb.append(", invoiceBalance=").append(invoiceBalance);
  sb.append(", invoiceAmountPaid=").append(invoiceAmountPaid);
  sb.append(", invoiceAmountCharged=").append(invoiceAmountCharged);
  sb.append(", invoiceOriginalAmountCharged=").append(invoiceOriginalAmountCharged);
  sb.append(", invoiceAmountCredited=").append(invoiceAmountCredited);
  sb.append(", invoiceAmountRefunded=").append(invoiceAmountRefunded);
  sb.append(", invoicePaymentType='").append(invoicePaymentType).append('\'');
  sb.append(", paymentId=").append(paymentId);
  sb.append(", refundId=").append(refundId);
  sb.append(", paymentNumber=").append(paymentNumber);
  sb.append(", linkedInvoicePaymentId=").append(linkedInvoicePaymentId);
  sb.append(", amount=").append(amount);
  sb.append(", currency='").append(currency).append('\'');
  sb.append(", pluginName='").append(pluginName).append('\'');
  sb.append(", pluginCreatedDate=").append(pluginCreatedDate);
  sb.append(", pluginEffectiveDate=").append(pluginEffectiveDate);
  sb.append(", pluginStatus='").append(pluginStatus).append('\'');
  sb.append(", pluginGatewayError='").append(pluginGatewayError).append('\'');
  sb.append(", pluginGatewayErrorCode='").append(pluginGatewayErrorCode).append('\'');
  sb.append(", pluginFirstReferenceId='").append(pluginFirstReferenceId).append('\'');
  sb.append(", pluginSecondReferenceId='").append(pluginSecondReferenceId).append('\'');
  sb.append(", pluginPmId='").append(pluginPmId).append('\'');
  sb.append(", pluginPmIsDefault=").append(pluginPmIsDefault);
  sb.append(", pluginPmType='").append(pluginPmType).append('\'');
  sb.append(", pluginPmCcName='").append(pluginPmCcName).append('\'');
  sb.append(", pluginPmCcType='").append(pluginPmCcType).append('\'');
  sb.append(", pluginPmCcExpirationMonth='").append(pluginPmCcExpirationMonth).append('\'');
  sb.append(", pluginPmCcExpirationYear='").append(pluginPmCcExpirationYear).append('\'');
  sb.append(", pluginPmCcLast4='").append(pluginPmCcLast4).append('\'');
  sb.append(", pluginPmAddress1='").append(pluginPmAddress1).append('\'');
  sb.append(", pluginPmAddress2='").append(pluginPmAddress2).append('\'');
  sb.append(", pluginPmCity='").append(pluginPmCity).append('\'');
  sb.append(", pluginPmState='").append(pluginPmState).append('\'');
  sb.append(", pluginPmZip='").append(pluginPmZip).append('\'');
  sb.append(", pluginPmCountry='").append(pluginPmCountry).append('\'');
  sb.append('}');
  return sb.toString();
}
