{
  test.withException(new TestWithExceptionCallback(){
    @Override public void doTest() throws EntitlementRepairException {
      final BundleTimeline bundleRepair=repairApi.getBundleRepair(bundle.getId());
      sortEventsOnBundle(bundleRepair);
      final PlanPhaseSpecifier spec=new PlanPhaseSpecifier("Assault-Rifle",ProductCategory.BASE,BillingPeriod.MONTHLY,PriceListSet.DEFAULT_PRICELIST_NAME,PhaseType.EVERGREEN);
      final NewEvent ne=createNewEvent(SubscriptionTransitionType.CHANGE,baseSubscription.getStartDate().plusDays(10),spec);
      final DeletedEvent de=createDeletedEvent(UUID.randomUUID());
      final SubscriptionTimeline sRepair=createSubscriptionRepair(baseSubscription.getId(),Collections.singletonList(de),Collections.singletonList(ne));
      final BundleTimeline bRepair=createBundleRepair(bundle.getId(),bundleRepair.getViewId(),Collections.singletonList(sRepair));
      repairApi.repairBundle(bRepair,true,context);
    }
  }
,ErrorCode.ENT_REPAIR_NON_EXISTENT_DELETE_EVENT);
}
