{
  final VersionedCatalog pluginVersionedCatalog=getCatalogFromPlugins(tenantContext);
  if (pluginVersionedCatalog != null) {
    return pluginVersionedCatalog;
  }
  if (tenantContext.getTenantRecordId() == InternalCallContextFactory.INTERNAL_TENANT_RECORD_ID) {
    return defaultCatalog;
  }
  try {
    VersionedCatalog tenantCatalog=(VersionedCatalog)cacheController.get(tenantContext.getTenantRecordId(),cacheLoaderArgument);
    if (tenantCatalog == null) {
      tenantCatalog=new VersionedCatalog(defaultCatalog.getClock(),defaultCatalog.getCatalogName(),defaultCatalog.getRecurringBillingMode(),defaultCatalog.getVersions(),tenantContext);
      cacheController.add(tenantContext.getTenantRecordId(),tenantCatalog);
    }
    return tenantCatalog;
  }
 catch (  final IllegalStateException e) {
    throw new CatalogApiException(ErrorCode.CAT_INVALID_FOR_TENANT,tenantContext.getTenantRecordId());
  }
}
