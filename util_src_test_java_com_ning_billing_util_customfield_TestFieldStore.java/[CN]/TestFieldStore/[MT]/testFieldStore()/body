{
  final UUID id=UUID.randomUUID();
  final String objectType="Test widget";
  final FieldStore fieldStore1=new DefaultFieldStore(id,objectType);
  String fieldName="TestField1";
  String fieldValue="Kitty Hawk";
  fieldStore1.setValue(fieldName,fieldValue);
  FieldStoreDao fieldStoreDao=dbi.onDemand(FieldStoreDao.class);
  fieldStoreDao.inTransaction(new Transaction<Void,FieldStoreDao>(){
    @Override public Void inTransaction(    FieldStoreDao transactional,    TransactionStatus status) throws Exception {
      transactional.batchSaveFromTransaction(id.toString(),objectType,fieldStore1.getEntityList());
      return null;
    }
  }
);
  final FieldStore fieldStore2=DefaultFieldStore.create(id,objectType);
  fieldStore2.add(fieldStoreDao.load(id.toString(),objectType));
  assertEquals(fieldStore2.getValue(fieldName),fieldValue);
  fieldValue="Cape Canaveral";
  fieldStore2.setValue(fieldName,fieldValue);
  assertEquals(fieldStore2.getValue(fieldName),fieldValue);
  fieldStoreDao.inTransaction(new Transaction<Void,FieldStoreDao>(){
    @Override public Void inTransaction(    FieldStoreDao transactional,    TransactionStatus status) throws Exception {
      transactional.batchSaveFromTransaction(id.toString(),objectType,fieldStore2.getEntityList());
      return null;
    }
  }
);
  final FieldStore fieldStore3=DefaultFieldStore.create(id,objectType);
  assertEquals(fieldStore3.getValue(fieldName),null);
  fieldStore3.add(fieldStoreDao.load(id.toString(),objectType));
  assertEquals(fieldStore3.getValue(fieldName),fieldValue);
}
