{
  log.info("Starting testCorrectPhaseAlignmentOnChange");
  try {
    SubscriptionData subscription=createSubscription("Shotgun",BillingPeriod.MONTHLY,PriceListSet.DEFAULT_PRICELIST_NAME);
    PlanPhase trialPhase=subscription.getCurrentPhase();
    assertEquals(trialPhase.getPhaseType(),PhaseType.TRIAL);
    Interval it=new Interval(clock.getUTCNow(),clock.getUTCNow().plusDays(2));
    clock.addDeltaFromReality(it.toDurationMillis());
    testListener.reset();
    testListener.pushExpectedEvent(NextEvent.CHANGE);
    subscription.changePlan("Assault-Rifle",BillingPeriod.ANNUAL,"gunclubDiscount",clock.getUTCNow(),context);
    assertTrue(testListener.isCompleted(5000));
    testListener.reset();
    Plan currentPlan=subscription.getCurrentPlan();
    assertNotNull(currentPlan);
    assertEquals(currentPlan.getProduct().getName(),"Assault-Rifle");
    assertEquals(currentPlan.getProduct().getCategory(),ProductCategory.BASE);
    assertEquals(currentPlan.getBillingPeriod(),BillingPeriod.ANNUAL);
    trialPhase=subscription.getCurrentPhase();
    assertEquals(trialPhase.getPhaseType(),PhaseType.TRIAL);
    testListener.pushExpectedEvent(NextEvent.PHASE);
    it=new Interval(clock.getUTCNow(),clock.getUTCNow().plusDays(30));
    clock.addDeltaFromReality(it.toDurationMillis());
    assertTrue(testListener.isCompleted(5000));
    trialPhase=subscription.getCurrentPhase();
    assertEquals(trialPhase.getPhaseType(),PhaseType.DISCOUNT);
    subscription=(SubscriptionData)entitlementApi.getSubscriptionFromId(subscription.getId());
    DateTime expectedNextPhaseDate=subscription.getStartDate().plusDays(30).plusMonths(6);
    SubscriptionEvent nextPhase=subscription.getPendingTransition();
    DateTime nextPhaseEffectiveDate=nextPhase.getEffectiveTransitionTime();
    assertEquals(nextPhaseEffectiveDate,expectedNextPhaseDate);
    assertListenerStatus();
  }
 catch (  EntitlementUserApiException e) {
    Assert.fail(e.getMessage());
  }
}
