{
  try {
    SubscriptionData subscription=testUtil.createSubscription(bundle,fromProd,fromTerm,fromPlanSet);
    final PlanPhase trialPhase=subscription.getCurrentPhase();
    final DateTime expectedPhaseTrialChange=TestEntitlementHelper.addDuration(subscription.getStartDate(),trialPhase.getDuration());
    assertEquals(trialPhase.getPhaseType(),PhaseType.TRIAL);
    testListener.pushExpectedEvent(NextEvent.PHASE);
    Interval it=new Interval(clock.getUTCNow(),clock.getUTCNow().plusDays(31));
    clock.addDeltaFromReality(it.toDurationMillis());
    assertTrue(testListener.isCompleted(5000));
    PlanPhase currentPhase=subscription.getCurrentPhase();
    assertEquals(currentPhase.getPhaseType(),PhaseType.DISCOUNT);
    final Duration ctd=testUtil.getDurationMonth(1);
    final DateTime newChargedThroughDate=TestEntitlementHelper.addDuration(expectedPhaseTrialChange,ctd);
    entitlementInternalApi.setChargedThroughDate(subscription.getId(),newChargedThroughDate,internalCallContext);
    testListener.setNonExpectedMode();
    testListener.pushExpectedEvent(NextEvent.CHANGE);
    subscription=(SubscriptionData)entitlementApi.getSubscriptionFromId(subscription.getId(),callContext);
    subscription.changePlan(toProd,toTerm,toPlanSet,clock.getUTCNow(),callContext);
    assertFalse(testListener.isCompleted(3000));
    testListener.reset();
    currentPhase=subscription.getCurrentPhase();
    checkChangePlan(subscription,fromProd,ProductCategory.BASE,fromTerm,PhaseType.DISCOUNT);
    final DateTime nextExpectedPhaseChange=TestEntitlementHelper.addDuration(expectedPhaseTrialChange,currentPhase.getDuration());
    testUtil.checkNextPhaseChange(subscription,2,nextExpectedPhaseChange);
    final List<EntitlementEvent> events=dao.getPendingEventsForSubscription(subscription.getId(),internalCallContext);
    assertTrue(events.get(0) instanceof ApiEvent);
    testListener.pushExpectedEvent(NextEvent.CHANGE);
    it=new Interval(clock.getUTCNow(),clock.getUTCNow().plusMonths(1));
    clock.addDeltaFromReality(it.toDurationMillis());
    assertTrue(testListener.isCompleted(5000));
    subscription=(SubscriptionData)entitlementApi.getSubscriptionFromId(subscription.getId(),callContext);
    currentPhase=subscription.getCurrentPhase();
    checkChangePlan(subscription,toProd,ProductCategory.BASE,toTerm,PhaseType.DISCOUNT);
    assertListenerStatus();
  }
 catch (  EntitlementUserApiException e) {
    Assert.fail(e.getMessage());
  }
}
