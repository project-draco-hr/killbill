{
  try {
    SubscriptionData subscription=createSubscription("Assault-Rifle",BillingPeriod.MONTHLY,"gunclubDiscount");
    PlanPhase trialPhase=subscription.getCurrentPhase();
    assertEquals(trialPhase.getPhaseType(),PhaseType.TRIAL);
    testListener.pushNextApiExpectedEvent(NextEvent.PHASE);
    clock.setDeltaFromReality(trialPhase.getDuration(),DAY_IN_MS);
    assertTrue(testListener.isApiCompleted(2000));
    List<Duration> durationList=new ArrayList<Duration>();
    durationList.add(trialPhase.getDuration());
    DateTime startDiscountPhase=DefaultClock.addDuration(subscription.getStartDate(),durationList);
    Duration ctd=getDurationMonth(1);
    DateTime newChargedThroughDate=DefaultClock.addDuration(startDiscountPhase,ctd);
    billingApi.setChargedThroughDate(subscription.getId(),newChargedThroughDate,context);
    subscription=(SubscriptionData)entitlementApi.getSubscriptionFromId(subscription.getId());
    testListener.pushNextApiExpectedEvent(NextEvent.CHANGE);
    subscription.changePlan("Pistol",BillingPeriod.MONTHLY,"gunclubDiscount",clock.getUTCNow(),context);
    assertFalse(testListener.isApiCompleted(2000));
    testListener.pushNextApiExpectedEvent(NextEvent.CHANGE);
    subscription.changePlan("Assault-Rifle",BillingPeriod.ANNUAL,"gunclubDiscount",clock.getUTCNow(),context);
    assertFalse(testListener.isApiCompleted(2000));
    Plan currentPlan=subscription.getCurrentPlan();
    assertNotNull(currentPlan);
    assertEquals(currentPlan.getProduct().getName(),"Assault-Rifle");
    assertEquals(currentPlan.getProduct().getCategory(),ProductCategory.BASE);
    assertEquals(currentPlan.getBillingPeriod(),BillingPeriod.ANNUAL);
    PlanPhase currentPhase=subscription.getCurrentPhase();
    assertNotNull(currentPhase);
    assertEquals(currentPhase.getPhaseType(),PhaseType.DISCOUNT);
  }
 catch (  EntitlementUserApiException e) {
    Assert.fail(e.getMessage());
  }
}
