{
  final AccountData accountData=getAccountData(1);
  final Account account=createAccountWithNonOsgiPaymentMethod(accountData);
  accountChecker.checkAccount(account.getId(),accountData,callContext);
  clock.setDay(new LocalDate(2012,4,1));
  final DefaultEntitlement bpSubscription=createBaseEntitlementAndCheckForCompletion(account.getId(),"bundleKey","Pistol",ProductCategory.BASE,BillingPeriod.MONTHLY,NextEvent.CREATE,NextEvent.INVOICE);
  invoiceChecker.checkInvoice(account.getId(),1,callContext,new ExpectedInvoiceItemCheck(new LocalDate(2012,4,1),null,InvoiceItemType.FIXED,new BigDecimal("0")));
  subscriptionChecker.checkSubscriptionCreated(bpSubscription.getId(),internalCallContext);
  add_AUTO_INVOICING_OFF_Tag(account.getId());
  busHandler.pushExpectedEvent(NextEvent.PHASE);
  clock.addDays(30);
  assertListenerStatus();
  busHandler.pushExpectedEvent(NextEvent.CREATE);
  addAOEntitlementAndCheckForCompletion(bpSubscription.getBundleId(),"Cleaning",ProductCategory.ADD_ON,BillingPeriod.MONTHLY);
  assertListenerStatus();
  testInvoicePluginApi.addTaxItem();
  remove_AUTO_INVOICING_OFF_Tag(account.getId(),NextEvent.INVOICE,NextEvent.PAYMENT);
  invoiceChecker.checkInvoice(account.getId(),2,callContext,new ExpectedInvoiceItemCheck(new LocalDate(2012,5,1),new LocalDate(2012,6,1),InvoiceItemType.RECURRING,new BigDecimal("29.95")),new ExpectedInvoiceItemCheck(new LocalDate(2012,5,1),new LocalDate(2012,6,1),InvoiceItemType.RECURRING,new BigDecimal("2.95")),new ExpectedInvoiceItemCheck(new LocalDate(2012,5,1),null,InvoiceItemType.TAX,new BigDecimal("1.0")));
  add_AUTO_INVOICING_OFF_Tag(account.getId());
  busHandler.pushExpectedEvents(NextEvent.CHANGE,NextEvent.CANCEL,NextEvent.BLOCK);
  changeEntitlementAndCheckForCompletion(bpSubscription,"Shotgun",BillingPeriod.MONTHLY,BillingActionPolicy.IMMEDIATE);
  assertListenerStatus();
  testInvoicePluginApi.addTaxItem();
  remove_AUTO_INVOICING_OFF_Tag(account.getId(),NextEvent.INVOICE,NextEvent.PAYMENT);
  invoiceChecker.checkInvoice(account.getId(),2,callContext,new ExpectedInvoiceItemCheck(new LocalDate(2012,5,1),new LocalDate(2012,6,1),InvoiceItemType.RECURRING,new BigDecimal("29.95")),new ExpectedInvoiceItemCheck(new LocalDate(2012,5,1),new LocalDate(2012,6,1),InvoiceItemType.RECURRING,new BigDecimal("2.95")),new ExpectedInvoiceItemCheck(new LocalDate(2012,5,1),null,InvoiceItemType.TAX,new BigDecimal("1.0")));
  invoiceChecker.checkInvoice(account.getId(),3,callContext,new ExpectedInvoiceItemCheck(new LocalDate(2012,5,1),new LocalDate(2012,6,1),InvoiceItemType.RECURRING,new BigDecimal("249.95")),new ExpectedInvoiceItemCheck(new LocalDate(2012,5,1),new LocalDate(2012,6,1),InvoiceItemType.REPAIR_ADJ,new BigDecimal("-29.95")),new ExpectedInvoiceItemCheck(new LocalDate(2012,5,1),new LocalDate(2012,6,1),InvoiceItemType.REPAIR_ADJ,new BigDecimal("-2.95")),new ExpectedInvoiceItemCheck(new LocalDate(2012,5,1),null,InvoiceItemType.TAX,new BigDecimal("1.0")));
  add_AUTO_INVOICING_OFF_Tag(account.getId());
  busHandler.pushExpectedEvent(NextEvent.CHANGE);
  changeEntitlementAndCheckForCompletion(bpSubscription,"Assault-Rifle",BillingPeriod.MONTHLY,BillingActionPolicy.IMMEDIATE);
  assertListenerStatus();
  testInvoicePluginApi.addTaxItem();
  remove_AUTO_INVOICING_OFF_Tag(account.getId(),NextEvent.INVOICE,NextEvent.PAYMENT);
  invoiceChecker.checkInvoice(account.getId(),3,callContext,new ExpectedInvoiceItemCheck(new LocalDate(2012,5,1),new LocalDate(2012,6,1),InvoiceItemType.RECURRING,new BigDecimal("249.95")),new ExpectedInvoiceItemCheck(new LocalDate(2012,5,1),new LocalDate(2012,6,1),InvoiceItemType.REPAIR_ADJ,new BigDecimal("-29.95")),new ExpectedInvoiceItemCheck(new LocalDate(2012,5,1),new LocalDate(2012,6,1),InvoiceItemType.REPAIR_ADJ,new BigDecimal("-2.95")),new ExpectedInvoiceItemCheck(new LocalDate(2012,5,1),null,InvoiceItemType.TAX,new BigDecimal("1.0")));
  invoiceChecker.checkInvoice(account.getId(),4,callContext,new ExpectedInvoiceItemCheck(new LocalDate(2012,5,1),new LocalDate(2012,6,1),InvoiceItemType.RECURRING,new BigDecimal("599.95")),new ExpectedInvoiceItemCheck(new LocalDate(2012,5,1),new LocalDate(2012,6,1),InvoiceItemType.REPAIR_ADJ,new BigDecimal("-249.95")),new ExpectedInvoiceItemCheck(new LocalDate(2012,5,1),null,InvoiceItemType.TAX,new BigDecimal("1.0")));
}
