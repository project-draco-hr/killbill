{
  final BaseServerModuleBuilder builder=new BaseServerModuleBuilder().setJaxrsUriPattern("/" + SWAGGER_PATH + "|((/"+ SWAGGER_PATH+ "|"+ JaxRsResourceBase.PREFIX+ "|"+ JaxRsResourceBase.PLUGINS_PATH+ ")"+ "/.*)").addJaxrsResource("org.killbill.billing.jaxrs.mappers").addJaxrsResource("org.killbill.billing.jaxrs.resources").addJaxrsResource("com.wordnik.swagger.jersey.listing");
  builder.addJerseyFilter(RequestDataFilter.class.getName());
  builder.addJerseyFilter(MDCInsertingServletFilter.class.getName());
  builder.addJerseyFilter(KillbillMDCInsertingServletFilter.class.getName());
  builder.addJerseyParam("com.sun.jersey.config.feature.DisableWADL","true");
  if (config.isConfiguredToReturnGZIPResponses()) {
    logger.info("Enable http gzip responses");
    builder.addJerseyFilter(GZIPContentEncodingFilter.class.getName());
  }
  builder.addJerseyFilter(ProfilingContainerResponseFilter.class.getName());
  builder.addFilter("/*",ResponseCorsFilter.class);
  if (config.isMultiTenancyEnabled()) {
    builder.addFilter("/*",TenantFilter.class);
  }
  builder.addJerseyFilter("com.sun.jersey.api.container.filter.LoggingFilter");
  return builder.build();
}
