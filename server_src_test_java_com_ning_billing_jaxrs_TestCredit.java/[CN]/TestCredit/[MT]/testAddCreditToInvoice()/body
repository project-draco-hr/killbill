{
  final DateTime requestedDate=clock.getUTCNow();
  final DateTime effectiveDate=clock.getUTCNow();
  final CreditJson input=new CreditJson(BigDecimal.TEN,UUID.randomUUID(),UUID.randomUUID().toString(),requestedDate,effectiveDate,UUID.randomUUID().toString(),UUID.fromString(accountJson.getAccountId()));
  final String jsonInput=mapper.writeValueAsString(input);
  Response response=doPost(JaxrsResource.CREDITS_PATH,jsonInput,DEFAULT_EMPTY_QUERY,DEFAULT_HTTP_TIMEOUT_SEC);
  assertEquals(response.getStatusCode(),javax.ws.rs.core.Response.Status.CREATED.getStatusCode(),response.getResponseBody());
  final String location=response.getHeader("Location");
  assertNotNull(location);
  response=doGetWithUrl(location,DEFAULT_EMPTY_QUERY,DEFAULT_HTTP_TIMEOUT_SEC);
  assertEquals(response.getStatusCode(),javax.ws.rs.core.Response.Status.OK.getStatusCode());
  final CreditJson objFromJson=mapper.readValue(response.getResponseBody(),CreditJson.class);
  assertEquals(objFromJson.getAccountId(),input.getAccountId());
  assertEquals(objFromJson.getCreditAmount().compareTo(input.getCreditAmount()),0);
  assertEquals(objFromJson.getEffectiveDate().toLocalDate().compareTo(input.getEffectiveDate().toLocalDate()),0);
}
