{
  subscriptionsDao.inTransaction(new Transaction<Void,SubscriptionSqlDao>(){
    @Override public Void inTransaction(    SubscriptionSqlDao transactional,    TransactionStatus status) throws Exception {
      EventSqlDao transEventDao=transactional.become(EventSqlDao.class);
      for (      SubscriptionDataRepair cur : inRepair) {
        transactional.updateForRepair(cur.getId().toString(),cur.getActiveVersion(),cur.getStartDate().toDate(),cur.getBundleStartDate().toDate(),context);
        for (        EntitlementEvent event : cur.getInitialEvents()) {
          transEventDao.updateVersion(event.getId().toString(),cur.getActiveVersion(),context);
        }
        for (        EntitlementEvent event : cur.getNewEvents()) {
          transEventDao.insertEvent(event,context);
        }
      }
      return null;
    }
  }
);
}
