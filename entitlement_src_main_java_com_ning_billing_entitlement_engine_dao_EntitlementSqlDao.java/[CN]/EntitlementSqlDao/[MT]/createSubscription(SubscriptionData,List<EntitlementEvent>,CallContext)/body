{
  subscriptionsDao.inTransaction(new Transaction<Void,SubscriptionSqlDao>(){
    @Override public Void inTransaction(    SubscriptionSqlDao dao,    TransactionStatus status) throws Exception {
      dao.insertSubscription(subscription,context);
      EventSqlDao eventsDaoFromSameTransaction=dao.become(EventSqlDao.class);
      List<String> eventIds=new ArrayList<String>();
      for (      final EntitlementEvent cur : initialEvents) {
        eventsDaoFromSameTransaction.insertEvent(cur);
        eventIds.add(cur.getId().toString());
        recordFutureNotificationFromTransaction(dao,cur.getEffectiveDate(),new NotificationKey(){
          @Override public String toString(){
            return cur.getId().toString();
          }
        }
);
      }
      AuditSqlDao auditSqlDao=dao.become(AuditSqlDao.class);
      auditSqlDao.insertAuditFromTransaction(ENTITLEMENT_EVENTS_TABLE_NAME,eventIds,ChangeType.INSERT,context);
      return null;
    }
  }
);
}
