{
  eventsDao.inTransaction(new Transaction<Void,EventSqlDao>(){
    @Override public Void inTransaction(    EventSqlDao transEventDao,    TransactionStatus status) throws Exception {
      SubscriptionSqlDao transSubDao=transEventDao.become(SubscriptionSqlDao.class);
      BundleSqlDao transBundleDao=transEventDao.become(BundleSqlDao.class);
      final List<SubscriptionBundle> bundles=transBundleDao.getBundleFromAccount(accountId.toString());
      for (      SubscriptionBundle curBundle : bundles) {
        List<Subscription> subscriptions=transSubDao.getSubscriptionsFromBundleId(curBundle.getId().toString());
        for (        Subscription cur : subscriptions) {
          eventsDao.removeEvents(cur.getId().toString());
          transSubDao.removeSubscription(cur.getId().toString());
        }
        transBundleDao.removeBundle(curBundle.getId().toString());
      }
      return null;
    }
  }
);
}
