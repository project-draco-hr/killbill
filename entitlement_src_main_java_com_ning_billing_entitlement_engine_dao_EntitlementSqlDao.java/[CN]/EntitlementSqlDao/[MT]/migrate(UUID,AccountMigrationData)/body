{
  eventsDao.inTransaction(new Transaction<Void,EventSqlDao>(){
    @Override public Void inTransaction(    EventSqlDao transEventDao,    TransactionStatus status) throws Exception {
      SubscriptionSqlDao transSubDao=transEventDao.become(SubscriptionSqlDao.class);
      BundleSqlDao transBundleDao=transEventDao.become(BundleSqlDao.class);
      undoMigrationFromTransaction(accountId,transEventDao,transBundleDao,transSubDao);
      for (      BundleMigrationData curBundle : accountData.getData()) {
        SubscriptionBundleData bundleData=curBundle.getData();
        for (        SubscriptionMigrationData curSubscription : curBundle.getSubscriptions()) {
          SubscriptionData subData=curSubscription.getData();
          for (          EntitlementEvent curEvent : curSubscription.getInitialEvents()) {
            transEventDao.insertEvent(curEvent);
          }
          transSubDao.insertSubscription(subData);
        }
        transBundleDao.insertBundle(bundleData);
      }
      return null;
    }
  }
);
}
