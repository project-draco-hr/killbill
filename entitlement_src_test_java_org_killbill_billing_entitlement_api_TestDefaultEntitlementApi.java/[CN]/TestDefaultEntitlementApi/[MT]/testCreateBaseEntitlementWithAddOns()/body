{
  final LocalDate initialDate=new LocalDate(2013,8,7);
  clock.setDay(initialDate);
  final Account account=accountApi.createAccount(getAccountData(7),callContext);
  final PlanPhaseSpecifier baseSpec=new PlanPhaseSpecifier("Pistol",ProductCategory.BASE,BillingPeriod.MONTHLY,PriceListSet.DEFAULT_PRICELIST_NAME,null);
  final PlanPhaseSpecifier addOnSpec=new PlanPhaseSpecifier("Cleaning",ProductCategory.ADD_ON,BillingPeriod.MONTHLY,PriceListSet.DEFAULT_PRICELIST_NAME,null);
  EntitlementSpecifier baseEntitlementSpecifier=new DefaultEntitlementSpecifier("baseExternalKey",baseSpec,null);
  EntitlementSpecifier addOnEntitlementSpecifier=new DefaultEntitlementSpecifier("addOnExternalKey",addOnSpec,null);
  final List<EntitlementSpecifier> specifierList=new ArrayList<EntitlementSpecifier>();
  specifierList.add(baseEntitlementSpecifier);
  specifierList.add(addOnEntitlementSpecifier);
  testListener.pushExpectedEvents(NextEvent.CREATE,NextEvent.CREATE);
  final Entitlement entitlement=entitlementApi.createBaseEntitlementWithAddOns(account.getId(),specifierList,initialDate,ImmutableList.<PluginProperty>of(),callContext);
  assertListenerStatus();
  assertNotNull(entitlement);
  final List<Entitlement> allEntitlementsForBundle=entitlementApi.getAllEntitlementsForBundle(entitlement.getBundleId(),callContext);
  assertTrue(allEntitlementsForBundle.size() == 2);
  final Entitlement baseEntitlement=allEntitlementsForBundle.get(0);
  final Entitlement addOnEntitlement=allEntitlementsForBundle.get(1);
  assertEquals(baseEntitlement.getLastActiveProduct().getName(),"Pistol");
  assertEquals(baseEntitlement.getLastActiveProductCategory(),ProductCategory.BASE);
  assertEquals(addOnEntitlement.getLastActiveProduct().getName(),"Cleaning");
  assertEquals(addOnEntitlement.getLastActiveProductCategory(),ProductCategory.ADD_ON);
}
