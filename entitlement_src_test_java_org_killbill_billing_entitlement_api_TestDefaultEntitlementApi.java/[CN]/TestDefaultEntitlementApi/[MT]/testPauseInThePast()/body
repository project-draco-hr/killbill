{
  final LocalDate initialDate=new LocalDate(2013,8,7);
  clock.setDay(initialDate);
  final Account account=accountApi.createAccount(getAccountData(7),callContext);
  testListener.pushExpectedEvent(NextEvent.CREATE);
  final PlanPhaseSpecifier spec=new PlanPhaseSpecifier("Shotgun",ProductCategory.BASE,BillingPeriod.ANNUAL,PriceListSet.DEFAULT_PRICELIST_NAME,null);
  final Entitlement baseEntitlement=entitlementApi.createBaseEntitlement(account.getId(),spec,account.getExternalKey(),null,initialDate,ImmutableList.<PluginProperty>of(),callContext);
  assertListenerStatus();
  testListener.pushExpectedEvents(NextEvent.PHASE);
  clock.setDay(new LocalDate(2013,9,7));
  assertListenerStatus();
  clock.setDay(new LocalDate(2013,9,11));
  try {
    final LocalDate pauseDateInThePast=new LocalDate(2013,9,10);
    entitlementApi.pause(baseEntitlement.getBundleId(),pauseDateInThePast,ImmutableList.<PluginProperty>of(),callContext);
    Assert.fail("Operation pause with date in the past should fail");
  }
 catch (  final EntitlementApiException expected) {
  }
}
