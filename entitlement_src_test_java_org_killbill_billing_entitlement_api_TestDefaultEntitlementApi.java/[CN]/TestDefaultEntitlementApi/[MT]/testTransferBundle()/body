{
  final LocalDate initialDate=new LocalDate(2013,8,7);
  clock.setDay(initialDate);
  final Account accountDesc=createAccount(getAccountData(15));
  final Account accountSrc=createAccount(getAccountData(7));
  final PlanPhaseSpecifier spec=new PlanPhaseSpecifier("Shotgun",ProductCategory.BASE,BillingPeriod.ANNUAL,PriceListSet.DEFAULT_PRICELIST_NAME,null);
  testListener.pushExpectedEvent(NextEvent.CREATE);
  final Entitlement baseEntitlement=entitlementApi.createBaseEntitlement(accountSrc.getId(),spec,accountSrc.getExternalKey(),null,initialDate,ImmutableList.<PluginProperty>of(),callContext);
  assertListenerStatus();
  final DateTime ctd=clock.getUTCNow().plusDays(30).plusMonths(1);
  testListener.pushExpectedEvent(NextEvent.PHASE);
  clock.addDays(32);
  subscriptionInternalApi.setChargedThroughDate(baseEntitlement.getId(),ctd,internalCallContext);
  assertListenerStatus();
  final LocalDate effectiveDate=new LocalDate(clock.getUTCNow(),accountSrc.getTimeZone());
  testListener.pushExpectedEvents(NextEvent.TRANSFER,NextEvent.BLOCK);
  final UUID newBundleId=entitlementApi.transferEntitlementsOverrideBillingPolicy(accountSrc.getId(),accountDesc.getId(),baseEntitlement.getExternalKey(),effectiveDate,BillingActionPolicy.END_OF_TERM,ImmutableList.<PluginProperty>of(),callContext);
  assertListenerStatus();
  final Entitlement oldBaseEntitlement=entitlementApi.getAllEntitlementsForAccountIdAndExternalKey(accountSrc.getId(),accountSrc.getExternalKey(),callContext).get(0);
  assertEquals(oldBaseEntitlement.getEffectiveEndDate(),effectiveDate);
  assertEquals(oldBaseEntitlement.getState(),EntitlementState.CANCELLED);
  final List<Entitlement> entitlements=entitlementApi.getAllEntitlementsForBundle(newBundleId,callContext);
  assertEquals(entitlements.size(),1);
  final Entitlement newBaseEntitlement=entitlements.get(0);
  assertEquals(newBaseEntitlement.getState(),EntitlementState.ACTIVE);
  assertEquals(newBaseEntitlement.getEffectiveStartDate(),effectiveDate);
  assertEquals(newBaseEntitlement.getEffectiveEndDate(),null);
}
