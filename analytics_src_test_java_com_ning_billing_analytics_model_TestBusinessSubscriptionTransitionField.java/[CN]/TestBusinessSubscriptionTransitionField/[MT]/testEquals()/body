{
  final String accountKey=UUID.randomUUID().toString();
  final String externalKey=UUID.randomUUID().toString();
  final String name=UUID.randomUUID().toString();
  final String value=UUID.randomUUID().toString();
  final BusinessSubscriptionTransitionField subscriptionTransitionField=new BusinessSubscriptionTransitionField(accountKey,externalKey,name,value);
  Assert.assertSame(subscriptionTransitionField,subscriptionTransitionField);
  Assert.assertEquals(subscriptionTransitionField,subscriptionTransitionField);
  Assert.assertTrue(subscriptionTransitionField.equals(subscriptionTransitionField));
  Assert.assertEquals(subscriptionTransitionField.getAccountKey(),accountKey);
  Assert.assertEquals(subscriptionTransitionField.getExternalKey(),externalKey);
  Assert.assertEquals(subscriptionTransitionField.getName(),name);
  Assert.assertEquals(subscriptionTransitionField.getValue(),value);
  final BusinessSubscriptionTransitionField otherSubscriptionField=new BusinessSubscriptionTransitionField(UUID.randomUUID().toString(),UUID.randomUUID().toString(),UUID.randomUUID().toString(),UUID.randomUUID().toString());
  Assert.assertFalse(subscriptionTransitionField.equals(otherSubscriptionField));
}
