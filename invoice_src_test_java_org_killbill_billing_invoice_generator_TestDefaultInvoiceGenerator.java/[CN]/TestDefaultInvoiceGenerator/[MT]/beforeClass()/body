{
  super.beforeClass();
  final Clock clock=new DefaultClock();
  final InvoiceConfig invoiceConfig=new InvoiceConfig(){
    @Override public int getNumberOfMonthsInFuture(){
      return 36;
    }
    @Override public boolean isEmailNotificationsEnabled(){
      return false;
    }
    @Override public TimeSpan getDryRunNotificationSchedule(){
      return new TimeSpan("0s");
    }
    @Override public int getMaxRawUsagePreviousPeriod(){
      return -1;
    }
    @Override public int getMaxGlobalLockRetries(){
      return 10;
    }
  }
;
  this.account=new MockAccountBuilder().name(UUID.randomUUID().toString().substring(1,8)).firstNameLength(6).email(UUID.randomUUID().toString().substring(1,8)).phone(UUID.randomUUID().toString().substring(1,8)).migrated(false).isNotifiedForInvoices(true).externalKey(UUID.randomUUID().toString().substring(1,8)).billingCycleDayLocal(31).currency(Currency.USD).paymentMethodId(UUID.randomUUID()).timeZone(DateTimeZone.UTC).build();
}
