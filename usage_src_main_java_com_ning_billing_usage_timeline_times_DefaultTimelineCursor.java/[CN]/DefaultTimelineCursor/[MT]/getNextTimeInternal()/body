{
  try {
    if (repeatCount > 0) {
      repeatCount--;
      lastValue+=delta;
    }
 else {
      final int nextOpcode=timelineDataStream.read();
      byteCursor++;
      if (nextOpcode == -1) {
        return nextOpcode;
      }
      if (nextOpcode == TimelineOpcode.FULL_TIME.getOpcodeIndex()) {
        lastValue=timelineDataStream.readInt();
        byteCursor+=4;
      }
 else       if (nextOpcode == TimelineOpcode.REPEATED_DELTA_TIME_BYTE.getOpcodeIndex()) {
        repeatCount=timelineDataStream.readUnsignedByte() - 1;
        delta=timelineDataStream.read();
        byteCursor+=2;
        lastValue+=delta;
      }
 else       if (nextOpcode == TimelineOpcode.REPEATED_DELTA_TIME_SHORT.getOpcodeIndex()) {
        repeatCount=timelineDataStream.readUnsignedShort() - 1;
        delta=timelineDataStream.read();
        byteCursor+=3;
        lastValue+=delta;
      }
 else       if (nextOpcode <= TimelineOpcode.MAX_DELTA_TIME) {
        lastValue+=nextOpcode;
      }
 else {
        throw new IllegalStateException(String.format("In TimeIterator.getNextTime(), unknown opcode %x at offset %d",nextOpcode,byteCursor));
      }
    }
    sampleNumber++;
    if (sampleNumber > sampleCount) {
      log.error("In TimeIterator.getNextTime(), after update, sampleNumber %d > sampleCount %d",sampleNumber,sampleCount);
    }
    return lastValue;
  }
 catch (  IOException e) {
    log.error("IOException in TimeIterator.getNextTime()",e);
    return -1;
  }
}
