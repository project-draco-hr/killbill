{
  final LocalDate startDate=new LocalDate(2014,1,1);
  final LocalDate endDate=new LocalDate(2014,2,1);
  final LocalDate repairDate1=new LocalDate(2014,1,23);
  final LocalDate repairDate2=new LocalDate(2014,1,26);
  final BigDecimal rate1=new BigDecimal("12.00");
  final BigDecimal amount1=rate1;
  final BigDecimal rate2=new BigDecimal("14.85");
  final BigDecimal amount2=rate2;
  final BigDecimal rate3=new BigDecimal("19.23");
  final BigDecimal amount3=rate3;
  final InvoiceItem initial=new RecurringInvoiceItem(invoiceId,accountId,bundleId,subscriptionId,planName,phaseName,startDate,endDate,amount1,rate1,currency);
  final InvoiceItem newItem1=new RecurringInvoiceItem(invoiceId,accountId,bundleId,subscriptionId,planName,phaseName,repairDate1,endDate,amount2,rate2,currency);
  final InvoiceItem repair1=new RepairAdjInvoiceItem(invoiceId,accountId,repairDate1,endDate,amount1.negate(),currency,initial.getId());
  final InvoiceItem newItem2=new RecurringInvoiceItem(invoiceId,accountId,bundleId,subscriptionId,planName,phaseName,repairDate2,endDate,amount3,rate3,currency);
  final InvoiceItem repair2=new RepairAdjInvoiceItem(invoiceId,accountId,repairDate2,endDate,amount2.negate(),currency,initial.getId());
  final List<InvoiceItem> expectedResult=Lists.newLinkedList();
  final InvoiceItem expected1=new RecurringInvoiceItem(invoiceId,accountId,bundleId,subscriptionId,planName,phaseName,startDate,repairDate1,new BigDecimal("8.52"),rate1,currency);
  expectedResult.add(expected1);
  final InvoiceItem expected2=new RecurringInvoiceItem(invoiceId,accountId,bundleId,subscriptionId,planName,phaseName,repairDate1,repairDate2,new BigDecimal("4.95"),rate2,currency);
  expectedResult.add(expected2);
  final InvoiceItem expected3=new RecurringInvoiceItem(invoiceId,accountId,bundleId,subscriptionId,planName,phaseName,repairDate2,endDate,amount3,rate3,currency);
  expectedResult.add(expected3);
  SubscriptionItemTree tree=new SubscriptionItemTree(subscriptionId,invoiceId);
  tree.addItem(initial);
  tree.addItem(newItem1);
  tree.addItem(repair1);
  tree.addItem(newItem2);
  tree.addItem(repair2);
  tree.build();
  verifyResult(tree.getView(),expectedResult);
  tree=new SubscriptionItemTree(subscriptionId,invoiceId);
  tree.addItem(repair2);
  tree.addItem(newItem1);
  tree.addItem(newItem2);
  tree.addItem(repair1);
  tree.addItem(initial);
  tree.build();
  verifyResult(tree.getView(),expectedResult);
  tree=new SubscriptionItemTree(subscriptionId,invoiceId);
  tree.addItem(repair1);
  tree.addItem(newItem1);
  tree.addItem(initial);
  tree.addItem(repair2);
  tree.addItem(newItem2);
  tree.build();
  verifyResult(tree.getView(),expectedResult);
}
