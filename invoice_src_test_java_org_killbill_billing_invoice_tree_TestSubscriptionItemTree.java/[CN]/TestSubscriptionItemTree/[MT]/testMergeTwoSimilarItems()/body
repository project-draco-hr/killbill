{
  final LocalDate startDate=new LocalDate(2014,1,1);
  final LocalDate endDate=new LocalDate(2014,2,1);
  final BigDecimal monthlyRate=new BigDecimal("12.00");
  final BigDecimal monthlyAmount=monthlyRate;
  final SubscriptionItemTree tree=new SubscriptionItemTree(subscriptionId,invoiceId);
  final InvoiceItem monthly1=new RecurringInvoiceItem(invoiceId,accountId,bundleId,subscriptionId,planName,phaseName,startDate,endDate,monthlyAmount,monthlyRate,currency);
  tree.addItem(monthly1);
  tree.flatten(true);
  final InvoiceItem proposed1=new RecurringInvoiceItem(invoiceId,accountId,bundleId,subscriptionId,planName,phaseName,startDate,endDate,monthlyAmount,monthlyRate,currency);
  tree.mergeProposedItem(proposed1);
  tree.buildForMerge();
  final List<InvoiceItem> expectedResult=Lists.newLinkedList();
  verifyResult(tree.getView(),expectedResult);
}
