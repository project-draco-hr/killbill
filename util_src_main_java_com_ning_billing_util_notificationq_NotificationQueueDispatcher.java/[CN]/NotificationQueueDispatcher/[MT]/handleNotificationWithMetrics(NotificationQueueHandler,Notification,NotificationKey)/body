{
  final String[] parts=notification.getQueueName().split(":");
  final String metricName=new StringBuilder(parts[0].substring(0,3)).append("-").append(parts[1]).append("-process-time").toString();
  final Histogram perQueueHistogramProcessingTime;
synchronized (perQueueProcessingTime) {
    if (!perQueueProcessingTime.containsKey(notification.getQueueName())) {
      perQueueProcessingTime.put(notification.getQueueName(),Metrics.newHistogram(NotificationQueueDispatcher.class,metricName));
    }
    perQueueHistogramProcessingTime=perQueueProcessingTime.get(notification.getQueueName());
  }
  final DateTime beforeProcessing=clock.getUTCNow();
  handler.handleReadyNotification(key,notification.getEffectiveDate(),notification.getFutureUserToken(),notification.getAccountRecordId(),notification.getTenantRecordId());
  final DateTime afterProcessing=clock.getUTCNow();
  perQueueHistogramProcessingTime.update(afterProcessing.getMillis() - beforeProcessing.getMillis());
  processedNotificationsSinceStart.inc();
}
