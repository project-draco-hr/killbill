{
  BigDecimal positiveRepairedAmount=BigDecimal.ZERO;
  final Collection<InvoiceItemModelDao> repairedItems=Collections2.filter(invoiceItems,new Predicate<InvoiceItemModelDao>(){
    @Override public boolean apply(    final InvoiceItemModelDao input){
      return (input.getType() == InvoiceItemType.REPAIR_ADJ && input.getLinkedItemId().equals(invoiceItem));
    }
  }
);
  for (  final InvoiceItemModelDao cur : repairedItems) {
    positiveRepairedAmount=positiveRepairedAmount.add(cur.getAmount().negate());
  }
  return (positiveRepairedAmount.compareTo(requestedPositiveAmountToAdjust) >= 0) ? BigDecimal.ZERO : requestedPositiveAmountToAdjust.subtract(positiveRepairedAmount);
}
