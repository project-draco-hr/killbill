{
  bind(ConfigSource.class).toInstance(configSource);
  bind(KillbillServerConfig.class).toInstance(serverConfig);
  final DaoConfig daoConfig=new ConfigurationObjectFactory(configSource).build(DaoConfig.class);
  bind(DaoConfig.class).toInstance(daoConfig);
  final EmbeddedDBProvider embeddedDBProvider=new EmbeddedDBProvider(daoConfig);
  final EmbeddedDB embeddedDB=embeddedDBProvider.get();
  bind(EmbeddedDB.class).toInstance(embeddedDB);
  install(new EmailModule(configSource));
  install(new CacheModule(configSource));
  install(new GlobalLockerModule(embeddedDB.getDBEngine()));
  install(new CustomFieldModule());
  install(new AuditModule());
  install(new CatalogModule(configSource));
  install(new BusModule(configSource));
  install(new NotificationQueueModule(configSource));
  install(new CallContextModule());
  install(new DefaultAccountModule(configSource));
  install(new DefaultInvoiceModule(configSource));
  install(new TemplateModule());
  install(new DefaultSubscriptionModule(configSource));
  install(new DefaultEntitlementModule(configSource));
  install(new PaymentModule(configSource));
  install(new BeatrixModule(configSource));
  install(new DefaultJunctionModule(configSource));
  install(new DefaultOverdueModule(configSource));
  install(new CurrencyModule(configSource));
  install(new TenantModule(configSource));
  install(new ExportModule());
  install(new TagStoreModule());
  install(new NonEntityDaoModule());
  install(new DefaultOSGIModule(configSource));
  install(new UsageModule(configSource));
  install(new RecordIdModule());
  install(new KillBillShiroWebModule(servletContext,configSource));
  install(new KillBillShiroAopModule());
  install(new SecurityModule(configSource));
  installClock();
}
