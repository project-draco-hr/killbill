{
  final ChargebackJson input=new ChargebackJson(new DateTime(DateTimeZone.UTC),new DateTime(DateTimeZone.UTC),BigDecimal.TEN,UUID.randomUUID().toString(),UUID.randomUUID().toString());
  final String jsonInput=mapper.writeValueAsString(input);
  Response response=doPost(JaxrsResource.CHARGEBACKS_PATH,jsonInput,DEFAULT_EMPTY_QUERY,DEFAULT_HTTP_TIMEOUT_SEC);
  assertEquals(response.getStatusCode(),javax.ws.rs.core.Response.Status.OK.getStatusCode(),response.getResponseBody());
  final String location=response.getHeader("Location");
  assertNotNull(location);
  response=doGetWithUrl(location,DEFAULT_EMPTY_QUERY,DEFAULT_HTTP_TIMEOUT_SEC);
  verifySingleChargebackResponse(response,input);
  response=doGet(JaxrsResource.CHARGEBACKS_PATH + "/accounts/" + accountId,DEFAULT_EMPTY_QUERY,DEFAULT_HTTP_TIMEOUT_SEC);
  verifyCollectionChargebackResponse(response,input);
  response=doGet(JaxrsResource.CHARGEBACKS_PATH + "/payments/" + input.getPaymentId(),DEFAULT_EMPTY_QUERY,DEFAULT_HTTP_TIMEOUT_SEC);
  verifyCollectionChargebackResponse(response,input);
}
