{
  if (permissions == null || permissions.isEmpty()) {
    throw new SecurityApiException(ErrorCode.SECURITY_INVALID_PERMISSIONS,"null");
  }
  final HashMap<String,Set<String>> groupToValues=new HashMap<String,Set<String>>();
  for (  final String curPerm : permissions) {
    if (curPerm.equals("*")) {
      return ImmutableList.of("*");
    }
    final String[] permissionParts=curPerm.split(":");
    if (permissionParts.length != 1 && permissionParts.length != 2) {
      throw new SecurityApiException(ErrorCode.SECURITY_INVALID_PERMISSIONS,curPerm);
    }
    boolean resolved=false;
    for (    final Permission cur : Permission.values()) {
      if (resolved) {
        break;
      }
      if (!cur.getGroup().equals(permissionParts[0])) {
        continue;
      }
      Set<String> groupPermissions=groupToValues.get(permissionParts[0]);
      if (groupPermissions == null) {
        groupPermissions=new HashSet<String>();
        groupToValues.put(permissionParts[0],groupPermissions);
      }
      if (permissionParts.length == 1 || permissionParts[1].equals("*")) {
        groupPermissions.clear();
        groupPermissions.add("*");
        resolved=true;
        break;
      }
      if (cur.getValue().equals(permissionParts[1])) {
        groupPermissions.add(permissionParts[1]);
        resolved=true;
        break;
      }
    }
    if (!resolved) {
      throw new SecurityApiException(ErrorCode.SECURITY_INVALID_PERMISSIONS,curPerm);
    }
  }
  final List<String> sanitizedPermissions=new ArrayList<String>();
  for (  String group : groupToValues.keySet()) {
    final Set<String> groupPermissions=groupToValues.get(group);
    for (    String value : groupPermissions) {
      sanitizedPermissions.add(String.format("%s:%s",group,value));
    }
  }
  return sanitizedPermissions;
}
