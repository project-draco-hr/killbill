{
  final InvoiceItem invoiceItem=Mockito.mock(InvoiceItem.class);
  Mockito.when(invoiceItem.getInvoiceId()).thenReturn(UUID.randomUUID());
  Mockito.when(invoiceItem.getLinkedItemId()).thenReturn(UUID.randomUUID());
  Mockito.when(invoiceItem.getAccountId()).thenReturn(UUID.randomUUID());
  Mockito.when(invoiceItem.getBundleId()).thenReturn(UUID.randomUUID());
  Mockito.when(invoiceItem.getSubscriptionId()).thenReturn(UUID.randomUUID());
  Mockito.when(invoiceItem.getPlanName()).thenReturn(UUID.randomUUID().toString());
  Mockito.when(invoiceItem.getPhaseName()).thenReturn(UUID.randomUUID().toString());
  Mockito.when(invoiceItem.getDescription()).thenReturn(UUID.randomUUID().toString());
  Mockito.when(invoiceItem.getStartDate()).thenReturn(clock.getUTCToday());
  Mockito.when(invoiceItem.getEndDate()).thenReturn(clock.getUTCToday());
  Mockito.when(invoiceItem.getAmount()).thenReturn(BigDecimal.TEN);
  Mockito.when(invoiceItem.getCurrency()).thenReturn(Currency.EUR);
  return invoiceItem;
}
