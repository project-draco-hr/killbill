{
  final TenantContext tenantContext=context.createContext(request);
  final Pagination<Tag> tags=tagUserApi.getTags(offset,limit,tenantContext);
  final URI nextPageUri=uriBuilder.nextPage(TagResource.class,"getTags",tags.getNextOffset(),limit,ImmutableMap.<String,String>of(QUERY_AUDIT,auditMode.getLevel().toString()));
  final Map<UUID,TagDefinition> tagDefinitionsCache=new HashMap<UUID,TagDefinition>();
  for (  final TagDefinition tagDefinition : tagUserApi.getTagDefinitions(tenantContext)) {
    tagDefinitionsCache.put(tagDefinition.getId(),tagDefinition);
  }
  return buildStreamingPaginationResponse(tags,new Function<Tag,TagJson>(){
    @Override public TagJson apply(    final Tag tag){
      final TagDefinition tagDefinition=tagDefinitionsCache.get(tag.getTagDefinitionId());
      final List<AuditLog> auditLogs=auditUserApi.getAuditLogs(tag.getId(),ObjectType.TAG,auditMode.getLevel(),tenantContext);
      return new TagJson(tag,tagDefinition,auditLogs);
    }
  }
,nextPageUri);
}
