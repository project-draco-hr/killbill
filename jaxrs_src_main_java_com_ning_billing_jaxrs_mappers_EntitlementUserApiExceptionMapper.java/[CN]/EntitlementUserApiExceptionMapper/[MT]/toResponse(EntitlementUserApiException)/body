{
  if (exception.getCode() == ErrorCode.ENT_ACCOUNT_IS_OVERDUE_BLOCKED.getCode()) {
    return buildBadRequestResponse(exception,uriInfo);
  }
 else   if (exception.getCode() == ErrorCode.ENT_BUNDLE_IS_OVERDUE_BLOCKED.getCode()) {
    return buildBadRequestResponse(exception,uriInfo);
  }
 else   if (exception.getCode() == ErrorCode.ENT_CANCEL_BAD_STATE.getCode()) {
    return buildInternalErrorResponse(exception,uriInfo);
  }
 else   if (exception.getCode() == ErrorCode.ENT_CHANGE_DRY_RUN_NOT_BP.getCode()) {
    return buildBadRequestResponse(exception,uriInfo);
  }
 else   if (exception.getCode() == ErrorCode.ENT_CHANGE_FUTURE_CANCELLED.getCode()) {
    return buildBadRequestResponse(exception,uriInfo);
  }
 else   if (exception.getCode() == ErrorCode.ENT_CHANGE_NON_ACTIVE.getCode()) {
    return buildBadRequestResponse(exception,uriInfo);
  }
 else   if (exception.getCode() == ErrorCode.ENT_CREATE_AO_ALREADY_INCLUDED.getCode()) {
    return buildBadRequestResponse(exception,uriInfo);
  }
 else   if (exception.getCode() == ErrorCode.ENT_CREATE_AO_BP_NON_ACTIVE.getCode()) {
    return buildBadRequestResponse(exception,uriInfo);
  }
 else   if (exception.getCode() == ErrorCode.ENT_CREATE_AO_NOT_AVAILABLE.getCode()) {
    return buildBadRequestResponse(exception,uriInfo);
  }
 else   if (exception.getCode() == ErrorCode.ENT_CREATE_BAD_PHASE.getCode()) {
    return buildBadRequestResponse(exception,uriInfo);
  }
 else   if (exception.getCode() == ErrorCode.ENT_CREATE_BP_EXISTS.getCode()) {
    return buildBadRequestResponse(exception,uriInfo);
  }
 else   if (exception.getCode() == ErrorCode.ENT_CREATE_NO_BP.getCode()) {
    return buildBadRequestResponse(exception,uriInfo);
  }
 else   if (exception.getCode() == ErrorCode.ENT_CREATE_NO_BUNDLE.getCode()) {
    return buildBadRequestResponse(exception,uriInfo);
  }
 else   if (exception.getCode() == ErrorCode.ENT_GET_INVALID_BUNDLE_ID.getCode()) {
    return buildNotFoundResponse(exception,uriInfo);
  }
 else   if (exception.getCode() == ErrorCode.ENT_GET_INVALID_BUNDLE_KEY.getCode()) {
    return buildNotFoundResponse(exception,uriInfo);
  }
 else   if (exception.getCode() == ErrorCode.ENT_GET_NO_BUNDLE_FOR_SUBSCRIPTION.getCode()) {
    return buildNotFoundResponse(exception,uriInfo);
  }
 else   if (exception.getCode() == ErrorCode.ENT_GET_NO_SUCH_BASE_SUBSCRIPTION.getCode()) {
    return buildNotFoundResponse(exception,uriInfo);
  }
 else   if (exception.getCode() == ErrorCode.ENT_INVALID_REQUESTED_DATE.getCode()) {
    return buildBadRequestResponse(exception,uriInfo);
  }
 else   if (exception.getCode() == ErrorCode.ENT_INVALID_REQUESTED_FUTURE_DATE.getCode()) {
    return buildBadRequestResponse(exception,uriInfo);
  }
 else   if (exception.getCode() == ErrorCode.ENT_INVALID_SUBSCRIPTION_ID.getCode()) {
    return buildNotFoundResponse(exception,uriInfo);
  }
 else   if (exception.getCode() == ErrorCode.ENT_RECREATE_BAD_STATE.getCode()) {
    return buildInternalErrorResponse(exception,uriInfo);
  }
 else   if (exception.getCode() == ErrorCode.ENT_REPAIR_AO_CREATE_BEFORE_BP_START.getCode()) {
    return buildBadRequestResponse(exception,uriInfo);
  }
 else   if (exception.getCode() == ErrorCode.ENT_REPAIR_BP_RECREATE_MISSING_AO.getCode()) {
    return buildBadRequestResponse(exception,uriInfo);
  }
 else   if (exception.getCode() == ErrorCode.ENT_REPAIR_BP_RECREATE_MISSING_AO_CREATE.getCode()) {
    return buildBadRequestResponse(exception,uriInfo);
  }
 else   if (exception.getCode() == ErrorCode.ENT_REPAIR_INVALID_DELETE_SET.getCode()) {
    return buildBadRequestResponse(exception,uriInfo);
  }
 else   if (exception.getCode() == ErrorCode.ENT_REPAIR_MISSING_AO_DELETE_EVENT.getCode()) {
    return buildBadRequestResponse(exception,uriInfo);
  }
 else   if (exception.getCode() == ErrorCode.ENT_REPAIR_NEW_EVENT_BEFORE_LAST_AO_REMAINING.getCode()) {
    return buildBadRequestResponse(exception,uriInfo);
  }
 else   if (exception.getCode() == ErrorCode.ENT_REPAIR_NEW_EVENT_BEFORE_LAST_BP_REMAINING.getCode()) {
    return buildBadRequestResponse(exception,uriInfo);
  }
 else   if (exception.getCode() == ErrorCode.ENT_REPAIR_NO_ACTIVE_SUBSCRIPTIONS.getCode()) {
    return buildBadRequestResponse(exception,uriInfo);
  }
 else   if (exception.getCode() == ErrorCode.ENT_REPAIR_NON_EXISTENT_DELETE_EVENT.getCode()) {
    return buildNotFoundResponse(exception,uriInfo);
  }
 else   if (exception.getCode() == ErrorCode.ENT_REPAIR_SUB_EMPTY.getCode()) {
    return buildBadRequestResponse(exception,uriInfo);
  }
 else   if (exception.getCode() == ErrorCode.ENT_REPAIR_SUB_RECREATE_NOT_EMPTY.getCode()) {
    return buildBadRequestResponse(exception,uriInfo);
  }
 else   if (exception.getCode() == ErrorCode.ENT_REPAIR_UNKNOWN_BUNDLE.getCode()) {
    return buildNotFoundResponse(exception,uriInfo);
  }
 else   if (exception.getCode() == ErrorCode.ENT_REPAIR_UNKNOWN_SUBSCRIPTION.getCode()) {
    return buildNotFoundResponse(exception,uriInfo);
  }
 else   if (exception.getCode() == ErrorCode.ENT_REPAIR_UNKNOWN_TYPE.getCode()) {
    return buildNotFoundResponse(exception,uriInfo);
  }
 else   if (exception.getCode() == ErrorCode.ENT_REPAIR_VIEW_CHANGED.getCode()) {
    return buildBadRequestResponse(exception,uriInfo);
  }
 else   if (exception.getCode() == ErrorCode.ENT_UNCANCEL_BAD_STATE.getCode()) {
    return buildInternalErrorResponse(exception,uriInfo);
  }
 else {
    return buildBadRequestResponse(exception,uriInfo);
  }
}
