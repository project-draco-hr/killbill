{
  final DateTime utcNow=retryableDirectPaymentAutomatonRunner.clock.getUTCNow();
  Preconditions.checkState(stateContext.getDirectPaymentExternalKey() != null || stateContext.getDirectPaymentId() != null);
  if (stateContext.getDirectPaymentExternalKey() == null) {
    final PaymentModelDao payment=paymentDao.getDirectPayment(stateContext.getDirectPaymentId(),stateContext.internalCallContext);
    Preconditions.checkState(payment != null);
    stateContext.setDirectPaymentExternalKey(payment.getExternalKey());
  }
  if (state.getName().equals(initialState.getName()) || state.getName().equals(retriedState.getName())) {
    try {
      final byte[] serializedProperties=PluginPropertySerializer.serialize(stateContext.getProperties());
      final PaymentAttemptModelDao attempt=new PaymentAttemptModelDao(stateContext.getAccount().getId(),stateContext.getPaymentMethodId(),utcNow,utcNow,stateContext.getDirectPaymentExternalKey(),null,stateContext.directPaymentTransactionExternalKey,transactionType,initialState.getName(),stateContext.getAmount(),stateContext.getCurrency(),stateContext.getPluginName(),serializedProperties);
      retryableDirectPaymentAutomatonRunner.paymentDao.insertPaymentAttemptWithProperties(attempt,stateContext.internalCallContext);
      stateContext.setAttemptId(attempt.getId());
    }
 catch (    PluginPropertySerializerException e) {
      throw new OperationException(e);
    }
  }
}
