{
  final Invoice invoice=Mockito.mock(Invoice.class);
  Mockito.when(invoice.getChargedAmount()).thenReturn(BigDecimal.TEN);
  Mockito.when(invoice.getCurrency()).thenReturn(Currency.MXN);
  Mockito.when(invoice.getCreditedAmount()).thenReturn(BigDecimal.ONE);
  Mockito.when(invoice.getRefundedAmount()).thenReturn(BigDecimal.ONE);
  Mockito.when(invoice.getId()).thenReturn(UUID.randomUUID());
  Mockito.when(invoice.getInvoiceDate()).thenReturn(clock.getUTCToday());
  Mockito.when(invoice.getTargetDate()).thenReturn(clock.getUTCToday());
  Mockito.when(invoice.getInvoiceNumber()).thenReturn(Integer.MAX_VALUE);
  Mockito.when(invoice.getBalance()).thenReturn(BigDecimal.ZERO);
  Mockito.when(invoice.getAccountId()).thenReturn(UUID.randomUUID());
  final InvoiceJsonSimple invoiceJsonSimple=new InvoiceJsonSimple(invoice);
  Assert.assertEquals(invoiceJsonSimple.getAmount(),invoice.getChargedAmount());
  Assert.assertEquals(invoiceJsonSimple.getCreditAdj(),invoice.getCreditedAmount());
  Assert.assertEquals(invoiceJsonSimple.getRefundAdj(),invoice.getRefundedAmount());
  Assert.assertEquals(invoiceJsonSimple.getInvoiceId(),invoice.getId().toString());
  Assert.assertEquals(invoiceJsonSimple.getInvoiceDate(),invoice.getInvoiceDate());
  Assert.assertEquals(invoiceJsonSimple.getTargetDate(),invoice.getTargetDate());
  Assert.assertEquals(invoiceJsonSimple.getInvoiceNumber(),String.valueOf(invoice.getInvoiceNumber()));
  Assert.assertEquals(invoiceJsonSimple.getBalance(),invoice.getBalance());
  Assert.assertEquals(invoiceJsonSimple.getAccountId(),invoice.getAccountId().toString());
  Assert.assertNull(invoiceJsonSimple.getAuditLogs());
}
