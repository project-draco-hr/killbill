{
  final InternalCallContext contextWithValidAccountRecordId=internalCallContextFactory.createInternalCallContext(accountId,callContext);
  try {
    final Account account=accountApi.getAccountById(accountId,contextWithValidAccountRecordId);
    final SubscriptionBaseBundle bundle=subscriptionInternalApi.createBundleForAccount(accountId,externalKey,contextWithValidAccountRecordId);
    final SubscriptionBase subscription=subscriptionInternalApi.createSubscription(bundle.getId(),planPhaseSpecifier,clock.getUTCNow(),contextWithValidAccountRecordId);
    return new DefaultEntitlement(accountApi,subscription,accountId,bundle.getExternalKey(),false,null,account.getTimeZone(),internalCallContextFactory,clock,checker);
  }
 catch (  SubscriptionBaseApiException e) {
    throw new EntitlementApiException(e);
  }
catch (  AccountApiException e) {
    throw new EntitlementApiException(e);
  }
}
