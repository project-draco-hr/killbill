{
  PriorPaymentControlResult prevResult=new DefaultPriorPaymentControlResult(false,amount,currency,paymentMethodId,pluginProperties);
  UUID inputPaymentMethodId=paymentMethodId;
  BigDecimal inputAmount=amount;
  Currency inputCurrency=currency;
  Iterable<PluginProperty> inputPluginProperties=pluginProperties;
  PaymentControlContext inputPaymentControlContext=new DefaultPaymentControlContext(account,paymentMethodId,paymentAttemptId,paymentId,paymentExternalKey,paymentTransactionExternalKey,paymentApiType,transactionType,hppType,amount,currency,isApiPayment,callContext);
  for (  final String pluginName : paymentControlPluginNames) {
    final PaymentControlPluginApi plugin=paymentControlPluginRegistry.getServiceForName(pluginName);
    if (plugin == null) {
      log.warn("Skipping unknown payment control plugin {} when fetching results",pluginName);
      continue;
    }
    log.debug("Calling priorCall of plugin {}",pluginName);
    prevResult=plugin.priorCall(inputPaymentControlContext,inputPluginProperties);
    log.debug("Successful executed priorCall of plugin {}",pluginName);
    if (prevResult.getAdjustedPaymentMethodId() != null) {
      inputPaymentMethodId=prevResult.getAdjustedPaymentMethodId();
    }
    if (prevResult.getAdjustedAmount() != null) {
      inputAmount=prevResult.getAdjustedAmount();
    }
    if (prevResult.getAdjustedCurrency() != null) {
      inputCurrency=prevResult.getAdjustedCurrency();
    }
    if (prevResult.getAdjustedPluginProperties() != null) {
      inputPluginProperties=prevResult.getAdjustedPluginProperties();
    }
    if (prevResult.isAborted()) {
      throw new PaymentApiException(ErrorCode.PAYMENT_PLUGIN_API_ABORTED,pluginName);
    }
    inputPaymentControlContext=new DefaultPaymentControlContext(account,inputPaymentMethodId,paymentAttemptId,paymentId,paymentExternalKey,paymentTransactionExternalKey,paymentApiType,transactionType,hppType,inputAmount,inputCurrency,isApiPayment,callContext);
  }
  prevResult=new DefaultPriorPaymentControlResult(prevResult.isAborted(),inputPaymentMethodId,inputAmount,inputCurrency,inputPluginProperties);
  return prevResult;
}
