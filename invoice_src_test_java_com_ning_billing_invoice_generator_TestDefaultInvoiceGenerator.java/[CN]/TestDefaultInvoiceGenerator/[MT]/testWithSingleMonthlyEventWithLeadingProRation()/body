{
  final BillingEventSet events=new MockBillingEventSet();
  final Subscription sub=createZombieSubscription();
  final LocalDate startDate=buildDate(2011,9,1);
  final Plan plan=new MockPlan();
  final BigDecimal rate=TEN;
  final PlanPhase phase=createMockMonthlyPlanPhase(rate);
  final BillingEvent event=createBillingEvent(sub.getId(),startDate,plan,phase,15);
  events.add(event);
  final LocalDate targetDate=buildDate(2011,10,3);
  final UUID accountId=UUID.randomUUID();
  final Invoice invoice=generator.generateInvoice(accountId,events,null,targetDate,DateTimeZone.UTC,Currency.USD);
  assertNotNull(invoice);
  assertEquals(invoice.getNumberOfItems(),2);
  final BigDecimal expectedNumberOfBillingCycles;
  expectedNumberOfBillingCycles=ONE.add(FOURTEEN.divide(THIRTY_ONE,2 * NUMBER_OF_DECIMALS,ROUNDING_METHOD));
  final BigDecimal expectedAmount=expectedNumberOfBillingCycles.multiply(rate).setScale(NUMBER_OF_DECIMALS,ROUNDING_METHOD);
  assertEquals(invoice.getBalance(),expectedAmount);
}
