{
  final Plan plan1=new MockPlan();
  final BigDecimal fixedCost1=TEN;
  final BigDecimal fixedCost2=TWENTY;
  final PlanPhase phase1=createMockMonthlyPlanPhase(null,fixedCost1,PhaseType.TRIAL);
  final PlanPhase phase2=createMockMonthlyPlanPhase(null,fixedCost2,PhaseType.EVERGREEN);
  final BillingEventSet events=new MockBillingEventSet();
  final UUID subscriptionId=UUID.randomUUID();
  final UUID accountId=UUID.randomUUID();
  final LocalDate startDate=new LocalDate(2011,1,1);
  final BillingEvent event1=createBillingEvent(subscriptionId,startDate,plan1,phase1,1);
  events.add(event1);
  final Invoice invoice1=generator.generateInvoice(accountId,events,null,startDate,DateTimeZone.UTC,Currency.USD);
  assertNotNull(invoice1);
  assertEquals(invoice1.getNumberOfItems(),1);
  assertEquals(invoice1.getBalance(),fixedCost1);
  final List<Invoice> invoiceList=new ArrayList<Invoice>();
  invoiceList.add(invoice1);
  final LocalDate phaseChangeDate=startDate.plusMonths(1);
  final BillingEvent event2=createBillingEvent(subscriptionId,phaseChangeDate,plan1,phase2,1);
  events.add(event2);
  final Invoice invoice2=generator.generateInvoice(accountId,events,invoiceList,phaseChangeDate,DateTimeZone.UTC,Currency.USD);
  assertNotNull(invoice2);
  assertEquals(invoice2.getNumberOfItems(),1);
  assertEquals(invoice2.getBalance(),fixedCost2);
}
