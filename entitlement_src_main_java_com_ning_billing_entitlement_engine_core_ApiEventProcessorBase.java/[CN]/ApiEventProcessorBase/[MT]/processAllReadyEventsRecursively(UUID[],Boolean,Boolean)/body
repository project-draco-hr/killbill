{
  int curSequenceId=sequenceId.getAndIncrement();
  List<EntitlementEvent> claimedEvents=new LinkedList<EntitlementEvent>();
  do {
    List<EntitlementEvent> tmpEvents=dao.getEventsReady(apiProcessorId,curSequenceId);
    if (tmpEvents.size() == 0) {
      break;
    }
    claimedEvents.addAll(tmpEvents);
  }
 while (true);
  if (claimedEvents.size() == 0) {
    return false;
  }
  Collection<EntitlementEvent> claimedEventsFiltered=null;
  if (subscriptionsIds.length == 0) {
    claimedEventsFiltered=claimedEvents;
  }
 else {
    claimedEventsFiltered=Collections2.filter(claimedEvents,new Predicate<EntitlementEvent>(){
      @Override public boolean apply(      EntitlementEvent input){
        for (        UUID cur : subscriptionsIds) {
          if (cur.equals(input.getSubscriptionId())) {
            return true;
          }
        }
        return false;
      }
    }
);
  }
  if (claimedEventsFiltered.size() == 0) {
    return false;
  }
  if (oneEventOnly) {
    List<EntitlementEvent> oneEventList=new ArrayList<EntitlementEvent>(1);
    oneEventList.add(claimedEventsFiltered.iterator().next());
    claimedEventsFiltered=oneEventList;
  }
  doProcessEventsFromList(curSequenceId,claimedEventsFiltered);
  if (recursive && !oneEventOnly) {
    processAllReadyEventsRecursively(subscriptionsIds,recursive,oneEventOnly);
  }
  return true;
}
