{
  final InvoiceItem linkedInvoiceItem=Iterables.find(otherInvoiceItems,new Predicate<InvoiceItem>(){
    @Override public boolean apply(    final InvoiceItem input){
      return invoiceItem.getLinkedItemId() != null && invoiceItem.getLinkedItemId().equals(input.getId());
    }
  }
,null);
  SubscriptionBundle bundle=null;
  if (invoiceItem.getBundleId() != null) {
    bundle=getSubscriptionBundle(invoiceItem.getBundleId(),context);
  }
  if (bundle == null && linkedInvoiceItem != null && linkedInvoiceItem.getBundleId() != null) {
    bundle=getSubscriptionBundle(linkedInvoiceItem.getBundleId(),context);
  }
  Plan plan=null;
  if (Strings.emptyToNull(invoiceItem.getPlanName()) != null) {
    plan=getPlanFromInvoiceItem(invoiceItem,context);
  }
  if (plan == null && linkedInvoiceItem != null && Strings.emptyToNull(linkedInvoiceItem.getPlanName()) != null) {
    plan=getPlanFromInvoiceItem(linkedInvoiceItem,context);
  }
  PlanPhase planPhase=null;
  if (invoiceItem.getSubscriptionId() != null && Strings.emptyToNull(invoiceItem.getPhaseName()) != null) {
    planPhase=getPlanPhaseFromInvoiceItem(invoiceItem,context);
  }
  if (planPhase == null && linkedInvoiceItem != null && linkedInvoiceItem.getSubscriptionId() != null && Strings.emptyToNull(linkedInvoiceItem.getPhaseName()) != null) {
    planPhase=getPlanPhaseFromInvoiceItem(linkedInvoiceItem,context);
  }
  final Long invoiceItemRecordId=invoiceItem.getId() != null ? getInvoiceItemRecordId(invoiceItem.getId(),context) : null;
  final AuditLog creationAuditLog=invoiceItem.getId() != null ? getInvoiceItemCreationAuditLog(invoiceItem.getId(),context) : null;
  return createBusinessInvoiceItem(account,invoice,invoiceItem,otherInvoiceItems,bundle,plan,planPhase,invoiceItemRecordId,creationAuditLog,accountRecordId,tenantRecordId,reportGroup);
}
