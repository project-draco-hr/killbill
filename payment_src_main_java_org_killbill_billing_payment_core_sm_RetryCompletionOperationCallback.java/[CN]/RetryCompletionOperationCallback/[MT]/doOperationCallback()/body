{
  return dispatchWithAccountLockAndTimeout(new WithAccountLockCallback<OperationResult,OperationException>(){
    @Override public OperationResult doOperation() throws OperationException {
      final PaymentTransactionModelDao transaction=paymentStateContext.getPaymentTransactionModelDao();
      final PaymentControlContext updatedPaymentControlContext=new DefaultPaymentControlContext(paymentStateContext.getAccount(),paymentStateContext.getPaymentMethodId(),retryablePaymentStateContext.getAttemptId(),transaction.getPaymentId(),paymentStateContext.getPaymentExternalKey(),transaction.getId(),paymentStateContext.getPaymentTransactionExternalKey(),paymentStateContext.getTransactionType(),transaction.getAmount(),transaction.getCurrency(),transaction.getProcessedAmount(),transaction.getProcessedCurrency(),paymentStateContext.getProperties(),retryablePaymentStateContext.isApiPayment(),paymentStateContext.callContext);
      onCompletion(retryablePaymentStateContext.getPluginName(),updatedPaymentControlContext);
      return OperationResult.SUCCESS;
    }
  }
);
}
