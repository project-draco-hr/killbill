{
  if (restartFuture != null) {
    return;
  }
  withContextClassLoader(new PluginCall(){
    @Override public void doCall(){
      logService.log(LogService.LOG_INFO,"JRuby bundle activated");
      final PluginRubyConfig rubyConfig=retrievePluginRubyConfig(context);
      final String pluginMain;
      if (PluginType.NOTIFICATION.equals(rubyConfig.getPluginType())) {
        plugin=new JRubyNotificationPlugin(rubyConfig,context,logService);
        dispatcher.registerEventHandler((OSGIKillbillEventHandler)plugin);
        pluginMain=KILLBILL_PLUGIN_JNOTIFICATION;
      }
 else       if (PluginType.PAYMENT.equals(rubyConfig.getPluginType())) {
        plugin=new JRubyPaymentPlugin(rubyConfig,context,logService);
        pluginMain=KILLBILL_PLUGIN_JPAYMENT;
      }
 else       if (PluginType.CURRENCY.equals(rubyConfig.getPluginType())) {
        plugin=new JRubyCurrencyPlugin(rubyConfig,context,logService);
        pluginMain=KILLBILL_PLUGIN_JCURRENCY;
      }
 else {
        throw new IllegalStateException("Unsupported plugin type " + rubyConfig.getPluginType());
      }
      startPlugin(rubyConfig,pluginMain,context);
    }
  }
,this.getClass().getClassLoader());
}
