{
  StandaloneCatalog c=new MockCatalog();
  c.setSupportedCurrencies(new Currency[]{Currency.GBP,Currency.EUR,Currency.USD,Currency.BRL,Currency.MXN});
  DefaultInternationalPrice p0=new MockInternationalPrice();
  p0.setPrices(null);
  p0.initialize(c,new URI("foo:bar"));
  DefaultInternationalPrice p1=new MockInternationalPrice();
  p1.setPrices(new DefaultPrice[]{new DefaultPrice().setCurrency(Currency.GBP).setValue(new BigDecimal(1)),new DefaultPrice().setCurrency(Currency.EUR).setValue(new BigDecimal(1)),new DefaultPrice().setCurrency(Currency.USD).setValue(new BigDecimal(1)),new DefaultPrice().setCurrency(Currency.BRL).setValue(new BigDecimal(1)),new DefaultPrice().setCurrency(Currency.MXN).setValue(new BigDecimal(1))});
  p1.initialize(c,new URI("foo:bar"));
  Assert.assertEquals(p0.getPrice(Currency.GBP),new BigDecimal(0));
  Assert.assertEquals(p0.getPrice(Currency.EUR),new BigDecimal(0));
  Assert.assertEquals(p0.getPrice(Currency.USD),new BigDecimal(0));
  Assert.assertEquals(p0.getPrice(Currency.BRL),new BigDecimal(0));
  Assert.assertEquals(p0.getPrice(Currency.MXN),new BigDecimal(0));
  Assert.assertEquals(p1.getPrice(Currency.GBP),new BigDecimal(1));
  Assert.assertEquals(p1.getPrice(Currency.EUR),new BigDecimal(1));
  Assert.assertEquals(p1.getPrice(Currency.USD),new BigDecimal(1));
  Assert.assertEquals(p1.getPrice(Currency.BRL),new BigDecimal(1));
  Assert.assertEquals(p1.getPrice(Currency.MXN),new BigDecimal(1));
}
