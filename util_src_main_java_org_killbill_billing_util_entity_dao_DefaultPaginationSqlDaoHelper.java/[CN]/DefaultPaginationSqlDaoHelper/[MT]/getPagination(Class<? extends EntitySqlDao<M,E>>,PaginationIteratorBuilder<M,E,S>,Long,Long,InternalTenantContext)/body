{
  final Long count=transactionalSqlDao.execute(new EntitySqlDaoTransactionWrapper<Long>(){
    @Override public Long inTransaction(    final EntitySqlDaoWrapperFactory entitySqlDaoWrapperFactory) throws Exception {
      final EntitySqlDao<M,E> sqlDao=entitySqlDaoWrapperFactory.become(sqlDaoClazz);
      return paginationIteratorBuilder.getCount((S)sqlDao,context);
    }
  }
);
  final EntitySqlDao<M,E> sqlDao=transactionalSqlDao.onDemandForStreamingResults(sqlDaoClazz);
  final Long totalCount=sqlDao.getCount(context);
  final Iterator<M> results=paginationIteratorBuilder.build((S)sqlDao,limit,context);
  return new DefaultPagination<M>(offset,limit,count,totalCount,results);
}
