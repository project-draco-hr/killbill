{
  final UUID accountId=UUID.randomUUID();
  final Long accountRecordId=19384012L;
  dbi.withHandle(new HandleCallback<Void>(){
    @Override public Void withHandle(    final Handle handle) throws Exception {
      handle.execute("insert into accounts (record_id, id, email, name, first_name_length, is_notified_for_invoices, created_date, created_by, updated_date, updated_by) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)",accountRecordId,accountId.toString(),"yo@t.com","toto",4,false,new Date(),"i",new Date(),"j");
      return null;
    }
  }
);
  final InternalCallContext context=internalCallContextFactory.createInternalCallContext(accountId,ObjectType.ACCOUNT,callContext);
  Assert.assertEquals(context.getAccountRecordId(),accountRecordId);
  verifyInternalCallContext(context);
}
