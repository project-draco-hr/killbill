{
  final String definitionName="TestTag1234567";
  try {
    tagDefinitionDao.create(definitionName,"Some test tag",context);
  }
 catch (  TagDefinitionApiException e) {
    fail("Could not create tag definition",e);
  }
  final TagDefinition tagDefinition=tagDefinitionDao.getByName(definitionName);
  assertNotNull(tagDefinition);
  final UUID objectId=UUID.randomUUID();
  final TagStore tagStore=new DefaultTagStore(objectId,ObjectType.ACCOUNT);
  final Tag tag=new DescriptiveTag(tagDefinition);
  tagStore.add(tag);
  tagDao.saveEntities(objectId,ObjectType.ACCOUNT,tagStore.getEntityList(),context);
  final Map<String,Tag> tagMap=tagDao.loadEntities(objectId,ObjectType.ACCOUNT);
  assertEquals(tagMap.size(),1);
  tagDao.deleteTag(objectId,ObjectType.ACCOUNT,tagDefinition,context);
  final Map<String,Tag> tagMapAfterDeletion=tagDao.loadEntities(objectId,ObjectType.ACCOUNT);
  assertEquals(tagMapAfterDeletion.size(),0);
  try {
    tagDefinitionDao.deleteTagDefinition(definitionName,context);
  }
 catch (  TagDefinitionApiException e) {
    fail("Could not delete tag definition",e);
  }
}
