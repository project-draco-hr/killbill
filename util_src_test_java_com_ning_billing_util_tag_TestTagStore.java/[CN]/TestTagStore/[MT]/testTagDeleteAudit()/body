{
  UUID accountId=UUID.randomUUID();
  TagStore tagStore=new DefaultTagStore(accountId,ACCOUNT_TYPE);
  Tag tag=new DescriptiveTag(tag2);
  tagStore.add(tag);
  TagSqlDao dao=dbi.onDemand(TagSqlDao.class);
  saveTags(dao,ACCOUNT_TYPE,accountId,tagStore.getEntityList(),context);
  saveTags(dao,ACCOUNT_TYPE,accountId,new ArrayList<Tag>(),context);
  List<Tag> savedTags=dao.load(accountId.toString(),ACCOUNT_TYPE);
  assertEquals(savedTags.size(),0);
  Handle handle=dbi.open();
  String query=String.format("select * from audit_log where table_name = 'Tag' and record_id='%s' and change_type='DELETE'",tag.getId().toString());
  List<Map<String,Object>> result=handle.select(query);
  assertNotNull(result);
  assertEquals(result.size(),1);
  assertNotNull(result.get(0).get("change_date"));
  DateTime changeDate=new DateTime(result.get(0).get("change_date"));
  assertTrue(Seconds.secondsBetween(changeDate,context.getUpdatedDate()).getSeconds() < 2);
  assertEquals(result.get(0).get("changed_by"),context.getUserName());
}
