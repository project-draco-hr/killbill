{
  final UUID accountId=UUID.randomUUID();
  final TagStore tagStore=new DefaultTagStore(accountId,ObjectType.ACCOUNT);
  final String definitionName="SomeTestTag";
  TagDefinition tagDefinition=null;
  try {
    tagDefinition=tagDefinitionDao.create(definitionName,"Test tag for some test purpose",context);
  }
 catch (  TagDefinitionApiException e) {
    fail("Tag definition creation failed.",e);
  }
  final DescriptiveTag tag=new DescriptiveTag(tagDefinition);
  tagStore.add(tag);
  assertEquals(tagStore.generateInvoice(),true);
  tagDao.saveEntities(accountId,ObjectType.ACCOUNT,tagStore.getEntityList(),context);
  tagStore.clear();
  assertEquals(tagStore.getEntityList().size(),0);
  final Map<String,Tag> tagMap=tagDao.loadEntities(accountId,ObjectType.ACCOUNT);
  assertEquals(tagMap.size(),1);
  assertEquals(tagMap.containsKey(ControlTagType.AUTO_INVOICING_OFF.toString()),false);
}
