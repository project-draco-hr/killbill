{
  final UUID objectId=UUID.randomUUID();
  final ObjectType objectType=ObjectType.INVOICE;
  final List<Tag> tags=new ArrayList<Tag>();
  tags.add(new DescriptiveTag(UUID.randomUUID()));
  tags.add(new DescriptiveTag(UUID.randomUUID()));
  tags.add(new DefaultControlTag(ControlTagType.AUTO_INVOICING_OFF));
  tagDao.saveEntities(objectId,objectType,tags,internalCallContext);
  Map<String,Tag> savedTags=tagDao.loadEntities(objectId,objectType,internalCallContext);
  assertEquals(savedTags.size(),3);
  tags.remove(1);
  assertEquals(tags.size(),2);
  tagDao.saveEntities(objectId,objectType,tags,internalCallContext);
  savedTags=tagDao.loadEntities(objectId,objectType,internalCallContext);
  assertEquals(savedTags.size(),2);
}
