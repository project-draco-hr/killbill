{
  final UUID accountId1=UUID.randomUUID();
  final String accountKey1=UUID.randomUUID().toString();
  final String name1=UUID.randomUUID().toString().substring(0,20);
  final UUID accountId2=UUID.randomUUID();
  final String accountKey2=UUID.randomUUID().toString();
  final String name2=UUID.randomUUID().toString().substring(0,20);
  Assert.assertEquals(accountTagSqlDao.addTag(accountId1.toString(),accountKey1,name1,internalCallContext),1);
  Assert.assertEquals(accountTagSqlDao.addTag(accountId2.toString(),accountKey2,name2,internalCallContext),1);
  Assert.assertEquals(accountTagSqlDao.getTagsForAccountByKey(accountKey1,internalCallContext).size(),1);
  Assert.assertEquals(accountTagSqlDao.getTagsForAccountByKey(accountKey2,internalCallContext).size(),1);
  Assert.assertEquals(accountTagSqlDao.removeTag(accountId1.toString(),name1,internalCallContext),1);
  Assert.assertEquals(accountTagSqlDao.getTagsForAccountByKey(accountKey1,internalCallContext).size(),0);
  Assert.assertEquals(accountTagSqlDao.getTagsForAccountByKey(accountKey2,internalCallContext).size(),1);
}
