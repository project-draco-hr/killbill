{
  final String configXml="<overdueConfig>" + "   <bundleOverdueStates>" + "       <state name=\"OD3\">"+ "           <condition>"+ "               <timeSinceEarliestUnpaidInvoiceEqualsOrExceeds>"+ "                   <unit>DAYS</unit><number>50</number>"+ "               </timeSinceEarliestUnpaidInvoiceEqualsOrExceeds>"+ "           </condition>"+ "           <externalMessage>Reached OD3</externalMessage>"+ "           <blockChanges>true</blockChanges>"+ "           <disableEntitlementAndChangesBlocked>true</disableEntitlementAndChangesBlocked>"+ "           <autoReevaluationInterval>"+ "               <unit>DAYS</unit><number>5</number>"+ "           </autoReevaluationInterval>"+ "       </state>"+ "       <state name=\"OD2\">"+ "           <condition>"+ "               <timeSinceEarliestUnpaidInvoiceEqualsOrExceeds>"+ "                   <unit>DAYS</unit><number>40</number>"+ "               </timeSinceEarliestUnpaidInvoiceEqualsOrExceeds>"+ "           </condition>"+ "           <externalMessage>Reached OD2</externalMessage>"+ "           <blockChanges>true</blockChanges>"+ "           <disableEntitlementAndChangesBlocked>true</disableEntitlementAndChangesBlocked>"+ "           <autoReevaluationInterval>"+ "               <unit>DAYS</unit><number>5</number>"+ "           </autoReevaluationInterval>"+ "       </state>"+ "       <state name=\"OD1\">"+ "           <condition>"+ "               <timeSinceEarliestUnpaidInvoiceEqualsOrExceeds>"+ "                   <unit>DAYS</unit><number>30</number>"+ "               </timeSinceEarliestUnpaidInvoiceEqualsOrExceeds>"+ "           </condition>"+ "           <externalMessage>Reached OD1</externalMessage>"+ "           <blockChanges>true</blockChanges>"+ "           <disableEntitlementAndChangesBlocked>false</disableEntitlementAndChangesBlocked>"+ "           <autoReevaluationInterval>"+ "               <unit>DAYS</unit><number>100</number>"+ "           </autoReevaluationInterval>"+ "       </state>"+ "   </bundleOverdueStates>"+ "</overdueConfig>";
  final InputStream is=new ByteArrayInputStream(configXml.getBytes());
  final OverdueConfig config=XMLLoader.getObjectFromStreamNoValidation(is,OverdueConfig.class);
  overdueWrapperFactory.setOverdueConfig(config);
  account=createAccountWithPaymentMethod(getAccountData(25));
  assertNotNull(account);
  final PaymentMethodPlugin info=new PaymentMethodPlugin(){
    @Override public boolean isDefaultPaymentMethod(){
      return false;
    }
    @Override public String getValueString(    final String key){
      return null;
    }
    @Override public List<PaymentMethodKVInfo> getProperties(){
      return null;
    }
    @Override public String getExternalPaymentMethodId(){
      return UUID.randomUUID().toString();
    }
  }
;
  paymentApi.addPaymentMethod(BeatrixModule.PLUGIN_NAME,account,true,info,context);
  bundle=entitlementUserApi.createBundleForAccount(account.getId(),"whatever",context);
  productName="Shotgun";
  term=BillingPeriod.MONTHLY;
  planSetName=PriceListSet.DEFAULT_PRICELIST_NAME;
}
