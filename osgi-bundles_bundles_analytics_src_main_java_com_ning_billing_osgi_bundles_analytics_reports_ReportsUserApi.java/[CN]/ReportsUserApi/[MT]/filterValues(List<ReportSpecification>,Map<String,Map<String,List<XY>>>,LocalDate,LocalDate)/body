{
  if (startDate == null && endDate == null) {
    return;
  }
  for (  final ReportSpecification reportSpecification : reportSpecifications) {
    final String reportName=reportSpecification.getReportName();
    final Map<String,List<XY>> dataForReport=dataForReports.get(reportName);
    if (dataForReport == null) {
      throw new IllegalArgumentException();
    }
    Iterables.removeAll(dataForReport.keySet(),reportSpecification.getPivotNamesToExclude());
    if (reportSpecification.getPivotNamesToInclude().size() > 0) {
      Iterables.removeIf(dataForReport.keySet(),new Predicate<String>(){
        @Override public boolean apply(        final String pivotName){
          return !reportSpecification.getPivotNamesToInclude().contains(pivotName);
        }
      }
);
    }
    for (    final List<XY> dataForPivot : dataForReport.values()) {
      Iterables.removeIf(dataForPivot,new Predicate<XY>(){
        @Override public boolean apply(        final XY xy){
          return startDate != null && xy.getxDate().toLocalDate().isBefore(startDate) || endDate != null && xy.getxDate().toLocalDate().isAfter(endDate);
        }
      }
);
    }
  }
}
