{
  mockRetryProviderPlugin.setAborted(true).setNextRetryDate(null);
  mockRetryAuthorizeOperationCallback.setResult(OperationResult.SUCCESS).setException(null);
  runner.setOperationCallback(mockRetryAuthorizeOperationCallback).setContext(paymentStateContext);
  runner.run(true,TransactionType.AUTHORIZE,account,paymentMethodId,null,paymentExternalKey,paymentTransactionExternalKey,amount,currency,emptyProperties,null,callContext,internalCallContext);
  final PaymentAttemptModelDao pa=paymentDao.getPaymentAttemptByTransactionExternalKey(paymentTransactionExternalKey,internalCallContext).get(0);
  assertEquals(pa.getTransactionExternalKey(),paymentTransactionExternalKey);
  assertEquals(pa.getStateName(),"ABORTED");
  assertEquals(pa.getTransactionType(),TransactionType.AUTHORIZE);
}
