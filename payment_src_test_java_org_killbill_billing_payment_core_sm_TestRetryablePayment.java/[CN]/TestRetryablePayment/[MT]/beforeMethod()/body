{
  super.beforeMethod();
  ((MockPaymentDao)paymentDao).reset();
  this.utcNow=clock.getUTCNow();
  runner=new MockRetryablePaymentAutomatonRunner(stateMachineConfig,retryStateMachineConfig,paymentDao,locker,pluginRegistry,retryPluginRegistry,clock,tagApi,paymentProcessor,retryServiceScheduler,paymentConfig,executor,paymentSMHelper,retrySMHelper,eventBus);
  paymentStateContext=new PaymentStateControlContext(ImmutableList.<String>of(MockPaymentControlProviderPlugin.PLUGIN_NAME),true,null,paymentExternalKey,paymentTransactionExternalKey,TransactionType.AUTHORIZE,account,paymentMethodId,amount,currency,emptyProperties,internalCallContext,callContext);
  mockRetryAuthorizeOperationCallback=new MockRetryAuthorizeOperationCallback(locker,runner.getPaymentPluginDispatcher(),paymentStateContext,null,runner.getRetryPluginRegistry(),paymentDao,clock);
  processor=new PluginControlPaymentProcessor(pluginRegistry,accountInternalApi,null,tagApi,paymentDao,locker,executor,internalCallContextFactory,runner,retrySMHelper,clock);
}
