{
  final DateTime initialDate=new DateTime(2012,4,25,0,3,42,0);
  clock.setDeltaFromReality(initialDate.getMillis() - clock.getUTCNow().getMillis());
  final Account account=createAccountWithDefaultPaymentMethod();
  final Subscription subscriptionJson=createEntitlement(account.getAccountId(),"87544332","Shotgun",ProductCategory.BASE,BillingPeriod.MONTHLY,true);
  for (  final ControlTagType controlTagType : ControlTagType.values()) {
    killBillClient.createAccountTag(account.getAccountId(),controlTagType.getId(),createdBy,reason,comment);
  }
  final TagDefinition bundleTagDefInput=new TagDefinition(null,false,"bundleTagDef","nothing special",ImmutableList.<ObjectType>of());
  final TagDefinition bundleTagDef=killBillClient.createTagDefinition(bundleTagDefInput,createdBy,reason,comment);
  killBillClient.createBundleTag(subscriptionJson.getBundleId(),bundleTagDef.getId(),createdBy,reason,comment);
  final Tags allBundleTags=killBillClient.getBundleTags(subscriptionJson.getBundleId(),AuditLevel.FULL);
  Assert.assertEquals(allBundleTags.size(),1);
  final Tags allAccountTags=killBillClient.getAllAccountTags(account.getAccountId(),null,AuditLevel.FULL);
  Assert.assertEquals(allAccountTags.size(),ControlTagType.values().length + 1);
  final Tags allBundleTagsForAccount=killBillClient.getAllAccountTags(account.getAccountId(),ObjectType.BUNDLE.name(),AuditLevel.FULL);
  Assert.assertEquals(allBundleTagsForAccount.size(),1);
}
