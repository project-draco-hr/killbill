{
  final DummyNodeInterval root=new DummyNodeInterval();
  final DummyNodeInterval top=createNodeInterval("2014-01-01","2014-02-01");
  root.addNode(top,CALLBACK);
  final DummyNodeInterval firstChildLevel1=createNodeInterval("2014-01-01","2014-01-07");
  final DummyNodeInterval secondChildLevel1=createNodeInterval("2014-01-08","2014-01-15");
  final DummyNodeInterval thirdChildLevel1=createNodeInterval("2014-01-16","2014-02-01");
  root.addNode(firstChildLevel1,CALLBACK);
  root.addNode(secondChildLevel1,CALLBACK);
  root.addNode(thirdChildLevel1,CALLBACK);
  final DummyNodeInterval firstChildLevel2=createNodeInterval("2014-01-01","2014-01-03");
  final DummyNodeInterval secondChildLevel2=createNodeInterval("2014-01-03","2014-01-5");
  final DummyNodeInterval thirdChildLevel2=createNodeInterval("2014-01-16","2014-01-17");
  root.addNode(firstChildLevel2,CALLBACK);
  root.addNode(secondChildLevel2,CALLBACK);
  root.addNode(thirdChildLevel2,CALLBACK);
  final DummyNodeInterval firstChildLevel3=createNodeInterval("2014-01-01","2014-01-02");
  final DummyNodeInterval secondChildLevel3=createNodeInterval("2014-01-03","2014-01-04");
  root.addNode(firstChildLevel3,CALLBACK);
  root.addNode(secondChildLevel3,CALLBACK);
  final NodeInterval search1=root.findNode(new LocalDate("2014-01-04"),new SearchCallback(){
    @Override public boolean isMatch(    final NodeInterval curNode){
      return ((DummyNodeInterval)curNode).getId().equals(secondChildLevel3.getId());
    }
  }
);
  checkInterval(search1,secondChildLevel3);
  final NodeInterval search2=root.findNode(new SearchCallback(){
    @Override public boolean isMatch(    final NodeInterval curNode){
      return ((DummyNodeInterval)curNode).getId().equals(thirdChildLevel2.getId());
    }
  }
);
  checkInterval(search2,thirdChildLevel2);
  final NodeInterval nullSearch=root.findNode(new SearchCallback(){
    @Override public boolean isMatch(    final NodeInterval curNode){
      return ((DummyNodeInterval)curNode).getId().equals("foo");
    }
  }
);
  assertNull(nullSearch);
}
