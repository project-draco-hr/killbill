{
  final LocalDate startDate=new LocalDate(2012,5,1);
  final LocalDate endDate=new LocalDate(2012,6,1);
  final LocalDate change1=new LocalDate(2012,5,7);
  final LocalDate change2=new LocalDate(2012,5,8);
  final BigDecimal rate1=new BigDecimal("599.95");
  final BigDecimal amount1=rate1;
  final BigDecimal rate2=new BigDecimal("9.95");
  final BigDecimal proratedAmount2=new BigDecimal("8.02");
  final BigDecimal rate3=new BigDecimal("29.95");
  final BigDecimal proratedAmount3=new BigDecimal("23.19");
  final SubscriptionItemTree tree=new SubscriptionItemTree(subscriptionId);
  final InvoiceItem initial=new RecurringInvoiceItem(invoiceId,accountId,bundleId,subscriptionId,planName,phaseName,startDate,endDate,amount1,rate1,currency);
  final InvoiceItem newItem1=new RecurringInvoiceItem(invoiceId,accountId,bundleId,subscriptionId,"foo","foo",change1,endDate,proratedAmount2,rate2,currency);
  final InvoiceItem repair1=new RepairAdjInvoiceItem(invoiceId,accountId,change1,endDate,new BigDecimal("-483.86"),currency,initial.getId());
  tree.addItem(initial);
  tree.addItem(newItem1);
  tree.addItem(repair1);
  tree.flatten(true);
  final InvoiceItem proposed1=new RecurringInvoiceItem(invoiceId,accountId,bundleId,subscriptionId,planName,phaseName,startDate,change1,amount1,rate1,currency);
  final InvoiceItem proposed2=new RecurringInvoiceItem(invoiceId,accountId,bundleId,subscriptionId,"foo","foo",change1,change2,proratedAmount3,rate2,currency);
  final InvoiceItem proposed3=new RecurringInvoiceItem(invoiceId,accountId,bundleId,subscriptionId,"bar","bar",change2,endDate,proratedAmount3,rate3,currency);
  tree.mergeProposedItem(proposed1);
  tree.mergeProposedItem(proposed2);
  tree.mergeProposedItem(proposed3);
  tree.buildForMerge();
  final List<InvoiceItem> expectedResult=Lists.newLinkedList();
  final InvoiceItem repair2=new RepairAdjInvoiceItem(invoiceId,accountId,change2,endDate,new BigDecimal("-7.70"),currency,initial.getId());
  expectedResult.add(proposed3);
  expectedResult.add(repair2);
  verifyResult(tree.getView(),expectedResult);
}
