{
  final LocalDate startDate=new LocalDate(2014,1,1);
  final LocalDate endDate=new LocalDate(2014,2,1);
  final LocalDate blockStart1=new LocalDate(2014,1,8);
  final LocalDate unblockStart1=new LocalDate(2014,1,10);
  final LocalDate blockStart2=new LocalDate(2014,1,17);
  final LocalDate unblockStart2=new LocalDate(2014,1,23);
  final BigDecimal rate1=new BigDecimal("12.00");
  final BigDecimal amount1=rate1;
  final InvoiceItem initial=new RecurringInvoiceItem(invoiceId,accountId,bundleId,subscriptionId,planName,phaseName,startDate,endDate,amount1,rate1,currency);
  final InvoiceItem block1=new RepairAdjInvoiceItem(invoiceId,accountId,blockStart1,unblockStart1,amount1.negate(),currency,initial.getId());
  final InvoiceItem block2=new RepairAdjInvoiceItem(invoiceId,accountId,blockStart2,unblockStart2,amount1.negate(),currency,initial.getId());
  final List<InvoiceItem> expectedResult=Lists.newLinkedList();
  final InvoiceItem expected1=new RecurringInvoiceItem(invoiceId,accountId,bundleId,subscriptionId,planName,phaseName,startDate,blockStart1,new BigDecimal("2.71"),rate1,currency);
  expectedResult.add(expected1);
  final InvoiceItem expected2=new RecurringInvoiceItem(invoiceId,accountId,bundleId,subscriptionId,planName,phaseName,unblockStart1,blockStart2,new BigDecimal("2.71"),rate1,currency);
  expectedResult.add(expected2);
  final InvoiceItem expected3=new RecurringInvoiceItem(invoiceId,accountId,bundleId,subscriptionId,planName,phaseName,unblockStart2,endDate,new BigDecimal("3.48"),rate1,currency);
  expectedResult.add(expected3);
  SubscriptionItemTree tree=new SubscriptionItemTree(subscriptionId);
  tree.addItem(initial);
  tree.addItem(block1);
  tree.addItem(block2);
  tree.build();
  verifyResult(tree.getView(),expectedResult);
}
