{
  super.beforeMethod();
  ((MockPaymentDao)paymentDao).reset();
  this.utcNow=clock.getUTCNow();
  runner=new MockRetryableDirectPaymentAutomatonRunner(stateMachineConfig,retryStateMachineConfig,paymentDao,locker,pluginRegistry,retryPluginRegistry,clock,tagApi,directPaymentProcessor,retryServiceScheduler,paymentConfig,executor);
  directPaymentStateContext=new RetryableDirectPaymentStateContext(MockPaymentControlProviderPlugin.PLUGIN_NAME,true,null,directPaymentExternalKey,directPaymentTransactionExternalKey,TransactionType.AUTHORIZE,account,paymentMethodId,amount,currency,emptyProperties,internalCallContext,callContext);
  mockRetryAuthorizeOperationCallback=new MockRetryAuthorizeOperationCallback(locker,runner.getPaymentPluginDispatcher(),directPaymentStateContext,null,runner.getRetryPluginRegistry(),paymentDao,clock);
  processor=new PluginControlledPaymentProcessor(pluginRegistry,accountInternalApi,null,tagApi,paymentDao,nonEntityDao,eventBus,locker,executor,runner,clock);
}
