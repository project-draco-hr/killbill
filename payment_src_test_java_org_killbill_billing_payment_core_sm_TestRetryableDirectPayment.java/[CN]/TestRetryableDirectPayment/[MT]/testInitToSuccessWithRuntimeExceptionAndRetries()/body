{
  mockRetryProviderPlugin.setAborted(false).setNextRetryDate(new DateTime(clock.getUTCNow().plusDays(1)));
  mockRetryAuthorizeOperationCallback.setResult(null).setException(new RuntimeException());
  runner.setOperationCallback(mockRetryAuthorizeOperationCallback).setContext(directPaymentStateContext);
  try {
    runner.run(true,TransactionType.AUTHORIZE,account,paymentMethodId,null,directPaymentExternalKey,directPaymentTransactionExternalKey,amount,currency,emptyProperties,null,callContext,internalCallContext);
    Assert.fail("Expected Exception...");
  }
 catch (  final PaymentApiException e) {
    final PaymentAttemptModelDao pa=paymentDao.getPaymentAttemptByExternalKey(directPaymentTransactionExternalKey,internalCallContext);
    assertEquals(pa.getTransactionExternalKey(),directPaymentTransactionExternalKey);
    assertEquals(pa.getStateName(),"RETRIED");
    assertEquals(pa.getTransactionType(),TransactionType.AUTHORIZE);
  }
}
