{
  final UUID accountId=toBeMigrated.getAccountKey();
  final DateTime now=clock.getUTCNow();
  List<BundleMigrationData> accountBundleData=new LinkedList<BundleMigrationData>();
  for (  final EntitlementBundleMigration curBundle : toBeMigrated.getBundles()) {
    SubscriptionBundleData bundleData=new SubscriptionBundleData(curBundle.getBundleKey(),accountId);
    List<SubscriptionMigrationData> bundleSubscriptionData=new LinkedList<AccountMigrationData.SubscriptionMigrationData>();
    List<EntitlementSubscriptionMigration> sortedSubscriptions=Lists.newArrayList(curBundle.getSubscriptions());
    Collections.sort(sortedSubscriptions,new Comparator<EntitlementSubscriptionMigration>(){
      @Override public int compare(      EntitlementSubscriptionMigration o1,      EntitlementSubscriptionMigration o2){
        if (o1.getCategory().equals(o2.getCategory())) {
          return o1.getSubscriptionCases()[0].getEffectiveDate().compareTo(o2.getSubscriptionCases()[0].getEffectiveDate());
        }
 else {
          if (o1.getCategory().equals("mpp")) {
            return -1;
          }
 else           if (o2.getCategory().equals("mpp")) {
            return 1;
          }
 else           if (o1.getCategory().equals("legacy")) {
            return -1;
          }
 else           if (o2.getCategory().equals("legacy")) {
            return 1;
          }
 else {
            return 0;
          }
        }
      }
    }
);
    DateTime bundleStartDate=null;
    for (    EntitlementSubscriptionMigration curSub : sortedSubscriptions) {
      SubscriptionMigrationData data=null;
      if (bundleStartDate == null) {
        data=createInitialSubscription(bundleData.getId(),curSub.getCategory(),curSub.getSubscriptionCases(),now);
        bundleStartDate=data.getInitialEvents().get(0).getEffectiveDate();
      }
 else {
        data=createSubscriptionMigrationDataWithBundleDate(bundleData.getId(),curSub.getCategory(),curSub.getSubscriptionCases(),now,bundleStartDate);
      }
      if (data != null) {
        bundleSubscriptionData.add(data);
      }
    }
    BundleMigrationData bundleMigrationData=new BundleMigrationData(bundleData,bundleSubscriptionData);
    accountBundleData.add(bundleMigrationData);
  }
  AccountMigrationData accountMigrationData=new AccountMigrationData(accountBundleData);
  return accountMigrationData;
}
