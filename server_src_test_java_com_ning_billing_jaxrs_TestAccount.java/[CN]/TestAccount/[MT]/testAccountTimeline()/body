{
  clock.setTime(new DateTime(2012,4,25,0,3,42,0));
  AccountJson accountJson=createAccount("poney","shdddqgfhwe","poney@yahoo.com");
  assertNotNull(accountJson);
  BundleJsonNoSubscriptions bundleJson=createBundle(accountJson.getAccountId(),"996599");
  assertNotNull(bundleJson);
  SubscriptionJsonNoEvents subscriptionJson=createSubscription(bundleJson.getBundleId(),"Shotgun",ProductCategory.BASE.toString(),BillingPeriod.MONTHLY.toString(),true);
  assertNotNull(subscriptionJson);
  clock.addMonths(3);
  crappyWaitForLackOfProperSynchonization();
  final String uri=JaxrsResource.ACCOUNTS_PATH + "/" + accountJson.getAccountId()+ "/"+ JaxrsResource.TIMELINE;
  Response response=doGet(uri,DEFAULT_EMPTY_QUERY,DEFAULT_HTTP_TIMEOUT_SEC);
  Assert.assertEquals(response.getStatusCode(),Status.OK.getStatusCode());
  String baseJson=response.getResponseBody();
  AccountTimelineJson objFromJson=mapper.readValue(baseJson,AccountTimelineJson.class);
  assertNotNull(objFromJson);
  log.info(baseJson);
  Assert.assertEquals(objFromJson.getPayments().size(),3);
  Assert.assertEquals(objFromJson.getInvoices().size(),4);
  Assert.assertEquals(objFromJson.getBundles().size(),1);
  Assert.assertEquals(objFromJson.getBundles().get(0).getSubscriptions().size(),1);
  Assert.assertEquals(objFromJson.getBundles().get(0).getSubscriptions().get(0).getEvents().size(),2);
}
