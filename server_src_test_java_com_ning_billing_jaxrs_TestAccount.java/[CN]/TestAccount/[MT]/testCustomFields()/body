{
  final AccountJson accountJson=createAccount("yoyoq","gfgrqe","yoyoq@yahoo.com");
  assertNotNull(accountJson);
  final List<CustomFieldJson> customFields=new LinkedList<CustomFieldJson>();
  customFields.add(new CustomFieldJson("1","value1",null));
  customFields.add(new CustomFieldJson("2","value2",null));
  customFields.add(new CustomFieldJson("3","value3",null));
  String baseJson=mapper.writeValueAsString(customFields);
  final String uri=JaxrsResource.ACCOUNTS_PATH + "/" + accountJson.getAccountId()+ "/"+ JaxrsResource.CUSTOM_FIELDS;
  Response response=doPost(uri,baseJson,DEFAULT_EMPTY_QUERY,DEFAULT_HTTP_TIMEOUT_SEC);
  assertEquals(response.getStatusCode(),Status.CREATED.getStatusCode());
  final String url=getUrlFromUri(uri);
  response=doGetWithUrl(url,DEFAULT_EMPTY_QUERY,DEFAULT_HTTP_TIMEOUT_SEC);
  Assert.assertEquals(response.getStatusCode(),Status.OK.getStatusCode());
  response=doDelete(uri,DEFAULT_EMPTY_QUERY,DEFAULT_HTTP_TIMEOUT_SEC);
  assertEquals(response.getStatusCode(),Status.OK.getStatusCode());
  response=doGet(uri,DEFAULT_EMPTY_QUERY,DEFAULT_HTTP_TIMEOUT_SEC);
  assertEquals(response.getStatusCode(),Status.OK.getStatusCode());
  baseJson=response.getResponseBody();
  final List<CustomFieldDao> remainingCustomFields=mapper.readValue(baseJson,new TypeReference<List<CustomFieldDao>>(){
  }
);
  assertEquals(remainingCustomFields.size(),0);
}
