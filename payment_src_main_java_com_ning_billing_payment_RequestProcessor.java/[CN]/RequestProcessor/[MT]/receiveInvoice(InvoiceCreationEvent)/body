{
  log.info("Received invoice creation notification for account {} and invoice {}",event.getAccountId(),event.getInvoiceId());
  try {
    final Account account=accountUserApi.getAccountById(event.getAccountId());
    if (account == null) {
      log.info("could not process invoice payment: could not find a valid account for event {}",event);
    }
 else {
      CallContext context=new DefaultCallContext("PaymentRequestProcessor",CallOrigin.INTERNAL,UserType.SYSTEM,clock);
      List<Either<PaymentErrorEvent,PaymentInfoEvent>> results=paymentApi.createPayment(account,Arrays.asList(event.getInvoiceId().toString()),context);
      if (!results.isEmpty()) {
        Either<PaymentErrorEvent,PaymentInfoEvent> result=results.get(0);
        try {
          eventBus.post(result.isLeft() ? result.getLeft() : result.getRight());
        }
 catch (        EventBusException e) {
          log.error("Failed to post Payment event event for account {} ",account.getId(),e);
        }
      }
    }
  }
 catch (  AccountApiException e) {
    log.warn("could not process invoice payment",e);
  }
}
