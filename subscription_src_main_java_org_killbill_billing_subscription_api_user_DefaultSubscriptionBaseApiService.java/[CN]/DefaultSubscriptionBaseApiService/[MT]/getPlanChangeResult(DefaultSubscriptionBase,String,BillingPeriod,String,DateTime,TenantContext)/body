{
  final PlanChangeResult planChangeResult;
  try {
    final InternalTenantContext internalCallContext=createTenantContextFromBundleId(subscription.getBundleId(),context);
    final Product destProduct=catalogService.getFullCatalog(internalCallContext).findProduct(productName,effectiveDate);
    final Plan currentPlan=subscription.getCurrentPlan();
    final PriceList currentPriceList=subscription.getCurrentPriceList();
    final PlanPhaseSpecifier fromPlanPhase=new PlanPhaseSpecifier(currentPlan.getProduct().getName(),currentPlan.getProduct().getCategory(),currentPlan.getRecurringBillingPeriod(),currentPriceList.getName(),subscription.getCurrentPhase().getPhaseType());
    final PlanSpecifier toPlanPhase=new PlanSpecifier(productName,destProduct.getCategory(),term,priceList);
    planChangeResult=catalogService.getFullCatalog(internalCallContext).planChange(fromPlanPhase,toPlanPhase,effectiveDate);
  }
 catch (  final CatalogApiException e) {
    throw new SubscriptionBaseApiException(e);
  }
  return planChangeResult;
}
