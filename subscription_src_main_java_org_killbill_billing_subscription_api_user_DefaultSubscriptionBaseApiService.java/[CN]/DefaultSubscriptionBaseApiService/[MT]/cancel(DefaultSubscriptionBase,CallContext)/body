{
  final EntitlementState currentState=subscription.getState();
  if (currentState != EntitlementState.ACTIVE) {
    throw new SubscriptionBaseApiException(ErrorCode.SUB_CANCEL_BAD_STATE,subscription.getId(),currentState);
  }
  final DateTime now=clock.getUTCNow();
  final Plan currentPlan=subscription.getCurrentPlan();
  final PlanPhaseSpecifier planPhase=new PlanPhaseSpecifier(currentPlan.getProduct().getName(),currentPlan.getProduct().getCategory(),subscription.getCurrentPlan().getRecurringBillingPeriod(),subscription.getCurrentPriceList().getName(),subscription.getCurrentPhase().getPhaseType());
  try {
    final InternalTenantContext internalCallContext=createTenantContextFromBundleId(subscription.getBundleId(),context);
    final BillingActionPolicy policy=catalogService.getFullCatalog(internalCallContext).planCancelPolicy(planPhase,now);
    final DateTime effectiveDate=subscription.getPlanChangeEffectiveDate(policy);
    return doCancelPlan(subscription,now,effectiveDate,context);
  }
 catch (  CatalogApiException e) {
    throw new SubscriptionBaseApiException(e);
  }
}
