{
  if (!subscription.isSubscriptionFutureCancelled()) {
    throw new SubscriptionBaseApiException(ErrorCode.SUB_UNCANCEL_BAD_STATE,subscription.getId().toString());
  }
  final DateTime now=clock.getUTCNow();
  final SubscriptionBaseEvent uncancelEvent=new ApiEventUncancel(new ApiEventBuilder().setSubscriptionId(subscription.getId()).setActiveVersion(subscription.getActiveVersion()).setProcessedDate(now).setRequestedDate(now).setEffectiveDate(now).setFromDisk(true));
  final List<SubscriptionBaseEvent> uncancelEvents=new ArrayList<SubscriptionBaseEvent>();
  uncancelEvents.add(uncancelEvent);
  final TimedPhase nextTimedPhase=planAligner.getNextTimedPhase(subscription,now,now);
  final PhaseEvent nextPhaseEvent=(nextTimedPhase != null) ? PhaseEventData.createNextPhaseEvent(subscription.getId(),subscription.getActiveVersion(),nextTimedPhase.getPhase().getName(),now,nextTimedPhase.getStartPhase()) : null;
  if (nextPhaseEvent != null) {
    uncancelEvents.add(nextPhaseEvent);
  }
  final InternalCallContext internalCallContext=createCallContextFromBundleId(subscription.getBundleId(),context);
  dao.uncancelSubscription(subscription,uncancelEvents,internalCallContext);
  subscription.rebuildTransitions(dao.getEventsForSubscription(subscription.getId(),internalCallContext),catalogService.getFullCatalog());
  return true;
}
