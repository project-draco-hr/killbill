{
  final InternalCallContext internalCallContext=createCallContextFromBundleId(subscription.getBundleId(),context);
  final PlanPhasePriceOverridesWithCallContext overridesWithContext=new DefaultPlanPhasePriceOverridesWithCallContext(overrides,context);
  final Plan newPlan=catalogService.getFullCatalog(internalCallContext).createOrFindPlan(newProductName,newBillingPeriod,newPriceList,overridesWithContext,effectiveDate,subscription.getStartDate());
  if (newPlan.getProduct().getCategory() != subscription.getCategory()) {
    throw new SubscriptionBaseApiException(ErrorCode.SUB_CHANGE_INVALID,subscription.getId());
  }
  final List<DefaultSubscriptionBase> addOnSubscriptionsToBeCancelled=new ArrayList<DefaultSubscriptionBase>();
  final List<SubscriptionBaseEvent> addOnCancelEvents=new ArrayList<SubscriptionBaseEvent>();
  final List<SubscriptionBaseEvent> changeEvents=getEventsOnChangePlan(subscription,newPlan,newPriceList,effectiveDate,true,addOnSubscriptionsToBeCancelled,addOnCancelEvents,internalCallContext);
  dao.changePlan(subscription,changeEvents,addOnSubscriptionsToBeCancelled,addOnCancelEvents,internalCallContext);
  final Catalog fullCatalog=catalogService.getFullCatalog(internalCallContext);
  subscription.rebuildTransitions(dao.getEventsForSubscription(subscription.getId(),internalCallContext),fullCatalog);
}
