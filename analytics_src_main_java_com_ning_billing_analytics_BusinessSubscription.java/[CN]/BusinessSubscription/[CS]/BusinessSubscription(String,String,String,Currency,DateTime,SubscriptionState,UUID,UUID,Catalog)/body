{
  this.priceList=priceList;
  Plan thePlan=null;
  PlanPhase thePhase=null;
  try {
    thePlan=catalog.findPlan(currentPlan,new DateTime(),startDate);
    thePhase=catalog.findPhase(currentPhase,new DateTime(),getStartDate());
  }
 catch (  CatalogApiException e) {
    log.error(String.format("Failed to retrieve Plan from catalog for plan %s, phase ",currentPlan,currentPhase));
  }
  if (thePlan != null && thePlan.getProduct() != null) {
    final Product product=thePlan.getProduct();
    productName=product.getName();
    productCategory=product.getCategory();
    productType=product.getCatalogName();
  }
 else {
    productName=null;
    productCategory=null;
    productType=null;
  }
  if (thePhase != null) {
    slug=thePhase.getName();
    if (thePhase.getPhaseType() != null) {
      phase=thePhase.getPhaseType().toString();
    }
 else {
      phase=null;
    }
    if (thePhase.getBillingPeriod() != null) {
      billingPeriod=thePhase.getBillingPeriod().toString();
    }
 else {
      billingPeriod=null;
    }
    if (thePhase.getRecurringPrice() != null) {
      BigDecimal tmpPrice=null;
      try {
        tmpPrice=thePhase.getRecurringPrice().getPrice(USD);
      }
 catch (      CatalogApiException e) {
        tmpPrice=new BigDecimal(0);
      }
      price=tmpPrice;
      mrr=getMrrFromISubscription(thePhase.getDuration(),price);
    }
 else {
      price=BigDecimal.ZERO;
      mrr=BigDecimal.ZERO;
    }
  }
 else {
    slug=null;
    phase=null;
    billingPeriod=null;
    price=BigDecimal.ZERO;
    mrr=BigDecimal.ZERO;
  }
  if (currency != null) {
    this.currency=currency.toString();
  }
 else {
    this.currency=null;
  }
  this.startDate=startDate;
  this.state=state;
  this.subscriptionId=subscriptionId;
  this.bundleId=bundleId;
}
