{
  SubscriptionBundle bundle=BrainDeadProxyFactory.createBrainDeadProxyFor(SubscriptionBundle.class);
  UUID bundleId=UUID.randomUUID();
  ((ZombieControl)bundle).addResult("getId",bundleId);
  ((ZombieControl)bundle).addResult("getAccountId",UUID.randomUUID());
  Invoice invoice=BrainDeadProxyFactory.createBrainDeadProxyFor(Invoice.class);
  ((ZombieControl)invoice).addResult("getInvoiceDate",dateOfLastUnPaidInvoice);
  ((ZombieControl)invoice).addResult("getBalance",BigDecimal.TEN);
  ((ZombieControl)invoice).addResult("getId",UUID.randomUUID());
  InvoiceItem item=BrainDeadProxyFactory.createBrainDeadProxyFor(InvoiceItem.class);
  ((ZombieControl)item).addResult("getBundleId",bundleId);
  List<InvoiceItem> items=new ArrayList<InvoiceItem>();
  items.add(item);
  ((ZombieControl)invoice).addResult("getInvoiceItems",items);
  List<Invoice> invoices=new ArrayList<Invoice>();
  invoices.add(invoice);
  ((ZombieControl)invoiceApi).addResult("getUnpaidInvoicesByAccountId",invoices);
  Subscription base=BrainDeadProxyFactory.createBrainDeadProxyFor(Subscription.class);
  ((ZombieControl)base).addResult("getCurrentPlan",MockPlan.createBicycleNoTrialEvergreen1USD());
  ((ZombieControl)base).addResult("getCurrentPriceList",new MockPriceList());
  ((ZombieControl)base).addResult("getCurrentPhase",MockPlan.createBicycleNoTrialEvergreen1USD().getFinalPhase());
  ((ZombieControl)entitlementApi).addResult("getBaseSubscription",base);
  return bundle;
}
