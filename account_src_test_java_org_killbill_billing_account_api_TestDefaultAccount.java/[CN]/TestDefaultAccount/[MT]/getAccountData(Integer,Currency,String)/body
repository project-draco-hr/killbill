{
  final AccountData secondAccountData=Mockito.mock(AccountData.class);
  Mockito.when(secondAccountData.getExternalKey()).thenReturn(externalKey);
  Mockito.when(secondAccountData.getEmail()).thenReturn(UUID.randomUUID().toString());
  Mockito.when(secondAccountData.getName()).thenReturn(UUID.randomUUID().toString());
  Mockito.when(secondAccountData.getFirstNameLength()).thenReturn(Integer.MAX_VALUE);
  Mockito.when(secondAccountData.getCurrency()).thenReturn(currency);
  Mockito.when(secondAccountData.getBillCycleDayLocal()).thenReturn(bcd);
  Mockito.when(secondAccountData.getPaymentMethodId()).thenReturn(UUID.randomUUID());
  Mockito.when(secondAccountData.getTimeZone()).thenReturn(DateTimeZone.forID("EST"));
  Mockito.when(secondAccountData.getLocale()).thenReturn(UUID.randomUUID().toString());
  Mockito.when(secondAccountData.getAddress1()).thenReturn(UUID.randomUUID().toString());
  Mockito.when(secondAccountData.getAddress2()).thenReturn(UUID.randomUUID().toString());
  Mockito.when(secondAccountData.getCompanyName()).thenReturn(UUID.randomUUID().toString());
  Mockito.when(secondAccountData.getCity()).thenReturn(UUID.randomUUID().toString());
  Mockito.when(secondAccountData.getStateOrProvince()).thenReturn(UUID.randomUUID().toString());
  Mockito.when(secondAccountData.getCountry()).thenReturn(UUID.randomUUID().toString());
  Mockito.when(secondAccountData.getPostalCode()).thenReturn(UUID.randomUUID().toString());
  Mockito.when(secondAccountData.getPhone()).thenReturn(UUID.randomUUID().toString());
  Mockito.when(secondAccountData.isMigrated()).thenReturn(false);
  Mockito.when(secondAccountData.isNotifiedForInvoices()).thenReturn(true);
  return secondAccountData;
}
