{
  final UUID subscriptionId=UUID.randomUUID();
  final Subscription subscription=new Subscription();
  subscription.setAccountId(UUID.randomUUID());
  subscription.setSubscriptionId(subscriptionId);
  subscription.setProductName("Pistol");
  subscription.setProductCategory(ProductCategory.BASE);
  subscription.setBillingPeriod(BillingPeriod.ANNUAL);
  subscription.setPriceList(PriceListSet.DEFAULT_PRICELIST_NAME);
  try {
    killBillClient.updateSubscription(subscription,CALL_COMPLETION_TIMEOUT_SEC,createdBy,reason,comment);
    Assert.fail();
  }
 catch (  final KillBillClientException e) {
    Assert.assertEquals(e.getBillingException().getClassName(),"java.lang.IllegalStateException");
  }
  try {
    killBillClient.cancelSubscription(subscriptionId,createdBy,reason,comment);
    Assert.fail();
  }
 catch (  final KillBillClientException e) {
    Assert.assertEquals(e.getBillingException().getClassName(),"java.lang.IllegalStateException");
  }
  try {
    killBillClient.getSubscription(subscriptionId);
    Assert.fail();
  }
 catch (  final KillBillClientException e) {
    Assert.assertEquals(e.getBillingException().getClassName(),"java.lang.IllegalStateException");
  }
}
