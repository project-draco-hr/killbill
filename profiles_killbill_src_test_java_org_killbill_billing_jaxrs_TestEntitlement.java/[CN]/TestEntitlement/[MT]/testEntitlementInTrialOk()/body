{
  final DateTime initialDate=new DateTime(2012,4,25,0,3,42,0);
  clock.setDeltaFromReality(initialDate.getMillis() - clock.getUTCNow().getMillis());
  final Account accountJson=createAccountWithDefaultPaymentMethod();
  final String productName="Shotgun";
  final BillingPeriod term=BillingPeriod.MONTHLY;
  final Subscription entitlementJson=createEntitlement(accountJson.getAccountId(),"99999",productName,ProductCategory.BASE,term,true);
  Subscription objFromJson=killBillClient.getSubscription(entitlementJson.getSubscriptionId());
  Assert.assertEquals(objFromJson.getPriceOverrides().size(),2);
  Assert.assertEquals(objFromJson.getPriceOverrides().get(0).getFixedPrice(),BigDecimal.ZERO);
  Assert.assertNull(objFromJson.getPriceOverrides().get(0).getRecurringPrice());
  Assert.assertNull(objFromJson.getPriceOverrides().get(1).getFixedPrice());
  Assert.assertEquals(objFromJson.getPriceOverrides().get(1).getRecurringPrice(),new BigDecimal("249.95"));
  objFromJson.setPriceOverrides(null);
  entitlementJson.setPriceOverrides(null);
  Assert.assertTrue(objFromJson.equals(entitlementJson));
  final String newProductName="Assault-Rifle";
  final Subscription newInput=new Subscription();
  newInput.setAccountId(entitlementJson.getAccountId());
  newInput.setSubscriptionId(entitlementJson.getSubscriptionId());
  newInput.setProductName(newProductName);
  newInput.setProductCategory(ProductCategory.BASE);
  newInput.setBillingPeriod(entitlementJson.getBillingPeriod());
  newInput.setPriceList(entitlementJson.getPriceList());
  objFromJson=killBillClient.updateSubscription(newInput,CALL_COMPLETION_TIMEOUT_SEC,createdBy,reason,comment);
  Assert.assertNotNull(objFromJson);
  final Interval it=new Interval(clock.getUTCNow(),clock.getUTCNow().plusDays(31));
  clock.addDeltaFromReality(it.toDurationMillis());
  crappyWaitForLackOfProperSynchonization();
  killBillClient.cancelSubscription(newInput.getSubscriptionId(),CALL_COMPLETION_TIMEOUT_SEC,createdBy,reason,comment);
  objFromJson=killBillClient.getSubscription(entitlementJson.getSubscriptionId());
  assertNotNull(objFromJson.getCancelledDate());
  assertTrue(objFromJson.getCancelledDate().compareTo(new LocalDate(clock.getUTCNow())) == 0);
}
