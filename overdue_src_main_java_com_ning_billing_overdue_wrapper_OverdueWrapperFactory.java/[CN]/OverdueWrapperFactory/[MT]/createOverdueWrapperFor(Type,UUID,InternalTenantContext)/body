{
  try {
switch (type) {
case SUBSCRIPTION_BUNDLE:
{
        final SubscriptionBundle bundle=subscriptionApi.getBundleFromId(id,context);
        return (OverdueWrapper<T>)new OverdueWrapper<SubscriptionBundle>(bundle,api,getOverdueStateSetBundle(),clock,billingStateCalcuatorBundle,overdueStateApplicatorBundle);
      }
default :
{
      throw new OverdueException(ErrorCode.OVERDUE_TYPE_NOT_SUPPORTED,id,type);
    }
}
}
 catch (SubscriptionBaseApiException e) {
throw new OverdueException(e);
}
}
