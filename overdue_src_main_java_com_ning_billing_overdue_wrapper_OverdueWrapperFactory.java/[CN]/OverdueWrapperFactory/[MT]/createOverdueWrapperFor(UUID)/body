{
  final BlockingState state=api.getBlockingStateFor(id);
  try {
switch (state.getType()) {
case SUBSCRIPTION_BUNDLE:
{
        final SubscriptionBundle bundle=entitlementApi.getBundleFromId(id);
        return (OverdueWrapper<T>)new OverdueWrapper<SubscriptionBundle>(bundle,api,getOverdueStateSetBundle(),clock,billingStateCalcuatorBundle,overdueStateApplicatorBundle);
      }
default :
{
      throw new OverdueError(ErrorCode.OVERDUE_TYPE_NOT_SUPPORTED,id,state.getType());
    }
}
}
 catch (EntitlementUserApiException e) {
throw new OverdueError(e);
}
}
