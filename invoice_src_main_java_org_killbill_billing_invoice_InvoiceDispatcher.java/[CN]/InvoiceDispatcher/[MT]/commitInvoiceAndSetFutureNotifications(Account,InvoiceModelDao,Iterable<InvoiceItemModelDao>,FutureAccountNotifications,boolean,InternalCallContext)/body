{
  final Iterable<InvoiceItemModelDao> filteredInvoiceItemModelDaos=Iterables.filter(invoiceItemModelDaos,new Predicate<InvoiceItemModelDao>(){
    @Override public boolean apply(    @Nullable final InvoiceItemModelDao input){
      return (input.getType() != InvoiceItemType.USAGE || input.getAmount().compareTo(BigDecimal.ZERO) != 0);
    }
  }
);
  final boolean isThereAnyItemsLeft=filteredInvoiceItemModelDaos.iterator().hasNext();
  if (isThereAnyItemsLeft) {
    invoiceDao.createInvoice(invoiceModelDao,ImmutableList.copyOf(filteredInvoiceItemModelDaos),isRealInvoiceWithItems,futureAccountNotifications,context);
  }
 else {
    invoiceDao.setFutureAccountNotificationsForEmptyInvoice(account.getId(),futureAccountNotifications,context);
  }
  return isThereAnyItemsLeft;
}
