{
  final ByteArrayInputStream byteStream=new ByteArrayInputStream(samples);
  final DataInputStream inputStream=new DataInputStream(byteStream);
  final TimelineCursor timeCursor=new DefaultTimelineCursor(times,sampleCount);
  int sampleNumber=0;
  while (true) {
    final int opcodeByte;
    opcodeByte=inputStream.read();
    if (opcodeByte == -1) {
      return;
    }
    final SampleOpcode opcode=SampleOpcode.getOpcodeFromIndex(opcodeByte);
switch (opcode) {
case REPEAT_BYTE:
case REPEAT_SHORT:
      final int repeatCount=opcode == SampleOpcode.REPEAT_BYTE ? inputStream.readUnsignedByte() : inputStream.readUnsignedShort();
    final SampleOpcode repeatedOpcode=SampleOpcode.getOpcodeFromIndex(inputStream.read());
  final Object value=decodeScalarValue(inputStream,repeatedOpcode);
final SampleOpcode replacementOpcode=repeatedOpcode.getReplacement();
processor.processSamples(timeCursor,repeatCount,replacementOpcode,value);
sampleNumber+=repeatCount;
timeCursor.skipToSampleNumber(sampleNumber);
break;
default :
processor.processSamples(timeCursor,1,opcode.getReplacement(),decodeScalarValue(inputStream,opcode));
break;
}
}
}
