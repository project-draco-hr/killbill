{
  if (value == 0.0) {
    return DOUBLE_ZERO_SAMPLE;
  }
  final boolean integral=value >= MIN_SHORT_DOUBLE_VALUE && value <= MAX_SHORT_DOUBLE_VALUE && (Math.abs((value - (double)((int)value)) / value) <= MAX_FRACTION_ERROR);
  if (integral && value >= MIN_BYTE_DOUBLE_VALUE && value <= MAX_BYTE_DOUBLE_VALUE) {
    return new ScalarSample<Byte>(SampleOpcode.BYTE_FOR_DOUBLE,(byte)value);
  }
 else   if (integral && value >= MIN_SHORT_DOUBLE_VALUE && value <= MAX_SHORT_DOUBLE_VALUE) {
    return new ScalarSample<Short>(SampleOpcode.SHORT_FOR_DOUBLE,(short)value);
  }
 else {
    final int halfFloatValue=HalfFloat.fromFloat((float)value);
    if ((Math.abs(value - HalfFloat.toFloat(halfFloatValue)) / value) <= MAX_FRACTION_ERROR) {
      return new ScalarSample<Short>(SampleOpcode.HALF_FLOAT_FOR_DOUBLE,(short)halfFloatValue);
    }
 else     if (value >= Float.MIN_VALUE && value <= Float.MAX_VALUE) {
      return new ScalarSample<Float>(SampleOpcode.FLOAT_FOR_DOUBLE,(float)value);
    }
 else {
      return sample;
    }
  }
}
