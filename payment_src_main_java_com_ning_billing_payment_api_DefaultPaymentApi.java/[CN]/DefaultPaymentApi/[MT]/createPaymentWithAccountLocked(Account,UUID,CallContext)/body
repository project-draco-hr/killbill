{
  try {
    final PaymentProviderPlugin plugin=getPaymentProviderPlugin(account);
    Invoice invoice=invoicePaymentApi.getInvoice(invoiceId);
    if (invoice.isMigrationInvoice()) {
      log.error("Received invoice for payment that is a migration invoice - don't know how to handle those yet: {}",invoice);
      return null;
    }
    PaymentInfoEvent result=null;
    if (invoice.getBalance().compareTo(BigDecimal.ZERO) > 0) {
      PaymentAttempt paymentAttempt=paymentDao.createPaymentAttempt(invoice,PaymentAttemptStatus.IN_PROCESSING,context);
      result=processPaymentWithAccountLocked(plugin,account,invoice,paymentAttempt,context);
    }
    return result;
  }
 catch (  PaymentPluginApiException e) {
    throw new PaymentApiException(e,ErrorCode.PAYMENT_CREATE_PAYMENT,account.getId(),e.getMessage());
  }
}
