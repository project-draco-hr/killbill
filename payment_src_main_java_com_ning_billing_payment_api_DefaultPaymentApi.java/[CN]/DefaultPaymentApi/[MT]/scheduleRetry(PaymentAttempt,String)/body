{
  final List<Integer> retryDays=config.getPaymentRetryDays();
  int retryCount=0;
  if (paymentAttempt.getRetryCount() != null) {
    retryCount=paymentAttempt.getRetryCount();
  }
  if (retryCount < retryDays.size()) {
    int retryInDays=0;
    DateTime nextRetryDate=new DateTime(DateTimeZone.UTC);
    try {
      retryInDays=retryDays.get(retryCount);
      nextRetryDate=nextRetryDate.plusDays(retryInDays);
    }
 catch (    NumberFormatException ex) {
      log.error("Could not get retry day for retry count {}",retryCount);
    }
    paymentDao.updatePaymentAttemptWithRetryInfo(paymentAttempt.getPaymentAttemptId(),retryCount + 1,nextRetryDate);
  }
 else   if (retryCount == retryDays.size()) {
    log.info("Last payment retry failed for {} ",paymentAttempt);
  }
 else {
    log.error("Cannot update payment retry information because retry count is invalid {} ",retryCount);
  }
}
