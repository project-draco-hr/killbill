{
  PaymentInfoEvent paymentInfo=null;
  try {
    paymentInfo=new DefaultPaymentInfoEvent(plugin.processInvoice(account,invoice),account.getId(),invoice.getId());
  }
 catch (  PaymentPluginApiException e) {
    log.info("Could not process a payment for " + paymentAttempt + ", error was "+ e.getMessage());
    scheduleRetry(paymentAttempt);
    throw e;
  }
  paymentDao.savePaymentInfo(paymentInfo,context);
  final String paymentMethodId=paymentInfo.getPaymentMethodId();
  log.debug("Fetching payment method info for payment method id " + ((paymentMethodId == null) ? "null" : paymentMethodId));
  PaymentMethodInfo paymentMethodInfo=plugin.getPaymentMethodInfo(paymentMethodId);
  if (paymentMethodInfo instanceof CreditCardPaymentMethodInfo) {
    CreditCardPaymentMethodInfo ccPaymentMethod=(CreditCardPaymentMethodInfo)paymentMethodInfo;
    paymentDao.updatePaymentInfo(ccPaymentMethod.getType(),paymentInfo.getPaymentId(),ccPaymentMethod.getCardType(),ccPaymentMethod.getCardCountry(),context);
  }
 else   if (paymentMethodInfo instanceof PaypalPaymentMethodInfo) {
    PaypalPaymentMethodInfo paypalPaymentMethodInfo=(PaypalPaymentMethodInfo)paymentMethodInfo;
    paymentDao.updatePaymentInfo(paypalPaymentMethodInfo.getType(),paymentInfo.getPaymentId(),null,null,context);
  }
  if (paymentInfo.getPaymentId() != null) {
    paymentDao.updatePaymentAttemptWithPaymentId(paymentAttempt.getPaymentAttemptId(),paymentInfo.getPaymentId(),context);
  }
  invoicePaymentApi.notifyOfPaymentAttempt(invoice.getId(),paymentInfo == null || paymentInfo.getStatus().equalsIgnoreCase("Error") ? null : paymentInfo.getAmount(),paymentInfo == null || paymentInfo.getStatus().equalsIgnoreCase("Error") ? null : invoice.getCurrency(),paymentAttempt.getPaymentAttemptId(),paymentAttempt.getPaymentAttemptDate(),context);
  return paymentInfo;
}
