{
  try {
    final LocalDate initialDate=new LocalDate(2013,8,7);
    clock.setDay(initialDate);
    final Account account=accountApi.createAccount(getAccountData(7),callContext);
    final PlanPhaseSpecifier spec=new PlanPhaseSpecifier("Shotgun",ProductCategory.BASE,BillingPeriod.MONTHLY,PriceListSet.DEFAULT_PRICELIST_NAME,null);
    final Entitlement entitlement=entitlementApi.createBaseEntitlement(account.getId(),spec,account.getExternalKey(),initialDate,callContext);
    final DateTime ctd=clock.getUTCNow().plusDays(30).plusMonths(1);
    testListener.pushExpectedEvent(NextEvent.PHASE);
    clock.addDays(32);
    subscriptionInternalApi.setChargedThroughDate(entitlement.getId(),ctd,internalCallContext);
    assertTrue(testListener.isCompleted(5000));
    final Entitlement entitlement2=entitlementApi.getEntitlementForId(entitlement.getId(),callContext);
    final Entitlement entitlement3=entitlement2.cancelEntitlementWithPolicy(EntitlementActionPolicy.END_OF_TERM,callContext);
    assertEquals(entitlement3.getState(),EntitlementState.ACTIVE);
    assertEquals(entitlement3.getEffectiveEndDate(),new LocalDate(ctd));
    clock.addMonths(1);
    final Entitlement entitlement4=entitlementApi.getEntitlementForId(entitlement.getId(),callContext);
    assertEquals(entitlement4.getState(),EntitlementState.CANCELLED);
    assertEquals(entitlement4.getEffectiveEndDate(),new LocalDate(ctd));
  }
 catch (  EntitlementApiException e) {
    Assert.fail("Test failed " + e.getMessage());
  }
catch (  AccountApiException e) {
    Assert.fail("Test failed " + e.getMessage());
  }
}
