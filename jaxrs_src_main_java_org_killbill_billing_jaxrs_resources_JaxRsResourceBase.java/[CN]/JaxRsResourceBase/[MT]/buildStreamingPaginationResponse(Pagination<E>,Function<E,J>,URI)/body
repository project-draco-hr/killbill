{
  final StreamingOutput json=new StreamingOutput(){
    @Override public void write(    final OutputStream output) throws IOException, WebApplicationException {
      final JsonGenerator generator=mapper.getFactory().createJsonGenerator(output);
      generator.configure(JsonGenerator.Feature.AUTO_CLOSE_TARGET,false);
      generator.writeStartArray();
      for (      final E entity : entities) {
        final J asJson=toJson.apply(entity);
        if (asJson != null) {
          generator.writeObject(asJson);
        }
      }
      generator.writeEndArray();
      generator.close();
    }
  }
;
  return Response.status(Status.OK).entity(json).header(HDR_PAGINATION_CURRENT_OFFSET,entities.getCurrentOffset()).header(HDR_PAGINATION_NEXT_OFFSET,entities.getNextOffset()).header(HDR_PAGINATION_TOTAL_NB_RECORDS,entities.getTotalNbRecords()).header(HDR_PAGINATION_MAX_NB_RECORDS,entities.getMaxNbRecords()).header(HDR_PAGINATION_NEXT_PAGE_URI,nextPageUri).build();
}
