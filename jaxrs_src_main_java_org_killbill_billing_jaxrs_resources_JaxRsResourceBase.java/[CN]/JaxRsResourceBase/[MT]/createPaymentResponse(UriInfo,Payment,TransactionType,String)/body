{
  final PaymentTransaction createdTransaction=findCreatedTransaction(payment,transactionType,transactionExternalKey);
  Preconditions.checkNotNull(createdTransaction,"No transaction of type '%s' found",transactionType);
  final ResponseBuilder responseBuilder;
  final BillingExceptionJson exception;
switch (createdTransaction.getTransactionStatus()) {
case PENDING:
case SUCCESS:
    return uriBuilder.buildResponse(uriInfo,PaymentResource.class,"getPayment",payment.getId());
case PAYMENT_FAILURE:
  responseBuilder=Response.status(402);
exception=createBillingException(String.format("Payment decline by gateway. Error message: %s",createdTransaction.getGatewayErrorMsg()));
break;
case PAYMENT_SYSTEM_OFF:
responseBuilder=Response.status(Status.SERVICE_UNAVAILABLE);
exception=createBillingException("Payment system is off.");
break;
case UNKNOWN:
responseBuilder=Response.status(Status.SERVICE_UNAVAILABLE);
exception=createBillingException("Payment in unknown status, failed to receive gateway response.");
break;
case PLUGIN_FAILURE:
responseBuilder=Response.status(502);
exception=createBillingException("Failed to submit payment transaction");
break;
default :
responseBuilder=Response.serverError();
exception=createBillingException("This should never have happened!!!");
}
addExceptionToResponse(responseBuilder,exception);
return responseBuilder.location(getPaymentLocation(uriInfo,payment)).build();
}
