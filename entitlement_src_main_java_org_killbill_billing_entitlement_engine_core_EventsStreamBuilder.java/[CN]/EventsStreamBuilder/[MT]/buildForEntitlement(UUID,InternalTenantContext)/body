{
  final SubscriptionBaseBundle bundle;
  final SubscriptionBase subscription;
  final List<SubscriptionBase> allSubscriptionsForBundle;
  final SubscriptionBase baseSubscription;
  try {
    subscription=subscriptionInternalApi.getSubscriptionFromId(entitlementId,internalTenantContext);
    bundle=subscriptionInternalApi.getBundleFromId(subscription.getBundleId(),internalTenantContext);
    allSubscriptionsForBundle=subscriptionInternalApi.getSubscriptionsForBundle(subscription.getBundleId(),null,internalTenantContext);
    baseSubscription=findBaseSubscription(allSubscriptionsForBundle);
  }
 catch (  SubscriptionBaseApiException e) {
    throw new EntitlementApiException(e);
  }
  final Account account;
  try {
    account=accountInternalApi.getAccountById(bundle.getAccountId(),internalTenantContext);
  }
 catch (  AccountApiException e) {
    throw new EntitlementApiException(e);
  }
  final List<BlockingState> blockingStatesForAccount=defaultBlockingStateDao.getBlockingAllForAccountRecordId(internalTenantContext);
  return buildForEntitlement(blockingStatesForAccount,account,bundle,baseSubscription,subscription,allSubscriptionsForBundle,internalTenantContext);
}
