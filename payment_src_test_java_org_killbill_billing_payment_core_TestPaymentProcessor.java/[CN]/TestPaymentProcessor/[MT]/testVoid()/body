{
  final String paymentExternalKey=UUID.randomUUID().toString();
  final String authorizationKey=UUID.randomUUID().toString();
  final Payment authorization=paymentProcessor.createAuthorization(true,null,account,null,null,TEN,CURRENCY,paymentExternalKey,authorizationKey,SHOULD_LOCK_ACCOUNT,PLUGIN_PROPERTIES,callContext,internalCallContext);
  verifyPayment(authorization,paymentExternalKey,TEN,ZERO,ZERO,1);
  final UUID paymentId=authorization.getId();
  verifyPaymentTransaction(authorization.getTransactions().get(0),authorizationKey,TransactionType.AUTHORIZE,TEN,paymentId);
  paymentBusListener.verify(1,account.getId(),paymentId,TEN,TransactionStatus.SUCCESS);
  final String voidKey=UUID.randomUUID().toString();
  final Payment voidTransaction=paymentProcessor.createVoid(true,null,account,paymentId,voidKey,SHOULD_LOCK_ACCOUNT,PLUGIN_PROPERTIES,callContext,internalCallContext);
  verifyPayment(voidTransaction,paymentExternalKey,ZERO,ZERO,ZERO,2);
  verifyPaymentTransaction(voidTransaction.getTransactions().get(1),voidKey,TransactionType.VOID,null,paymentId);
  paymentBusListener.verify(2,account.getId(),paymentId,null,TransactionStatus.SUCCESS);
}
