{
  try {
    TimedMigration[] events=null;
    final Plan plan0=catalogService.getFullCatalog().findPlan(input[0].getPlanPhaseSpecifier().getProductName(),input[0].getPlanPhaseSpecifier().getBillingPeriod(),input[0].getPlanPhaseSpecifier().getPriceListName(),now);
    final Plan plan1=(input.length > 1) ? catalogService.getFullCatalog().findPlan(input[1].getPlanPhaseSpecifier().getProductName(),input[1].getPlanPhaseSpecifier().getBillingPeriod(),input[1].getPlanPhaseSpecifier().getPriceListName(),now) : null;
    DateTime migrationStartDate=now;
    if (isRegularMigratedSubscription(input)) {
      events=getEventsOnRegularMigration(plan0,getPlanPhase(plan0,input[0].getPlanPhaseSpecifier().getPhaseType()),input[0].getPlanPhaseSpecifier().getPriceListName(),now);
    }
 else     if (isRegularFutureCancelledMigratedSubscription(input)) {
      events=getEventsOnFuturePlanCancelMigration(plan0,getPlanPhase(plan0,input[0].getPlanPhaseSpecifier().getPhaseType()),input[0].getPlanPhaseSpecifier().getPriceListName(),now,input[0].getCancelledDate());
    }
 else     if (isPhaseChangeMigratedSubscription(input)) {
      final PhaseType curPhaseType=input[0].getPlanPhaseSpecifier().getPhaseType();
      Duration curPhaseDuration=null;
      for (      final PlanPhase cur : plan0.getAllPhases()) {
        if (cur.getPhaseType() == curPhaseType) {
          curPhaseDuration=cur.getDuration();
          break;
        }
      }
      if (curPhaseDuration == null) {
        throw new EntitlementMigrationApiException(String.format("Failed to compute current phase duration for plan %s and phase %s",plan0.getName(),curPhaseType));
      }
      migrationStartDate=DefaultClock.removeDuration(input[1].getEffectiveDate(),curPhaseDuration);
      events=getEventsOnFuturePhaseChangeMigration(plan0,getPlanPhase(plan0,input[0].getPlanPhaseSpecifier().getPhaseType()),input[0].getPlanPhaseSpecifier().getPriceListName(),migrationStartDate,input[1].getEffectiveDate());
    }
 else     if (isPlanChangeMigratedSubscription(input)) {
      events=getEventsOnFuturePlanChangeMigration(plan0,getPlanPhase(plan0,input[0].getPlanPhaseSpecifier().getPhaseType()),plan1,getPlanPhase(plan1,input[1].getPlanPhaseSpecifier().getPhaseType()),input[0].getPlanPhaseSpecifier().getPriceListName(),now,input[1].getEffectiveDate());
    }
 else {
      throw new EntitlementMigrationApiException("Unknown migration type");
    }
    return events;
  }
 catch (  CatalogApiException e) {
    throw new EntitlementMigrationApiException(e);
  }
}
