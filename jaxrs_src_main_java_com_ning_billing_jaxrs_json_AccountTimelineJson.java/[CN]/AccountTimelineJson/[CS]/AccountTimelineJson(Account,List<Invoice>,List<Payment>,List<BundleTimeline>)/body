{
  this.account=new AccountJsonSimple(account.getId().toString(),account.getExternalKey());
  this.bundles=new LinkedList<BundleJsonWithSubscriptions>();
  for (  final BundleTimeline cur : bundles) {
    this.bundles.add(new BundleJsonWithSubscriptions(account.getId(),cur));
  }
  this.invoices=new LinkedList<InvoiceJsonWithBundleKeys>();
  for (  final Invoice cur : invoices) {
    this.invoices.add(new InvoiceJsonWithBundleKeys(cur.getAmountPaid(),cur.getAmountCredited(),cur.getId().toString(),cur.getInvoiceDate(),cur.getTargetDate(),Integer.toString(cur.getInvoiceNumber()),cur.getBalance(),cur.getAccountId().toString(),getBundleExternalKey(cur,bundles)));
  }
  this.payments=new LinkedList<PaymentJsonWithBundleKeys>();
  for (  final Payment cur : payments) {
    final String status=cur.getPaymentStatus().toString();
    final BigDecimal paidAmount=cur.getPaymentStatus() == PaymentStatus.SUCCESS ? cur.getAmount() : BigDecimal.ZERO;
    this.payments.add(new PaymentJsonWithBundleKeys(cur.getAmount(),paidAmount,account.getId().toString(),cur.getInvoiceId().toString(),cur.getId().toString(),cur.getEffectiveDate(),cur.getEffectiveDate(),cur.getAttempts().size(),cur.getCurrency().toString(),status,getBundleExternalKey(cur.getInvoiceId(),invoices,bundles)));
  }
}
